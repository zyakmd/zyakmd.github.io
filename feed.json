{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "subtitle": "",
    "icon": "http://example.com/images/favicon.ico",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/03/07/hexo%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%AB%99%E6%A0%B7%E5%BC%8F/",
            "url": "http://example.com/2024/03/07/hexo%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%AB%99%E6%A0%B7%E5%BC%8F/",
            "title": "网站样式",
            "date_published": "2024-03-07T12:49:38.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\">shoka</span> 样式，交互爽，好看又不乱，老早就馋了。</p>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<p><code>git clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</code></p>\n<h1 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h1>\n<ol>\n<li>卸载掉默认的  <code>hexo-renderer-marked</code>  (有默认的路径处理，不行就回退)\n<ul>\n<li><code>npm un hexo-renderer-marked --save</code></li>\n<li><img data-src=\"image-20240307211424587.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>安装  <code>npm i hexo-renderer-multi-markdown-it --save</code>\n<ul>\n<li>遇到 Error: read ECONNRESET，网上是： <code>npm config set registry http://registry.npmjs.org/</code>  更新代理</li>\n<li>后细读发现是 puppeteer 安装问题，原文有提及，不使用 mermaid，加上 --ignore-scripts 忽略即可</li>\n</ul>\n</li>\n<li>按原文<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kZXBlbmRlbnRzLw==\">依赖插件</span>安装插件，并且添加 / 更改相应的 yaml 配置</li>\n<li>theme: shoka # 默认：landscape<br />\n<img data-src=\"image-20240307214022436.png\" alt=\"\" /></li>\n</ol>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9waWdwaWdsZXRzZ28uZ2l0aHViLmlvL2hleG8vc2hva2EvJUU5JTg1JThEJUU3JUJEJUFFc2hva2ElRTQlQjglQkIlRTklQTIlOTgv\">https://pigpigletsgo.github.io/hexo/shoka/ 配置 shoka 主题 /</span></p>\n<p>后续</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcv\">基本配置</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcv\">界面设置</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpbnlmbG92ZS9hcnRpY2xlL2RldGFpbHMvMTA4NzkxOTcw\">https://blog.csdn.net/xinyflove/article/details/108791970</span></li>\n</ul>\n",
            "tags": [
                "hexo使用"
            ]
        },
        {
            "id": "http://example.com/2024/03/07/hexo%E4%BD%BF%E7%94%A8/%E5%9C%A8obisidian%E4%B8%8A%E4%BD%BF%E7%94%A8/",
            "url": "http://example.com/2024/03/07/hexo%E4%BD%BF%E7%94%A8/%E5%9C%A8obisidian%E4%B8%8A%E4%BD%BF%E7%94%A8/",
            "title": "在obisidian上使用",
            "date_published": "2024-03-07T08:44:47.000Z",
            "content_html": "<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NTQzMzM4MDU=\">Obsidian+Git 完美维护 Hexo 博客 - 知乎</span></p>\n<h1 id=\"模板\"><a class=\"anchor\" href=\"#模板\">#</a> 模板</h1>\n<p>用 hexo 命令创建会自带文档属性，用 obisidian 就是空白文档，但可以写个模板，直接插入，也不费多少事，免得还要去根目录开 bash。</p>\n<p>创建一个模板文件夹如 Template，创建模板文件：<br />\n编辑源码模式下，输入以下。title 就是文章名，date 在 obisidian 设置中自定义的日期</p>\n<figure class=\"highlight md\"><figcaption data-lang=\"Markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token front-matter yaml language-yaml\">title: 在obisidian上使用</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>date: 1709801087000</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>categories: </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>tags:</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">---</span></span></pre></td></tr></table></figure><p><img data-src=\"a.png\" alt=\"\" /></p>\n<h1 id=\"目录维护\"><a class=\"anchor\" href=\"#目录维护\">#</a> 目录维护</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTIwMTg5NjE0NjYwMjU1Nzgx\">Hexo + Obsidian + Git 完美的博客部署与编辑方案 - 掘金</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmVzb24ub3JnL3B1Yi9lMmY2ZTIzOS8=\">【Hexo 插件系列】日志的自动分类插件 hexo-auto-category | ESON</span></p>\n<p>使用 <code>hexo-auto-category</code>  根据文件目录自动生成 categories 信息。<br />\n对于博客  <code>source/_post/web/framework/hexo.md</code> ，该插件会自动生成以下 <code>categories</code></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> web  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">-</span> framework</pre></td></tr></table></figure><p>安装： <code>npm install hexo-auto-category --save</code> <br />\n 在  _config.yml 中添加</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Generate categories from directory-tree</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Dependencies: https://github.com/xu-song/hexo-auto-category</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># depth: the depth of directory-tree you want to generate, should > 0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">auto_category</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> depth<span class=\"token punctuation\">:</span></pre></td></tr></table></figure><p>如果只想生成第一级目录分类，可以设置 <code>depth</code>  属性为 1，以此内推。</p>\n<h1 id=\"图片\"><a class=\"anchor\" href=\"#图片\">#</a> 图片</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyMzU3MjE3L2FydGljbGUvZGV0YWlscy8xMjc1NjIxNjM=\"># 如何让 Obsidian 的图片存储形式设置为 ./${filename}.assets</span><br />\n 头大的是这个，在上一篇文章中已经用了插件，相比自己手动更改 html 中的路径方便，但平时截图命名是用时间，待数字，其次 obsidian 默认存放位置固定，还需要手动移动文件和写引用。</p>\n<h2 id=\"位置\"><a class=\"anchor\" href=\"#位置\">#</a> 位置</h2>\n<ol>\n<li>关闭  <code>使用 Wiki 链接</code></li>\n<li>使用插件 Custom Attachment Location（里面还有自动为粘贴的图像重命名的功能）</li>\n<li filename=\"\">在↑设置中的 Location xx：./$</li>\n<li>设置 “文件与链接” 中附件选 “当前文件所在文件夹的子文件夹”，然后留空（由上面的插件自动填入了）</li>\n<li>设置 “文件与链接” 中内部链接类型选 “尽可能短的方式”</li>\n</ol>\n<p>Q：好像不支持中文，那就跟目录维护的冲突了，无法起中文名文件夹。不用 CATEGORIES，自行管理 categories？<br />\nA：但好像可以</p>\n<h2 id=\"路径\"><a class=\"anchor\" href=\"#路径\">#</a> 路径</h2>\n<p>改用<br />\n <code>npm install hexo-renderer-marked --save</code> <br />\n 可行，且极好用<br />\n见：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLXJlbmRlcmVyLW1hcmtlZA==\">hexo-renderer-marked</span>，有丰富的扩展选项<br />\n_config 设置这两个。</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">marked</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">prependRoot</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">postAsset</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><p><img data-src=\"image-20240307202119236.png\" alt=\"\" /></p>\n<h1 id=\"文内链接\"><a class=\"anchor\" href=\"#文内链接\">#</a> 文内链接</h1>\n<p>obisidian 的双向链接 [[]] 怎么处理，只能换成</p>\n",
            "tags": [
                "hexo使用"
            ]
        },
        {
            "id": "http://example.com/2024/03/06/hexo%E4%BD%BF%E7%94%A8/hexo+github/",
            "url": "http://example.com/2024/03/06/hexo%E4%BD%BF%E7%94%A8/hexo+github/",
            "title": "hexo + github 博客搭建",
            "date_published": "2024-03-06T11:57:31.000Z",
            "content_html": "<blockquote>\n<p>Hexo 是一个快速、简洁且高效的 <strong>博客框架</strong>。它使用 Markdown（或其他渲染引擎）解析文章，在数秒内，即可使用靓丽的主题生成静态网页<br />\n参考：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d1c2hpYm8xMjMvYXJ0aWNsZS9kZXRhaWxzLzEyNDYxOTEyMw==\">【2023 最新版】Hexo+github 搭建个人博客并绑定个人域名_hexo 部署 github 绑定自定义域名 - CSDN 博客</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzExOTg2NzM=\"> Hexo 系列 (一) 搭建博客网站 - 阿里云开发者社区</span></p>\n</blockquote>\n<h1 id=\"npm-设置\"><a class=\"anchor\" href=\"#npm-设置\">#</a> npm 设置</h1>\n<p>NPM 是随同 NodeJS 一起安装的包管理工具，能解决 NodeJS 代码部署上的很多问题，常见的使用场景有以下几种：</p>\n<ul>\n<li>允许用户从 NPM 服务器下载别人编写的第三方包到本地使用。</li>\n<li>允许用户从 NPM 服务器下载并安装别人编写的命令行程序到本地使用。</li>\n<li>允许用户将自己编写的包或命令行程序上传到 NPM 服务器供别人使用。</li>\n</ul>\n<p><code>npm config set prefix &quot;C:\\Program Files\\nodejs\\node_global&quot;</code> <br />\n <code>npm config set cache &quot;C:\\Program Files\\nodejs\\node_cache&quot;</code> <br />\n 设置在这↑会有权限问题，麻烦。更改到外部↓<br />\n <code>npm config set prefix &quot;D:\\nodejs\\prefix&quot;</code> <br />\n <code>npm config set cache &quot;D:\\nodejs\\cache&quot;</code></p>\n<h1 id=\"hexo\"><a class=\"anchor\" href=\"#hexo\">#</a> Hexo</h1>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<p><code>npm install -g hexo</code></p>\n<p><img data-src=\"test.png\" alt=\"t\" /></p>\n<p>在 node 开发中使用 npm init 会生成一个 pakeage.json 文件，这个文件主要是用来记录这个项目的详细信息的，它会将我们在项目开发中所要用到的包，以及项目的详细信息等记录在这个项目中。<br />\n <code>hexo init</code>  命令可以将该文件夹初始化为 Hexo 根目录<br />\n <code>npm install</code>  命令可以自动安装依赖列表中列出的所有模块</p>\n<h2 id=\"测试\"><a class=\"anchor\" href=\"#测试\">#</a> 测试</h2>\n<p>输入命令  <code>hexo s</code>  启动本地站点<br />\n在浏览器地址栏中输入 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==\">http://localhost:4000/</span>， 就可以看到站点在本地运行的结果了</p>\n<h2 id=\"部署github\"><a class=\"anchor\" href=\"#部署github\">#</a> 部署 github</h2>\n<p>GitHub 提供了一项名为 GitHub Pages 的服务，它允许用户自定义项目首页替代默认的源码列表<br />\n因此，GitHub Pages 可以被认为是由用户编写的、托管在 GitHub 上的静态网页<br />\n而我们的目的，正是要把用 Hexo 在本地搭建的网站部署到 Github 上，使得站点可以被公共访问</p>\n<h3 id=\"本地配置-个人信息\"><a class=\"anchor\" href=\"#本地配置-个人信息\">#</a> 本地配置 个人信息</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config user.name <span class=\"token string\">\"your-username\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config user.email <span class=\"token string\">\"your-email-address\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 都有时优先用本地，但全局必须有</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"your-username\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"your-email-address\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 查看配置</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 获取默认配置，如果当前地址中仓库信息不存在，则查看全局，然后再读取系统配置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--list</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 本地仓库配置 高优先级</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--local</span> <span class=\"token parameter variable\">--list</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 全局用户配置 中优先级</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--list</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 系统配置 低优先级</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--system</span> <span class=\"token parameter variable\">--list</span></pre></td></tr></table></figure><h3 id=\"安装插件\"><a class=\"anchor\" href=\"#安装插件\">#</a> 安装插件</h3>\n<p><code>npm install hexo-deployer-git --save</code></p>\n<h3 id=\"修改配置\"><a class=\"anchor\" href=\"#修改配置\">#</a> 修改配置</h3>\n<p><strong>根目录</strong> 下的  <code>_config.yml</code>  文件<br />\n属性与值之间需要留有一个空格</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/&lt;git_name<span class=\"token punctuation\">></span>/&lt;repositories_name<span class=\"token punctuation\">></span>.github.io.git</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\"># 设置默认的 main，不然会推到别的仓库去，只有在默认的才能在 xx.io 看到</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main</pre></td></tr></table></figure><h3 id=\"配置ssh\"><a class=\"anchor\" href=\"#配置ssh\">#</a> 配置 ssh</h3>\n<p>进入站点根文件夹，打开 git bash，输入  <code>ssh-keygen -t rsa -C &quot;your_email&quot;</code>  命令并一路回车获得密钥<br />\n完成后，根据提示信息中的文件地址  <code>/c/Users/user/.ssh/id_rsa.pub</code>  找到 id_rsa.pub 文件，复制文件里面的内容。<br />\n然后 g 在 ithub 设置中添加该 key，测试：</p>\n<p><img data-src=\"key.png\" alt=\"\" /></p>\n<h3 id=\"更换主题\"><a class=\"anchor\" href=\"#更换主题\">#</a> 更换主题</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzExOTg3NTY/c3BtPWEyYzZoLjI0ODc0NjMyLmV4cGVydC1wcm9maWxlLjMyLjM2Y2E0MDlhS2E0NGM4\">Hexo 系列 (四) NexT 主题配置 - 阿里云开发者社区</span></p>\n<h3 id=\"编译和发布网页\"><a class=\"anchor\" href=\"#编译和发布网页\">#</a> 编译和发布网页</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzExOTg3OTY/c3BtPWEyYzZoLjI0ODc0NjMyLmV4cGVydC1wcm9maWxlLjMxLjM2Y2E0MDlhS2E0NGM4\">Hexo 系列 (五) 撰写文章 - 阿里云开发者社区</span></p>\n<p>git bash 中输入命令  <code>hexo g</code>  生成静态文件，输入命令  <code>hexo d</code>  部署到 Github<br />\n 此时，打开 <span class=\"exturl\" data-url=\"aHR0cHM6Ly91c2VybmFtZS5naXRodWIuaW8=\">https://username.github.io</span> 就可以看见已经部署好的网站了，大功告成</p>\n<p>期间遇到了一下问题：</p>\n<p><img data-src=\"bushu.png\" alt=\"\" /></p>\n<p>产生原因：一般是这是因为服务器的 SSL 证书没有经过第三方机构的签署，所以才报错<br />\n解决方法 1：<br />\ngit config --global http.sslVerify &quot;false&quot;</p>\n<p>解决方法 2：取消 git 的代理</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//取消http代理 </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> http.proxy </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//取消https代理 </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> https.proxy</pre></td></tr></table></figure><p>取消 https 代理后 ok</p>\n<h2 id=\"常用命令\"><a class=\"anchor\" href=\"#常用命令\">#</a> 常用命令</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo clean <span class=\"token comment\">#用来清理缓存文件 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo generate <span class=\"token comment\">#生成文件 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hexo server <span class=\"token comment\">#运行本地服务器 </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>hexo deploy <span class=\"token comment\">#上传到服务器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>hexo new <span class=\"token operator\">&lt;</span>paper_name<span class=\"token operator\">></span> <span class=\"token comment\">#新建文章</span></pre></td></tr></table></figure><h2 id=\"图片问题\"><a class=\"anchor\" href=\"#图片问题\">#</a> 图片问题</h2>\n<p>见 [[在 obisidian 上使用]]</p>\n<p>不中↓<br />\n参考：</p>\n<pre><code>[路径中有空格时，因为markdown需要encode空格的原因，会匹配失败 · Issue #3 · yiyungent/hexo-asset-img · GitHub](https://github.com/yiyungent/hexo-asset-img/issues/3)\n[GitHub - yiyungent/hexo-asset-img: 🍰 Hexo local image plugin. | Hexo 本地图片插件: 转换 图片相对路径 为 asset_img](https://github.com/yiyungent/hexo-asset-img)\n</code></pre>\n<p>安装 hexo-asset-img:   <code>npm install hexo-asset-img --save （过时了）</code> <br />\n用最新的： <code>npm install git://github.com/yiyungent/hexo-asset-img.git#main</code> <br />\n 在 md 文件目录下创建同名文件夹（添加该模块后 hexo g 也会自动生成）放图片。<br />\nmd 中调用：</p>\n<figure class=\"highlight md\"><figcaption data-lang=\"Markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">name</span>](<span class=\"token url\">md_name/pic_name.png</span>)</span></pre></td></tr></table></figure><p><strong>注意：</strong> 图片名字和 title 不能有数字，否则会导致图像宽度变成 1，见上面 github 中的第一个 issue。</p>\n<p>纯 html 格式，能调整大小、位置，但编译成静态资源路径有问题</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>center<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span><span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>650px</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>center<span class=\"token punctuation\">'</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span><span class=\"token value css language-css\"><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span><span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span>kaiti<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span><span class=\"token color\">red</span></span><span class=\"token punctuation\">'</span></span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure>",
            "tags": [
                "hexo使用"
            ]
        },
        {
            "id": "http://example.com/2024/03/06/hello-world/",
            "url": "http://example.com/2024/03/06/hello-world/",
            "title": "Hello World",
            "date_published": "2024-03-06T08:34:08.722Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}