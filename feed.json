{
    "version": "https://jsonfeed.org/version/1",
    "title": "世界上只有一种真正的英雄主义，就是认清了生活的真相后还依然热爱它",
    "subtitle": "",
    "icon": "https://zyakmd.github.io/images/favicon.ico",
    "description": "行到水穷处，坐看云起时",
    "home_page_url": "https://zyakmd.github.io",
    "items": [
        {
            "id": "https://zyakmd.github.io/2024/03/15/spring%E5%A4%8D%E4%B9%A0/Spring%20MVC/",
            "url": "https://zyakmd.github.io/2024/03/15/spring%E5%A4%8D%E4%B9%A0/Spring%20MVC/",
            "title": "Spring MVC",
            "date_published": "2024-03-15T07:19:51.000Z",
            "content_html": "<p>SpringMVC 隶属于 Spring，是 Spring 技术中的一部分。那么 SpringMVC 到底是用来做什么的呢？</p>\n<ul>\n<li>回想 web 阶段，我们学习过 Servlet, 而 SpringMVC 与 Servlet 技术功能等同，均属于 web 层或者说表现层开发技术。</li>\n</ul>\n<p>那么既然已经有了 Servlet 为什么还需要花时间再学习一个 SpringMVC 技术？要回答这个问题，我们就需要搞清楚 SpringMVC 与 Servlet 相比，有什么优势:</p>\n<p>框架我们都知道是用来简化开发的，所以 SpringMVC 与 Servlet 相比，开发起来更简单快捷，用更少的代码完成表现层代码的开发，那么问题又来了，到底有多简单呢？我们通过一个例子来体验一把吧。</p>\n<p>对于 SpringMVC 的学习，最终要达成的目标:</p>\n<ol>\n<li><mark>掌握基于 SpringMVC 获取请求参数和响应 json 数据操作</mark></li>\n<li><mark>熟练应用基于 REST 风格的请求路径设置与参数传递</mark></li>\n<li>能够根据实际业务建立前后端开发通信协议并进行实现</li>\n<li><mark>基于 SSM 整合技术开发任意业务模块功能</mark></li>\n</ol>\n<h1 id=\"springmvc概述\"><a class=\"anchor\" href=\"#springmvc概述\">#</a> SpringMVC 概述</h1>\n<p><img data-src=\"https://dingyue.ws.126.net/2022/1010/dbbd2e51j00rjip2d0018d000vb00h7p.jpg\" alt=\"\" /></p>\n<ul>\n<li>浏览器发送一个请求给后端服务器，后端服务器现在是使用 Servlet 来接收请求和数据</li>\n<li>如果所有的处理都交给 Servlet 来处理的话，所有的东西都耦合在一起，对后期的维护和扩展极为不利</li>\n<li>将后端服务器 Servlet 拆分成三层，分别是 <code>web</code> 、 <code>service</code>  和 <code>dao</code>\n<ul>\n<li>web 层主要由 servlet 来处理，负责页面请求和数据的收集以及响应结果给前端</li>\n<li>service 层主要负责业务逻辑的处理</li>\n<li>dao 层主要负责数据的增删改查操作</li>\n</ul>\n</li>\n<li>servlet 处理请求和数据的时候，存在的问题是一个 servlet 只能处理一个请求\n<ul>\n<li>针对 web 层进行了优化，采用了 MVC 设计模式，将其设计为 <code>controller</code> 、 <code>view</code>  和 <code>Model</code></li>\n<li>controller 负责请求和数据的接收，接收后将其转发给 service 进行业务处理</li>\n<li>service 根据需要会调用 dao 对数据进行增删改查</li>\n<li>dao 把数据处理完后将结果交给 service,service 再交给 controller</li>\n<li>controller 根据需求组装成 Model 和 View,Model 和 View 组合起来生成页面转发给前端浏览器</li>\n<li>这样做的好处就是 controller 可以处理多个请求，并对请求进行分发，执行不同的业务操作。</li>\n</ul>\n</li>\n</ul>\n<p>随着互联网的发展，上面的模式因为是同步调用，性能慢慢的跟不是需求，所以异步调用慢慢的走到了前台，是现在比较流行的一种处理方式。</p>\n<p><img data-src=\"https://dingyue.ws.126.net/2022/1010/dbbd2e51j00rjip2d0018d000vb00h7p.jpg\" alt=\"\" /></p>\n<ul>\n<li>因为是异步调用，所以后端不需要返回 View 视图，将其去除</li>\n<li>前端如果通过异步调用的方式进行交互，后端就需要将返回的数据转换成 JSON 格式进行返回</li>\n<li>SpringMVC 主要负责的就是\n<ul>\n<li>controller 如何接收请求和数据</li>\n<li>如何将请求和数据转发给业务层</li>\n<li>如何将响应数据转换成 JSON 发挥到前端</li>\n</ul>\n</li>\n<li>SpringMVC 是一种基于 Java 实现 MVC 模型的轻量级 Web 框架\n<ul>\n<li>优点\n<ul>\n<li>使用简单、开发快捷（相比较于 Servlet）</li>\n<li>灵活性强</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"springmvc入门案例\"><a class=\"anchor\" href=\"#springmvc入门案例\">#</a> SpringMVC 入门案例</h1>\n<p>因为 SpringMVC 是一个 Web 框架，将来是要替换 Servlet, 所以先来回顾下以前 Servlet 是如何进行开发的？</p>\n<ol>\n<li>创建 web 工程 (Maven 结构)</li>\n<li>设置 tomcat 服务器，加载 web 工程 (tomcat 插件)</li>\n<li>导入坐标 (Servlet)</li>\n<li>定义处理请求的功能类 (UserServlet)</li>\n<li>设置请求映射 (配置映射关系)</li>\n</ol>\n<p>SpringMVC 的制作过程和上述流程几乎是一致的，具体的实现流程是什么？</p>\n<ol>\n<li>创建 web 工程 (Maven 结构)</li>\n<li>设置 tomcat 服务器，加载 web 工程 (tomcat 插件)</li>\n<li>导入坐标 (SpringMVC+Servlet)</li>\n<li>定义处理请求的功能类 (UserController)</li>\n<li>设置请求映射 (配置映射关系)</li>\n<li>将 SpringMVC 设定加载到 Tomcat 容器中</li>\n</ol>\n<h2 id=\"流程\"><a class=\"anchor\" href=\"#流程\">#</a> 流程</h2>\n<blockquote>\n<p>步骤 1: 创建 Maven 项目</p>\n</blockquote>\n<p>打开 IDEA, 创建一个新的 web 项目</p>\n<blockquote>\n<p>步骤 2: 导入 jar 包</p>\n</blockquote>\n<p>将 pom.xml 中多余的内容删除掉，再添加 SpringMVC 需要的依赖</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">?</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>project xmlns<span class=\"token operator\">=</span><span class=\"token string\">\"http://maven.apache.org/POM/4.0.0\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>         xmlns<span class=\"token operator\">:</span>xsi<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>         xsi<span class=\"token operator\">:</span>schemaLocation<span class=\"token operator\">=</span><span class=\"token string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>modelVersion<span class=\"token punctuation\">></span></span><span class=\"token number\">4.0</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>modelVersion<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>com<span class=\"token punctuation\">.</span>zy<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>mvcTest<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">1.0</span><span class=\"token operator\">-</span><span class=\"token constant\">SNAPSHOT</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>properties<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">></span></span><span class=\"token number\">16</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>source<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">></span></span><span class=\"token number\">16</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>maven<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">.</span>target<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>properties<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependencies<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>javax<span class=\"token punctuation\">.</span>servlet<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>javax<span class=\"token punctuation\">.</span>servlet<span class=\"token operator\">-</span>api<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">3.1</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>scope<span class=\"token punctuation\">></span></span>provided<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>scope<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>org<span class=\"token punctuation\">.</span>springframework<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>spring<span class=\"token operator\">-</span>webmvc<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">5.3</span><span class=\"token number\">.23</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependencies<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>build<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugins<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>maven<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>tomcat7<span class=\"token operator\">-</span>maven<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>configuration<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>port<span class=\"token punctuation\">></span></span><span class=\"token number\">80</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>port<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>path<span class=\"token punctuation\">></span></span><span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>path<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>configuration<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugins<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>build<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>project<span class=\"token operator\">></span></pre></td></tr></table></figure><p><strong>说明:</strong> servlet 的坐标为什么需要添加 <code>&lt;scope&gt;provided&lt;/scope&gt;</code> ?</p>\n<ul>\n<li>\n<p>scope 是 maven 中 jar 包依赖作用范围的描述，</p>\n</li>\n<li>\n<p>如果不设置默认是 <code>compile</code>  在在编译、运行、测试时均有效</p>\n</li>\n<li>\n<p>如果运行有效的话就会和 tomcat 中的 servlet-api 包发生冲突，导致启动报错</p>\n</li>\n<li>\n<p>provided 代表的是该包只在编译和测试的时候用，运行的时候无效直接使用 tomcat 中的，就避免冲突</p>\n</li>\n</ul>\n<blockquote>\n<p>步骤 3: 创建配置类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima.controller\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringMvcConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 4: 创建 Controller 类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Controller</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/save\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 5: 使用配置类替换 web.xml</p>\n</blockquote>\n<p>将 web.xml 删除，换成 ServletContainersInitConfig</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ServletContainersInitConfig</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractDispatcherServletInitializer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 加载 springmvc 配置类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">WebApplicationContext</span> <span class=\"token function\">createServletApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 初始化 WebApplicationContext 对象</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">AnnotationConfigWebApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigWebApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 加载指定配置类</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringMvcConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> ctx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 设置由 springmvc 控制器处理的请求映射路径</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getServletMappings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 加载 spring 配置类</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">WebApplicationContext</span> <span class=\"token function\">createRootApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 6: 配置 Tomcat 环境<br />\n<img data-src=\"image-20240315204710259.png\" alt=\"\" /><br />\n步骤 7: 启动运行项目</p>\n</blockquote>\n<p>首先遇到了<img data-src=\"image-20240315204739123.png\" alt=\"\" /><br />\n添加 <code>&lt;ignorePackaging&gt;true&lt;/ignorePackaging&gt; </code> 解决</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.tomcat.maven<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>tomcat7-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>port</span><span class=\"token punctuation\">></span></span>80<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>port</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span><span class=\"token punctuation\">></span></span>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>path</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ignorePackaging</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ignorePackaging</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>然后没有正常建 webapp 项目的错 <code>src\\main\\webapp does not exist or is not a readable directory</code> <br />\n 手动添加<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81NjMyNDE0MS9hcnRpY2xlL2RldGFpbHMvMTIzODk2OTM1\">参考</span>，然后正常跑起<br />\n<img data-src=\"image-20240315205907872.png\" alt=\"\" /></p>\n<blockquote>\n<p>步骤 8: 浏览器访问</p>\n</blockquote>\n<p>浏览器输入 <code>http://localhost/save</code>  进行访问，会报如下错误:<br />\n<img data-src=\"image-20240315210024930.png\" alt=\"\" /><br />\n 页面报错的原因是后台没有指定返回的页面，目前只需要关注控制台看 <code>user save ...</code>  有没有被执行即可。<br />\n<img data-src=\"image-20240315210036175.png\" alt=\"\" /></p>\n<blockquote>\n<p>步骤 9: 修改 Controller 返回值解决上述问题</p>\n</blockquote>\n<p>前面我们说过现在主要的是前端发送异步请求，后台响应 json 数据，所以接下来我们把 Controller 类的 save 方法进行修改</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Controller</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/save\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"&#123;'info':'springmvc'&#125;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>再次重启 tomcat 服务器，然后重新通过浏览器测试访问，会发现还是会报错，这次的错是 404<br />\n<img data-src=\"image-20240315210249865.png\" alt=\"\" /><br />\n 出错的原因是，如果方法直接返回字符串，springmvc 会把字符串当成页面的名称在项目中进行查找返回，因为不存在对应返回值名称的页面，所以会报 404 错误，找不到资源。</p>\n<p>而我们其实是想要直接返回的是 json 数据，具体如何修改呢？ <code>@ResponseBody</code></p>\n<blockquote>\n<p>步骤 10: 设置返回数据为 json</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Controller</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/save\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"&#123;'info':'springmvc'&#125;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>再次重启 tomcat 服务器，然后重新通过浏览器测试访问，就能看到返回的结果数据<br />\n又遇到问题，可能我的 16 太高了，总之下面问题的说法都是更改 tomcat 的版本（确保有导入 javax.servlet）<br />\n<img data-src=\"image-20240315210800360.png\" alt=\"\" /><br />\n <code>org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.NoSuchMethodError: 'void javax.servlet.http.HttpServletResponse.setContentLengthLong(long)'</code> <br />\n 然而 pom 里面的 Tomcat 依赖只有到 7 版本的，高的就要调用本地的，步骤<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzYzOTMwNTkyL2FydGljbGUvZGV0YWlscy8xMjczNDQzMjE=\">参考</span>：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1d4eTk3MTEyMi9hcnRpY2xlL2RldGFpbHMvMTIzNTA4NTMy\">idea 安装 tomcat</span></p>\n<p>换本地后地址也变了 <code>http://localhost:8080/mvcTest_war_exploded/save</code> ， <code>mvcTest_war_exploded</code>  应该是跟我的 tomcat 配置的时候有关，总之是成了<br />\n<img data-src=\"image-20240315213444179.png\" alt=\"\" /></p>\n<p>至此 SpringMVC 的入门案例就已经完成。</p>\n<p><strong>注意事项</strong></p>\n<ul>\n<li>SpringMVC 是基于 Spring 的，在 pom.xml 只导入了 <code>spring-webmvc</code> jar 包的原因是它会自动依赖 spring 相关坐标</li>\n<li>AbstractDispatcherServletInitializer 类是 SpringMVC 提供的快速初始化 Web3.0 容器的抽象类</li>\n<li>AbstractDispatcherServletInitializer 提供了三个接口方法供用户实现\n<ul>\n<li>createServletApplicationContext 方法，用来加载 SpringMVC 环境。创建 Servlet 容器时，加载 SpringMVC 对应的 bean 并放入 WebApplicationContext 对象范围中，而 WebApplicationContext 的作用范围为 ServletContext 范围，即整个 web 容器范围</li>\n<li>getServletMappings 方法，设定 SpringMVC 对应的请求映射路径，即 SpringMVC 拦截哪些请求</li>\n<li>createRootApplicationContext 方法，用来加载 Spring 环境。如果创建 Servlet 容器时需要加载非 SpringMVC 对应的 bean, 使用当前方法进行，使用方式和 createServletApplicationContext 相同。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<ul>\n<li>\n<p>一次性工作</p>\n<ul>\n<li>创建工程，设置服务器，加载工程</li>\n<li>导入坐标</li>\n<li>创建 web 容器启动类，加载 SpringMVC 配置，并设置 SpringMVC 请求拦截路径</li>\n<li>SpringMVC 核心配置类（设置配置类，扫描 controller 包，加载 Controller 控制器 bean）</li>\n</ul>\n</li>\n<li>\n<p>多次工作</p>\n<ul>\n<li>定义处理请求的控制器类</li>\n<li>定义处理请求的控制器方法，并配置映射路径（@RequestMapping）与返回 json 数据（@ResponseBody）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"流程解析\"><a class=\"anchor\" href=\"#流程解析\">#</a> 流程解析</h2>\n<p>为了更好的使用 SpringMVC, 我们将 SpringMVC 的使用过程总共分两个阶段来分析，分别是 <code>启动服务器初始化过程</code> 和 <code>单次请求过程</code></p>\n<h3 id=\"启动服务器初始化过程\"><a class=\"anchor\" href=\"#启动服务器初始化过程\">#</a> 启动服务器初始化过程</h3>\n<ol>\n<li>服务器启动，执行 ServletContainersInitConfig 类，初始化 web 容器\n<ul>\n<li>功能类似于以前的 web.xml</li>\n</ul>\n</li>\n<li>执行 createServletApplicationContext 方法，创建了 WebApplicationContext 对象\n<ul>\n<li>该方法加载 SpringMVC 的配置类 SpringMvcConfig 来初始化 SpringMVC 的容器</li>\n</ul>\n</li>\n<li>加载 SpringMvcConfig 配置类</li>\n<li>执行 @ComponentScan 加载对应的 bean\n<ul>\n<li>扫描指定包及其子包下所有类上的注解，如 Controller 类上的 @Controller 注解</li>\n</ul>\n</li>\n<li>加载 UserController，每个 @RequestMapping 的名称对应一个具体的方法\n<ul>\n<li>此时就建立了  <code>/save</code>  和 save 方法的对应关系</li>\n</ul>\n</li>\n<li>执行 getServletMappings 方法，设定 SpringMVC 拦截请求的路径规则\n<ul>\n<li><code>/</code>  代表所拦截请求的路径规则，只有被拦截后才能交给 SpringMVC 来处理请求</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"单次请求过程\"><a class=\"anchor\" href=\"#单次请求过程\">#</a> 单次请求过程</h3>\n<ol>\n<li>发送请求 <code>http://localhost/save</code></li>\n<li>web 容器发现该请求满足 SpringMVC 拦截规则，将请求交给 SpringMVC 处理</li>\n<li>解析请求路径 /save</li>\n<li>由 /save 匹配执行对应的方法 save (）\n<ul>\n<li>上面的第五步已经将请求路径和方法建立了对应关系，通过 /save 就能找到对应的 save 方法</li>\n</ul>\n</li>\n<li>执行 save ()</li>\n<li>检测到有 @ResponseBody 直接将 save () 方法的返回值作为响应体返回给请求方</li>\n</ol>\n<h3 id=\"bean加载控制\"><a class=\"anchor\" href=\"#bean加载控制\">#</a> Bean 加载控制</h3>\n<h4 id=\"问题分析\"><a class=\"anchor\" href=\"#问题分析\">#</a> 问题分析</h4>\n<p>入门案例的内容已经做完了，在入门案例中我们创建过一个 <code>SpringMvcConfig</code>  的配置类，在之前学习 Spring 的时候也创建过一个配置类 <code>SpringConfig</code> 。这两个配置类都需要加载资源，那么它们分别都需要加载哪些内容？</p>\n<p>我们先来回顾一下项目结构<br />\n <code>com.blog</code>  下有 <code>config</code> 、 <code>controller</code> 、 <code>service</code> 、 <code>dao</code>  这四个包</p>\n<ul>\n<li><code>config</code>  目录存入的是配置类，写过的配置类有:\n<ul>\n<li>ServletContainersInitConfig</li>\n<li>SpringConfig</li>\n<li>SpringMvcConfig</li>\n<li>JdbcConfig</li>\n<li>MybatisConfig</li>\n</ul>\n</li>\n<li><code>controller</code>  目录存放的是 <code>SpringMVC</code>  的 <code>controller</code>  类</li>\n<li><code>service</code>  目录存放的是 <code>service</code>  接口和实现类</li>\n<li><code>dao</code>  目录存放的是 <code>dao/Mapper</code>  接口</li>\n</ul>\n<p>controller、service 和 dao 这些类都需要被容器管理成 bean 对象，那么到底是该让 <code>SpringMVC</code>  加载还是让 <code>Spring</code>  加载呢？</p>\n<ul>\n<li><code>SpringMVC</code>  控制的 bean\n<ul>\n<li>表现层 bean, 也就是 <code>controller</code>  包下的类</li>\n</ul>\n</li>\n<li><code>Spring</code>  控制的 bean\n<ul>\n<li>业务 bean ( <code>Service</code> )</li>\n<li>功能 bean ( <code>DataSource</code> , <code>SqlSessionFactoryBean</code> , <code>MapperScannerConfigurer</code>  等)</li>\n</ul>\n</li>\n</ul>\n<p>分析清楚谁该管哪些 bean 以后，接下来要解决的问题是如何让 <code>Spring</code>  和 <code>SpringMVC</code>  分开加载各自的内容。<br />\n在 SpringMVC 的配置类 <code>SpringMvcConfig</code>  中使用注解 <code>@ComponentScan</code> ，我们只需要将其扫描范围设置到 controller 即可，如:  <code>@ComponentScan(&quot;com.zy.controller&quot;)</code> ，但 <code>SpringConfig</code>  会 <code>@ComponentScan(&quot;com.zy&quot;)</code>  涵盖，从包结构来看的话，Spring 已经多把 SpringMVC 的 controller 类也给扫描到，所以针对这个问题该如何解决，就是咱们接下来要学习的内容。</p>\n<p>概括的描述下咱们现在的问题就是<mark>因为功能不同，如何避免 Spring 错误加载到 SpringMVC 的 bean?</mark></p>\n<h4 id=\"思路分析\"><a class=\"anchor\" href=\"#思路分析\">#</a> 思路分析</h4>\n<p>对于上面的问题，解决方案也比较简单</p>\n<ul>\n<li>加载 Spring 控制的 bean 的时候， <code>排除掉</code>  SpringMVC 控制的 bean</li>\n</ul>\n<p>那么具体该如何实现呢？</p>\n<ul>\n<li>方式一：Spring 加载的 bean 设定扫描范围 <code>com.blog</code> ，排除掉 <code>controller</code>  包内的 bean</li>\n<li>方式二：Spring 加载的 bean 设定扫描范围为精确扫描，具体到 <code>service</code>  包， <code>dao</code>  包等</li>\n<li>方式三：不区分 Spring 与 SpringMVC 的环境，加载到同一个环境中 ( <code>了解即可</code> )</li>\n</ul>\n",
            "tags": [
                "JAVA"
            ]
        },
        {
            "id": "https://zyakmd.github.io/2024/03/13/MySQL/",
            "url": "https://zyakmd.github.io/2024/03/13/MySQL/",
            "title": "MySQL",
            "date_published": "2024-03-13T11:27:28.000Z",
            "content_html": "<p>内容来自<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUtyNHkxaTdydQ==\">黑马教程</span>，分为三篇，学习了前两篇，运维篇还没学<br />\n该资源由<a href=\"%5Bhttps://github.com/Buildings-Lei/mysql_note/blob/main/README.md%5D(https://github.com/Buildings-Lei/mysql_note/blob/main/README.md)\">该参考</a>以及上面教程视频下的诸多评论资源整合。复习请回看黑马的 pdf 教程很详细</p>\n<h1 id=\"mysql连接使用\"><a class=\"anchor\" href=\"#mysql连接使用\">#</a> mysql 连接使用</h1>\n<p>安装 mysql 和配置环境变量自不必多说<br />\n在 cmd 下 <code>mysql -u root -p</code>  输入密码进入即可操作<br />\n更推荐是用 DG 连接，数据可视化，console 执行命令也方便<br />\n tips: 别忘了开服务</p>\n<h1 id=\"基础篇\"><a class=\"anchor\" href=\"#基础篇\">#</a> 基础篇</h1>\n<h2 id=\"通用语法及分类\"><a class=\"anchor\" href=\"#通用语法及分类\">#</a> 通用语法及分类</h2>\n<ul>\n<li>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</li>\n<li>DML: 数据操作语言，用来对数据库表中的数据进行增删改</li>\n<li>DQL: 数据查询语言，用来查询数据库中表的记录</li>\n<li>DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限</li>\n</ul>\n<h3 id=\"ddl数据定义语言\"><a class=\"anchor\" href=\"#ddl数据定义语言\">#</a> DDL（数据定义语言）</h3>\n<p>数据定义语言</p>\n<h4 id=\"数据库操作\"><a class=\"anchor\" href=\"#数据库操作\">#</a> 数据库操作</h4>\n<p>查询所有数据库：<br />\n <code>SHOW DATABASES;</code> <br />\n 查询当前数据库：<br />\n <code>SELECT DATABASE();</code> <br />\n 创建数据库：<br />\n <code>CREATE DATABASE [ IF NOT EXISTS ] 数据库名 [ DEFAULT CHARSET 字符集] [COLLATE 排序规则 ];</code> <br />\n 删除数据库：<br />\n <code>DROP DATABASE [ IF EXISTS ] 数据库名;</code> <br />\n 使用数据库：<br />\n <code>USE 数据库名;</code></p>\n<h5 id=\"注意事项\"><a class=\"anchor\" href=\"#注意事项\">#</a> 注意事项</h5>\n<ul>\n<li>UTF8 字符集长度为 3 字节，有些符号占 4 字节，所以推荐用 utf8mb4 字符集</li>\n</ul>\n<h4 id=\"表操作\"><a class=\"anchor\" href=\"#表操作\">#</a> 表操作</h4>\n<p>查询当前数据库所有表：<br />\n <code>SHOW TABLES;</code> <br />\n 查询表结构：<br />\n <code>DESC 表名;</code> <br />\n 查询指定表的建表语句：<br />\n <code>SHOW CREATE TABLE 表名;</code></p>\n<p>创建表：</p>\n<pre><code class=\"language-mysql\">CREATE TABLE 表名(\n\t字段1 字段1类型 [COMMENT 字段1注释],\n\t字段2 字段2类型 [COMMENT 字段2注释],\n\t字段3 字段3类型 [COMMENT 字段3注释],\n\t...\n\t字段n 字段n类型 [COMMENT 字段n注释]\n)[ COMMENT 表注释 ];\n</code></pre>\n<p><strong>最后一个字段后面没有逗号</strong></p>\n<p>添加字段：<br />\n <code>ALTER TABLE 表名 ADD 字段名 类型(长度) [COMMENT 注释] [约束];</code> <br />\n 例： <code>ALTER TABLE emp ADD nickname varchar(20) COMMENT '昵称';</code></p>\n<p>修改数据类型：<br />\n <code>ALTER TABLE 表名 MODIFY 字段名 新数据类型(长度);</code> <br />\n 修改字段名和字段类型：<br />\n <code>ALTER TABLE 表名 CHANGE 旧字段名 新字段名 类型(长度) [COMMENT 注释] [约束];</code> <br />\n 例：将 emp 表的 nickname 字段修改为 username，类型为 varchar (30)<br />\n <code>ALTER TABLE emp CHANGE nickname username varchar(30) COMMENT '昵称';</code></p>\n<p>删除字段：<br />\n <code>ALTER TABLE 表名 DROP 字段名;</code></p>\n<p>修改表名：<br />\n <code>ALTER TABLE 表名 RENAME TO 新表名</code></p>\n<p>删除表：<br />\n <code>DROP TABLE [IF EXISTS] 表名;</code> <br />\n 删除表，并重新创建该表：<br />\n <code>TRUNCATE TABLE 表名;</code></p>\n<h3 id=\"dml数据操作语言\"><a class=\"anchor\" href=\"#dml数据操作语言\">#</a> DML（数据操作语言）</h3>\n<h4 id=\"添加数据\"><a class=\"anchor\" href=\"#添加数据\">#</a> 添加数据</h4>\n<p>指定字段：<br />\n <code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...);</code> <br />\n 全部字段：<br />\n <code>INSERT INTO 表名 VALUES (值1, 值2, ...);</code></p>\n<p>批量添加数据：<br />\n <code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code> <br />\n <code>INSERT INTO 表名 VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code></p>\n<h5 id=\"注意事项-2\"><a class=\"anchor\" href=\"#注意事项-2\">#</a> 注意事项</h5>\n<ul>\n<li>字符串和日期类型数据应该包含在引号中</li>\n<li>插入的数据大小应该在字段的规定范围内</li>\n</ul>\n<h4 id=\"更新和删除数据\"><a class=\"anchor\" href=\"#更新和删除数据\">#</a> 更新和删除数据</h4>\n<p>修改数据：<br />\n <code>UPDATE 表名 SET 字段名1 = 值1, 字段名2 = 值2, ... [ WHERE 条件 ];</code> <br />\n 例：<br />\n <code>UPDATE emp SET name = 'Jack' WHERE id = 1;</code></p>\n<p>删除数据：<br />\n <code>DELETE FROM 表名 [ WHERE 条件 ];</code></p>\n<h3 id=\"dql数据查询语言\"><a class=\"anchor\" href=\"#dql数据查询语言\">#</a> DQL（数据查询语言）</h3>\n<p>语法：</p>\n<pre><code class=\"language-mysql\">SELECT\n\t字段列表\nFROM\n\t表名字段\nWHERE\n\t条件列表\nGROUP BY\n\t分组字段列表\nHAVING\n\t分组后的条件列表\nORDER BY\n\t排序字段列表\nLIMIT\n\t分页参数\n</code></pre>\n<h4 id=\"基础查询\"><a class=\"anchor\" href=\"#基础查询\">#</a> 基础查询</h4>\n<p>查询多个字段：<br />\n <code>SELECT 字段1, 字段2, 字段3, ... FROM 表名;</code> <br />\n <code>SELECT * FROM 表名;</code></p>\n<p>设置别名：<br />\n <code>SELECT 字段1 [ AS 别名1 ], 字段2 [ AS 别名2 ], 字段3 [ AS 别名3 ], ... FROM 表名;</code> <br />\n <code>SELECT 字段1 [ 别名1 ], 字段2 [ 别名2 ], 字段3 [ 别名3 ], ... FROM 表名;</code></p>\n<p>去除重复记录：<br />\n <code>SELECT DISTINCT 字段列表 FROM 表名;</code></p>\n<p>转义：<br />\n <code>SELECT * FROM 表名 WHERE name LIKE '/_张三' ESCAPE '/'</code> <br />\n/ 之后的_不作为通配符</p>\n<h4 id=\"条件查询\"><a class=\"anchor\" href=\"#条件查询\">#</a> 条件查询</h4>\n<p>语法：<br />\n <code>SELECT 字段列表 FROM 表名 WHERE 条件列表;</code></p>\n<p>条件：</p>\n<table>\n<thead>\n<tr>\n<th>比较运算符</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&gt;</td>\n<td>大于</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>大于等于</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>小于</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>小于等于</td>\n</tr>\n<tr>\n<td>=</td>\n<td>等于</td>\n</tr>\n<tr>\n<td>&lt;&gt; 或！=</td>\n<td>不等于</td>\n</tr>\n<tr>\n<td>BETWEEN ... AND ...</td>\n<td>在某个范围内（含最小、最大值）</td>\n</tr>\n<tr>\n<td>IN(...)</td>\n<td>在 in 之后的列表中的值，多选一</td>\n</tr>\n<tr>\n<td>LIKE 占位符</td>\n<td>模糊匹配（_匹配单个字符，% 匹配任意个字符）</td>\n</tr>\n<tr>\n<td>IS NULL</td>\n<td>是 NULL</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>逻辑运算符</td>\n<td>功能</td>\n</tr>\n<tr>\n<td>------------------</td>\n<td>----------------------------</td>\n</tr>\n<tr>\n<td>AND 或 &amp;&amp;</td>\n<td>并且（多个条件同时成立）</td>\n</tr>\n<tr>\n<td>OR 或 ||</td>\n<td>或者（多个条件任意一个成立）</td>\n</tr>\n<tr>\n<td>NOT 或！</td>\n<td>非，不是</td>\n</tr>\n</tbody>\n</table>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 年龄等于30\nselect * from employee where age = 30;\n-- 年龄小于30\nselect * from employee where age &lt; 30;\n-- 小于等于\nselect * from employee where age &lt;= 30;\n-- 没有身份证\nselect * from employee where idcard is null or idcard = '';\n-- 有身份证\nselect * from employee where idcard;\nselect * from employee where idcard is not null;\n-- 不等于\nselect * from employee where age != 30;\n-- 年龄在20到30之间\nselect * from employee where age between 20 and 30;\nselect * from employee where age &gt;= 20 and age &lt;= 30;\n-- 下面语句不报错，但查不到任何信息\nselect * from employee where age between 30 and 20;\n-- 性别为女且年龄小于30\nselect * from employee where age &lt; 30 and gender = '女';\n-- 年龄等于25或30或35\nselect * from employee where age = 25 or age = 30 or age = 35;\nselect * from employee where age in (25, 30, 35);\n-- 姓名为两个字\nselect * from employee where name like '__';\n-- 身份证最后为X\nselect * from employee where idcard like '%X';\n</code></pre>\n<h4 id=\"聚合查询聚合函数\"><a class=\"anchor\" href=\"#聚合查询聚合函数\">#</a> 聚合查询（聚合函数）</h4>\n<p>常见聚合函数：</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>count</td>\n<td>统计数量</td>\n</tr>\n<tr>\n<td>max</td>\n<td>最大值</td>\n</tr>\n<tr>\n<td>min</td>\n<td>最小值</td>\n</tr>\n<tr>\n<td>avg</td>\n<td>平均值</td>\n</tr>\n<tr>\n<td>sum</td>\n<td>求和</td>\n</tr>\n</tbody>\n</table>\n<p>语法：<br />\n <code>SELECT 聚合函数(字段列表) FROM 表名;</code> <br />\n 例：<br />\n <code>SELECT count(id) from employee where workaddress = &quot;广东省&quot;;</code></p>\n<h4 id=\"分组查询\"><a class=\"anchor\" href=\"#分组查询\">#</a> 分组查询</h4>\n<p>语法：<br />\n <code>SELECT 字段列表 FROM 表名 [ WHERE 条件 ] GROUP BY 分组字段名 [ HAVING 分组后的过滤条件 ];</code></p>\n<p>where 和 having 的区别：</p>\n<ul>\n<li>执行时机不同：where 是分组之前进行过滤，不满足 where 条件不参与分组；having 是分组后对结果进行过滤。</li>\n<li>判断条件不同：where 不能对聚合函数进行判断，而 having 可以。</li>\n</ul>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 根据性别分组，统计男性和女性数量（只显示分组数量，不显示哪个是男哪个是女）\nselect count(*) from employee group by gender;\n-- 根据性别分组，统计男性和女性数量\nselect gender, count(*) from employee group by gender;\n-- 根据性别分组，统计男性和女性的平均年龄\nselect gender, avg(age) from employee group by gender;\n-- 年龄小于45，并根据工作地址分组\nselect workaddress, count(*) from employee where age &lt; 45 group by workaddress;\n-- 年龄小于45，并根据工作地址分组，获取员工数量大于等于3的工作地址\nselect workaddress, count(*) address_count from employee where age &lt; 45 group by workaddress having address_count &gt;= 3;\n</code></pre>\n<h5 id=\"注意事项-3\"><a class=\"anchor\" href=\"#注意事项-3\">#</a> 注意事项</h5>\n<ul>\n<li>执行顺序：where &gt; 聚合函数 &gt; having</li>\n<li>分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义</li>\n</ul>\n<h4 id=\"排序查询\"><a class=\"anchor\" href=\"#排序查询\">#</a> 排序查询</h4>\n<p>语法：<br />\n <code>SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1, 字段2 排序方式2;</code></p>\n<p>排序方式：</p>\n<ul>\n<li>ASC: 升序（默认）</li>\n<li>DESC: 降序</li>\n</ul>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 根据年龄升序排序\nSELECT * FROM employee ORDER BY age ASC;\nSELECT * FROM employee ORDER BY age;\n-- 两字段排序，根据年龄升序排序，入职时间降序排序\nSELECT * FROM employee ORDER BY age ASC, entrydate DESC;\n</code></pre>\n<h5 id=\"注意事项-4\"><a class=\"anchor\" href=\"#注意事项-4\">#</a> 注意事项</h5>\n<p>如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序</p>\n<h4 id=\"分页查询\"><a class=\"anchor\" href=\"#分页查询\">#</a> 分页查询</h4>\n<p>语法：<br />\n <code>SELECT 字段列表 FROM 表名 LIMIT 起始索引, 查询记录数;</code></p>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 查询第一页数据，展示10条\nSELECT * FROM employee LIMIT 0, 10;\n-- 查询第二页\nSELECT * FROM employee LIMIT 10, 10;\n</code></pre>\n<h5 id=\"注意事项-5\"><a class=\"anchor\" href=\"#注意事项-5\">#</a> 注意事项</h5>\n<ul>\n<li>起始索引从 0 开始，起始索引 = （查询页码 - 1） * 每页显示记录数</li>\n<li>分页查询是数据库的方言，不同数据库有不同实现，MySQL 是 LIMIT</li>\n<li>如果查询的是第一页数据，起始索引可以省略，直接简写 LIMIT 10</li>\n</ul>\n<h4 id=\"dql执行顺序\"><a class=\"anchor\" href=\"#dql执行顺序\">#</a> DQL 执行顺序</h4>\n<p>FROM -&gt; WHERE -&gt; GROUP BY -&gt; SELECT -&gt; ORDER BY -&gt; LIMIT</p>\n<h3 id=\"dcl\"><a class=\"anchor\" href=\"#dcl\">#</a> DCL</h3>\n<h4 id=\"管理用户\"><a class=\"anchor\" href=\"#管理用户\">#</a> 管理用户</h4>\n<p>查询用户：</p>\n<pre><code class=\"language-mysql\">USE mysql;\nSELECT * FROM user;\n</code></pre>\n<p>创建用户:<br />\n <code>CREATE USER '用户名'@'主机名' IDENTIFIED BY '密码';</code></p>\n<p>修改用户密码：<br />\n <code>ALTER USER '用户名'@'主机名' IDENTIFIED WITH mysql_native_password BY '新密码';</code></p>\n<p>删除用户：<br />\n <code>DROP USER '用户名'@'主机名';</code></p>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 创建用户test，只能在当前主机localhost访问\ncreate user 'test'@'localhost' identified by '123456';\n-- 创建用户test，能在任意主机访问\ncreate user 'test'@'%' identified by '123456';\ncreate user 'test' identified by '123456';\n-- 修改密码\nalter user 'test'@'localhost' identified with mysql_native_password by '1234';\n-- 删除用户\ndrop user 'test'@'localhost';\n</code></pre>\n<h5 id=\"注意事项-6\"><a class=\"anchor\" href=\"#注意事项-6\">#</a> 注意事项</h5>\n<ul>\n<li>主机名可以使用 % 通配</li>\n</ul>\n<h4 id=\"权限控制\"><a class=\"anchor\" href=\"#权限控制\">#</a> 权限控制</h4>\n<p>常用权限：</p>\n<table>\n<thead>\n<tr>\n<th>权限</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ALL, ALL PRIVILEGES</td>\n<td>所有权限</td>\n</tr>\n<tr>\n<td>SELECT</td>\n<td>查询数据</td>\n</tr>\n<tr>\n<td>INSERT</td>\n<td>插入数据</td>\n</tr>\n<tr>\n<td>UPDATE</td>\n<td>修改数据</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>删除数据</td>\n</tr>\n<tr>\n<td>ALTER</td>\n<td>修改表</td>\n</tr>\n<tr>\n<td>DROP</td>\n<td>删除数据库 / 表 / 视图</td>\n</tr>\n<tr>\n<td>CREATE</td>\n<td>创建数据库 / 表</td>\n</tr>\n</tbody>\n</table>\n<p>更多权限请看<a href=\"#%E6%9D%83%E9%99%90%E4%B8%80%E8%A7%88%E8%A1%A8\" title=\"权限一览表\">权限一览表</a></p>\n<p>查询权限：<br />\n <code>SHOW GRANTS FOR '用户名'@'主机名';</code></p>\n<p>授予权限：<br />\n <code>GRANT 权限列表 ON 数据库名.表名 TO '用户名'@'主机名';</code></p>\n<p>撤销权限：<br />\n <code>REVOKE 权限列表 ON 数据库名.表名 FROM '用户名'@'主机名';</code></p>\n<h5 id=\"注意事项-7\"><a class=\"anchor\" href=\"#注意事项-7\">#</a> 注意事项</h5>\n<ul>\n<li>多个权限用逗号分隔</li>\n<li>授权时，数据库名和表名可以用 * 进行通配，代表所有</li>\n</ul>\n<h2 id=\"函数\"><a class=\"anchor\" href=\"#函数\">#</a> 函数</h2>\n<ul>\n<li>字符串函数</li>\n<li>数值函数</li>\n<li>日期函数</li>\n<li>流程函数</li>\n</ul>\n<h3 id=\"字符串函数\"><a class=\"anchor\" href=\"#字符串函数\">#</a> 字符串函数</h3>\n<p>常用函数：</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CONCAT(s1, s2, ..., sn)</td>\n<td>字符串拼接，将 s1, s2, ..., sn 拼接成一个字符串</td>\n</tr>\n<tr>\n<td>LOWER(str)</td>\n<td>将字符串全部转为小写</td>\n</tr>\n<tr>\n<td>UPPER(str)</td>\n<td>将字符串全部转为大写</td>\n</tr>\n<tr>\n<td>LPAD(str, n, pad)</td>\n<td>左填充，用字符串 pad 对 str 的左边进行填充，达到 n 个字符串长度</td>\n</tr>\n<tr>\n<td>RPAD(str, n, pad)</td>\n<td>右填充，用字符串 pad 对 str 的右边进行填充，达到 n 个字符串长度</td>\n</tr>\n<tr>\n<td>TRIM(str)</td>\n<td>去掉字符串头部和尾部的空格</td>\n</tr>\n<tr>\n<td>SUBSTRING(str, start, len)</td>\n<td>返回从字符串 str 从 start 位置起的 len 个长度的字符串</td>\n</tr>\n<tr>\n<td>REPLACE(column, source, replace)</td>\n<td>替换字符串</td>\n</tr>\n</tbody>\n</table>\n<p>使用示例：</p>\n<pre><code class=\"language-mysql\">-- 拼接\nSELECT CONCAT('Hello', 'World');\n-- 小写\nSELECT LOWER('Hello');\n-- 大写\nSELECT UPPER('Hello');\n-- 左填充\nSELECT LPAD('01', 5, '-');\n-- 右填充\nSELECT RPAD('01', 5, '-');\n-- 去除空格\nSELECT TRIM(' Hello World ');\n-- 切片（起始索引为1）\nSELECT SUBSTRING('Hello World', 1, 5);\n</code></pre>\n<h3 id=\"数值函数\"><a class=\"anchor\" href=\"#数值函数\">#</a> 数值函数</h3>\n<p>常见函数：</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CEIL(x)</td>\n<td>向上取整</td>\n</tr>\n<tr>\n<td>FLOOR(x)</td>\n<td>向下取整</td>\n</tr>\n<tr>\n<td>MOD(x, y)</td>\n<td>返回 x/y 的模</td>\n</tr>\n<tr>\n<td>RAND()</td>\n<td>返回 0~1 内的随机数</td>\n</tr>\n<tr>\n<td>ROUND(x, y)</td>\n<td>求参数 x 的四舍五入值，保留 y 位小数</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"日期函数\"><a class=\"anchor\" href=\"#日期函数\">#</a> 日期函数</h3>\n<p>常用函数：</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CURDATE()</td>\n<td>返回当前日期</td>\n</tr>\n<tr>\n<td>CURTIME()</td>\n<td>返回当前时间</td>\n</tr>\n<tr>\n<td>NOW()</td>\n<td>返回当前日期和时间</td>\n</tr>\n<tr>\n<td>YEAR(date)</td>\n<td>获取指定 date 的年份</td>\n</tr>\n<tr>\n<td>MONTH(date)</td>\n<td>获取指定 date 的月份</td>\n</tr>\n<tr>\n<td>DAY(date)</td>\n<td>获取指定 date 的日期</td>\n</tr>\n<tr>\n<td>DATE_ADD(date, INTERVAL expr type)</td>\n<td>返回一个日期 / 时间值加上一个时间间隔 expr 后的时间值</td>\n</tr>\n<tr>\n<td>DATEDIFF(date1, date2)</td>\n<td>返回起始时间 date1 和结束时间 date2 之间的天数</td>\n</tr>\n</tbody>\n</table>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- DATE_ADD\nSELECT DATE_ADD(NOW(), INTERVAL 70 YEAR);\n</code></pre>\n<h3 id=\"流程函数\"><a class=\"anchor\" href=\"#流程函数\">#</a> 流程函数</h3>\n<p>常用函数：</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IF(value, t, f)</td>\n<td>如果 value 为 true，则返回 t，否则返回 f</td>\n</tr>\n<tr>\n<td>IFNULL(value1, value2)</td>\n<td>如果 value1 不为空，返回 value1，否则返回 value2</td>\n</tr>\n<tr>\n<td>CASE WHEN [ val1 ] THEN [ res1 ] ... ELSE [ default ] END</td>\n<td>如果 val1 为 true，返回 res1，... 否则返回 default 默认值</td>\n</tr>\n<tr>\n<td>CASE [ expr ] WHEN [ val1 ] THEN [ res1 ] ... ELSE [ default ] END</td>\n<td>如果 expr 的值等于 val1，返回 res1，... 否则返回 default 默认值</td>\n</tr>\n</tbody>\n</table>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">select\n\tname,\n\t(case when age &gt; 30 then '中年' else '青年' end)\nfrom employee;\nselect\n\tname,\n\t(case workaddress when '北京市' then '一线城市' when '上海市' then '一线城市' else '二线城市' end) as '工作地址'\nfrom employee;\n</code></pre>\n<h2 id=\"约束\"><a class=\"anchor\" href=\"#约束\">#</a> 约束</h2>\n<p>分类：</p>\n<table>\n<thead>\n<tr>\n<th>约束</th>\n<th>描述</th>\n<th>关键字</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>非空约束</td>\n<td>限制该字段的数据不能为 null</td>\n<td>NOT NULL</td>\n</tr>\n<tr>\n<td>唯一约束</td>\n<td>保证该字段的所有数据都是唯一、不重复的</td>\n<td>UNIQUE</td>\n</tr>\n<tr>\n<td>主键约束</td>\n<td>主键是一行数据的唯一标识，要求非空且唯一</td>\n<td>PRIMARY KEY</td>\n</tr>\n<tr>\n<td>默认约束</td>\n<td>保存数据时，如果未指定该字段的值，则采用默认值</td>\n<td>DEFAULT</td>\n</tr>\n<tr>\n<td>检查约束（8.0.1 版本后）</td>\n<td>保证字段值满足某一个条件</td>\n<td>CHECK</td>\n</tr>\n<tr>\n<td>外键约束</td>\n<td>用来让两张图的数据之间建立连接，保证数据的一致性和完整性</td>\n<td>FOREIGN KEY</td>\n</tr>\n</tbody>\n</table>\n<p>约束是作用于表中字段上的，可以再创建表 / 修改表的时候添加约束。</p>\n<h3 id=\"常用约束\"><a class=\"anchor\" href=\"#常用约束\">#</a> 常用约束</h3>\n<table>\n<thead>\n<tr>\n<th>约束条件</th>\n<th>关键字</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>主键</td>\n<td>PRIMARY KEY</td>\n</tr>\n<tr>\n<td>自动增长</td>\n<td>AUTO_INCREMENT</td>\n</tr>\n<tr>\n<td>不为空</td>\n<td>NOT NULL</td>\n</tr>\n<tr>\n<td>唯一</td>\n<td>UNIQUE</td>\n</tr>\n<tr>\n<td>逻辑条件</td>\n<td>CHECK</td>\n</tr>\n<tr>\n<td>默认值</td>\n<td>DEFAULT</td>\n</tr>\n</tbody>\n</table>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">create table user(\n\tid int primary key auto_increment,\n\tname varchar(10) not null unique,\n\tage int check(age &gt; 0 and age &lt; 120),\n\tstatus char(1) default '1',\n\tgender char(1)\n);\n</code></pre>\n<h3 id=\"外键约束\"><a class=\"anchor\" href=\"#外键约束\">#</a> 外键约束</h3>\n<p>添加外键：</p>\n<pre><code class=\"language-mysql\">CREATE TABLE 表名(\n\t字段名 字段类型,\n\t...\n\t[CONSTRAINT] [外键名称] FOREIGN KEY(外键字段名) REFERENCES 主表(主表列名)\n);\nALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段名) REFERENCES 主表(主表列名);\n\n-- 例子\nalter table emp add constraint fk_emp_dept_id foreign key(dept_id) references dept(id);\n</code></pre>\n<p>删除外键：<br />\n <code>ALTER TABLE 表名 DROP FOREIGN KEY 外键名;</code></p>\n<h4 id=\"删除更新行为\"><a class=\"anchor\" href=\"#删除更新行为\">#</a> 删除 / 更新行为</h4>\n<table>\n<thead>\n<tr>\n<th>行为</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NO ACTION</td>\n<td>当在父表中删除 / 更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除 / 更新（与 RESTRICT 一致）</td>\n</tr>\n<tr>\n<td>RESTRICT</td>\n<td>当在父表中删除 / 更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除 / 更新（与 NO ACTION 一致）</td>\n</tr>\n<tr>\n<td>CASCADE</td>\n<td>当在父表中删除 / 更新对应记录时，首先检查该记录是否有对应外键，如果有则也删除 / 更新外键在子表中的记录</td>\n</tr>\n<tr>\n<td>SET NULL</td>\n<td>当在父表中删除 / 更新对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为 null（要求该外键允许为 null）</td>\n</tr>\n<tr>\n<td>SET DEFAULT</td>\n<td>父表有变更时，子表将外键设为一个默认值（Innodb 不支持）</td>\n</tr>\n</tbody>\n</table>\n<p>更改删除 / 更新行为：<br />\n <code>ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段) REFERENCES 主表名(主表字段名) ON UPDATE 行为 ON DELETE 行为;</code></p>\n<h2 id=\"多表查询\"><a class=\"anchor\" href=\"#多表查询\">#</a> 多表查询</h2>\n<h3 id=\"多表关系\"><a class=\"anchor\" href=\"#多表关系\">#</a> 多表关系</h3>\n<ul>\n<li>一对多（多对一）</li>\n<li>多对多</li>\n<li>一对一</li>\n</ul>\n<h4 id=\"一对多\"><a class=\"anchor\" href=\"#一对多\">#</a> 一对多</h4>\n<p>案例：部门与员工<br />\n关系：一个部门对应多个员工，一个员工对应一个部门<br />\n实现：在多的一方建立外键，指向一的一方的主键</p>\n<h4 id=\"多对多\"><a class=\"anchor\" href=\"#多对多\">#</a> 多对多</h4>\n<p>案例：学生与课程<br />\n关系：一个学生可以选多门课程，一门课程也可以供多个学生选修<br />\n实现：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</p>\n<h4 id=\"一对一\"><a class=\"anchor\" href=\"#一对一\">#</a> 一对一</h4>\n<p>案例：用户与用户详情<br />\n关系：一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提升操作效率<br />\n实现：在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的（UNIQUE）</p>\n<h3 id=\"查询\"><a class=\"anchor\" href=\"#查询\">#</a> 查询</h3>\n<p>合并查询（笛卡尔积，会展示所有组合结果）：<br />\n <code>select * from employee, dept;</code></p>\n<blockquote>\n<p>笛卡尔积：两个集合 A 集合和 B 集合的所有组合情况（在多表查询时，需要消除无效的笛卡尔积）</p>\n</blockquote>\n<p>消除无效笛卡尔积：<br />\n <code>select * from employee, dept where employee.dept = dept.id;</code></p>\n<h3 id=\"内连接查询\"><a class=\"anchor\" href=\"#内连接查询\">#</a> 内连接查询</h3>\n<p>内连接查询的是两张表交集的部分</p>\n<p>隐式内连接：<br />\n <code>SELECT 字段列表 FROM 表1, 表2 WHERE 条件 ...;</code></p>\n<p>显式内连接：<br />\n <code>SELECT 字段列表 FROM 表1 [ INNER ] JOIN 表2 ON 连接条件 ...;</code></p>\n<p>显式性能比隐式高</p>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 查询员工姓名，及关联的部门的名称\n-- 隐式\nselect e.name, d.name from employee as e, dept as d where e.dept = d.id;\n-- 显式\nselect e.name, d.name from employee as e inner join dept as d on e.dept = d.id;\n</code></pre>\n<h3 id=\"外连接查询\"><a class=\"anchor\" href=\"#外连接查询\">#</a> 外连接查询</h3>\n<p>左外连接：<br />\n查询左表所有数据，以及两张表交集部分数据<br />\n <code>SELECT 字段列表 FROM 表1 LEFT [ OUTER ] JOIN 表2 ON 条件 ...;</code> <br />\n 相当于查询表 1 的所有数据，包含表 1 和表 2 交集部分数据</p>\n<p>右外连接：<br />\n查询右表所有数据，以及两张表交集部分数据<br />\n <code>SELECT 字段列表 FROM 表1 RIGHT [ OUTER ] JOIN 表2 ON 条件 ...;</code></p>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 左\nselect e.*, d.name from employee as e left outer join dept as d on e.dept = d.id;\nselect d.name, e.* from dept d left outer join emp e on e.dept = d.id;  -- 这条语句与下面的语句效果一样\n-- 右\nselect d.name, e.* from employee as e right outer join dept as d on e.dept = d.id;\n</code></pre>\n<p>左连接可以查询到没有 dept 的 employee，右连接可以查询到没有 employee 的 dept</p>\n<h3 id=\"自连接查询\"><a class=\"anchor\" href=\"#自连接查询\">#</a> 自连接查询</h3>\n<p>当前表与自身的连接查询，自连接必须使用表别名</p>\n<p>语法：<br />\n <code>SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名B ON 条件 ...;</code></p>\n<p>自连接查询，可以是内连接查询，也可以是外连接查询</p>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 查询员工及其所属领导的名字\nselect a.name, b.name from employee a, employee b where a.manager = b.id;\n-- 没有领导的也查询出来\nselect a.name, b.name from employee a left join employee b on a.manager = b.id;\n</code></pre>\n<h3 id=\"联合查询-union-union-all\"><a class=\"anchor\" href=\"#联合查询-union-union-all\">#</a> 联合查询 union, union all</h3>\n<p>把多次查询的结果合并，形成一个新的查询集</p>\n<p>语法：</p>\n<pre><code class=\"language-mysql\">SELECT 字段列表 FROM 表A ...\nUNION [ALL]\nSELECT 字段列表 FROM 表B ...\n</code></pre>\n<h4 id=\"注意事项-8\"><a class=\"anchor\" href=\"#注意事项-8\">#</a> 注意事项</h4>\n<ul>\n<li>UNION ALL 会有重复结果，UNION 不会</li>\n<li>联合查询比使用 or 效率高，不会使索引失效</li>\n</ul>\n<h3 id=\"子查询\"><a class=\"anchor\" href=\"#子查询\">#</a> 子查询</h3>\n<p>SQL 语句中嵌套 SELECT 语句，称谓嵌套查询，又称子查询。<br />\n <code>SELECT * FROM t1 WHERE column1 = ( SELECT column1 FROM t2);</code> <br />\n<strong> 子查询外部的语句可以是 INSERT / UPDATE / DELETE / SELECT 的任何一个</strong></p>\n<p>根据子查询结果可以分为：</p>\n<ul>\n<li>标量子查询（子查询结果为单个值）</li>\n<li>列子查询（子查询结果为一列）</li>\n<li>行子查询（子查询结果为一行）</li>\n<li>表子查询（子查询结果为多行多列）</li>\n</ul>\n<p>根据子查询位置可分为：</p>\n<ul>\n<li>WHERE 之后</li>\n<li>FROM 之后</li>\n<li>SELECT 之后</li>\n</ul>\n<h4 id=\"标量子查询\"><a class=\"anchor\" href=\"#标量子查询\">#</a> 标量子查询</h4>\n<p>子查询返回的结果是单个值（数字、字符串、日期等）。<br />\n常用操作符：- &lt;&gt;&gt; &gt;= &lt; &lt;=</p>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 查询销售部所有员工\nselect id from dept where name = '销售部';\n-- 根据销售部部门ID，查询员工信息\nselect * from employee where dept = 4;\n-- 合并（子查询）\nselect * from employee where dept = (select id from dept where name = '销售部');\n\n-- 查询xxx入职之后的员工信息\nselect * from employee where entrydate &gt; (select entrydate from employee where name = 'xxx');\n</code></pre>\n<h4 id=\"列子查询\"><a class=\"anchor\" href=\"#列子查询\">#</a> 列子查询</h4>\n<p>返回的结果是一列（可以是多行）。</p>\n<p>常用操作符：</p>\n<table>\n<thead>\n<tr>\n<th>操作符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IN</td>\n<td>在指定的集合范围内，多选一</td>\n</tr>\n<tr>\n<td>NOT IN</td>\n<td>不在指定的集合范围内</td>\n</tr>\n<tr>\n<td>ANY</td>\n<td>子查询返回列表中，有任意一个满足即可</td>\n</tr>\n<tr>\n<td>SOME</td>\n<td>与 ANY 等同，使用 SOME 的地方都可以使用 ANY</td>\n</tr>\n<tr>\n<td>ALL</td>\n<td>子查询返回列表的所有值都必须满足</td>\n</tr>\n</tbody>\n</table>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 查询销售部和市场部的所有员工信息\nselect * from employee where dept in (select id from dept where name = '销售部' or name = '市场部');\n-- 查询比财务部所有人工资都高的员工信息\nselect * from employee where salary &gt; all(select salary from employee where dept = (select id from dept where name = '财务部'));\n-- 查询比研发部任意一人工资高的员工信息\nselect * from employee where salary &gt; any (select salary from employee where dept = (select id from dept where name = '研发部'));\n</code></pre>\n<h4 id=\"行子查询\"><a class=\"anchor\" href=\"#行子查询\">#</a> 行子查询</h4>\n<p>返回的结果是一行（可以是多列）。<br />\n常用操作符：=, &lt;,&gt;, IN, NOT IN</p>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 查询与xxx的薪资及直属领导相同的员工信息\nselect * from employee where (salary, manager) = (12500, 1);\nselect * from employee where (salary, manager) = (select salary, manager from employee where name = 'xxx');\n</code></pre>\n<h4 id=\"表子查询\"><a class=\"anchor\" href=\"#表子查询\">#</a> 表子查询</h4>\n<p>返回的结果是多行多列<br />\n常用操作符：IN</p>\n<p>例子：</p>\n<pre><code class=\"language-mysql\">-- 查询与xxx1，xxx2的职位和薪资相同的员工\nselect * from employee where (job, salary) in (select job, salary from employee where name = 'xxx1' or name = 'xxx2');\n-- 查询入职日期是2006-01-01之后的员工，及其部门信息\nselect e.*, d.* from (select * from employee where entrydate &gt; '2006-01-01') as e left join dept as d on e.dept = d.id;\n</code></pre>\n<h2 id=\"事务\"><a class=\"anchor\" href=\"#事务\">#</a> 事务</h2>\n<p>事务是一组操作的集合，事务会把所有操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。</p>\n<p>基本操作：</p>\n<pre><code class=\"language-mysql\">-- 1. 查询张三账户余额\nselect * from account where name = '张三';\n-- 2. 将张三账户余额-1000\nupdate account set money = money - 1000 where name = '张三';\n-- 此语句出错后张三钱减少但是李四钱没有增加\n模拟sql语句错误\n-- 3. 将李四账户余额+1000\nupdate account set money = money + 1000 where name = '李四';\n\n-- 查看事务提交方式\nSELECT @@AUTOCOMMIT;\n-- 设置事务提交方式，1为自动提交，0为手动提交，该设置只对当前会话有效\nSET @@AUTOCOMMIT = 0;\n-- 提交事务\nCOMMIT;\n-- 回滚事务\nROLLBACK;\n\n-- 设置手动提交后上面代码改为：\nselect * from account where name = '张三';\nupdate account set money = money - 1000 where name = '张三';\nupdate account set money = money + 1000 where name = '李四';\ncommit;\n</code></pre>\n<p>操作方式二：</p>\n<p>开启事务：<br />\n <code>START TRANSACTION 或 BEGIN TRANSACTION;</code> <br />\n 提交事务：<br />\n <code>COMMIT;</code> <br />\n 回滚事务：<br />\n <code>ROLLBACK;</code></p>\n<p>操作实例：</p>\n<pre><code class=\"language-mysql\">start transaction;\nselect * from account where name = '张三';\nupdate account set money = money - 1000 where name = '张三';\nupdate account set money = money + 1000 where name = '李四';\ncommit;\n</code></pre>\n<h3 id=\"四大特性acid\"><a class=\"anchor\" href=\"#四大特性acid\">#</a> 四大特性 ACID</h3>\n<ul>\n<li>原子性 (Atomicity)：事务是不可分割的最小操作但愿，要么全部成功，要么全部失败</li>\n<li>一致性 (Consistency)：事务完成时，必须使所有数据都保持一致状态</li>\n<li>隔离性 (Isolation)：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</li>\n<li>持久性 (Durability)：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</li>\n</ul>\n<h3 id=\"并发事务\"><a class=\"anchor\" href=\"#并发事务\">#</a> 并发事务</h3>\n<table>\n<thead>\n<tr>\n<th>问题</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>脏读</td>\n<td>一个事务读到另一个事务还没提交的数据</td>\n</tr>\n<tr>\n<td>不可重复读</td>\n<td>一个事务先后读取同一条记录，但两次读取的数据不同</td>\n</tr>\n<tr>\n<td>幻读</td>\n<td>一个事务按照条件查询数据时，没有对应的数据行，但是再插入数据时，又发现这行数据已经存在</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>这三个问题的详细演示：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUtyNHkxaTdydT9wPTU1Y2Q=\">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd</span></p>\n</blockquote>\n<p>并发事务隔离级别：</p>\n<table>\n<thead>\n<tr>\n<th>隔离级别</th>\n<th>脏读</th>\n<th>不可重复读</th>\n<th>幻读</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Read uncommitted</td>\n<td>√</td>\n<td>√</td>\n<td>√</td>\n</tr>\n<tr>\n<td>Read committed</td>\n<td>×</td>\n<td>√</td>\n<td>√</td>\n</tr>\n<tr>\n<td>Repeatable Read (默认)</td>\n<td>×</td>\n<td>×</td>\n<td>√</td>\n</tr>\n<tr>\n<td>Serializable</td>\n<td>×</td>\n<td>×</td>\n<td>×</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>√表示在当前隔离级别下该问题会出现</li>\n<li>Serializable 性能最低；Read uncommitted 性能最高，数据安全性最差</li>\n</ul>\n<p>查看事务隔离级别：<br />\n <code>SELECT @@TRANSACTION_ISOLATION;</code> <br />\n 设置事务隔离级别：<br />\n <code>SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL &#123;READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE &#125;;</code> <br />\nSESSION 是会话级别，表示只针对当前会话有效，GLOBAL 表示对所有会话有效</p>\n<h1 id=\"进阶篇\"><a class=\"anchor\" href=\"#进阶篇\">#</a> 进阶篇</h1>\n<h2 id=\"存储引擎\"><a class=\"anchor\" href=\"#存储引擎\">#</a> 存储引擎</h2>\n<p>MySQL 体系结构：</p>\n<p><img data-src=\"https://learning-logs-1253130399.cos.ap-guangzhou.myqcloud.com/editor/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84_20220315034329549927.png\" alt=\"结构图\" title=\"结构图\" /><br />\n<img data-src=\"https://learning-logs-1253130399.cos.ap-guangzhou.myqcloud.com/editor/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%B1%82%E7%BA%A7%E5%90%AB%E4%B9%89_20220315034359342837.png\" alt=\"层级描述\" title=\"层级描述\" /></p>\n<p>存储引擎就是存储数据、建立索引、更新 / 查询数据等技术的实现方式。存储引擎是基于表而不是基于库的，所以存储引擎也可以被称为表引擎。<br />\n默认存储引擎是 InnoDB。</p>\n<p>相关操作：</p>\n<pre><code class=\"language-mysql\">-- 查询建表语句\nshow create table account;\n-- 建表时指定存储引擎\nCREATE TABLE 表名(\n\t...\n) ENGINE=INNODB;\n-- 查看当前数据库支持的存储引擎\nshow engines;\n</code></pre>\n<h3 id=\"innodb\"><a class=\"anchor\" href=\"#innodb\">#</a> InnoDB</h3>\n<p>InnoDB 是一种兼顾高可靠性和高性能的通用存储引擎，在 MySQL 5.5 之后，InnoDB 是默认的 MySQL 引擎。</p>\n<p>特点：</p>\n<ul>\n<li>DML 操作遵循 ACID 模型，支持<strong>事务</strong></li>\n<li><strong>行级锁</strong>，提高并发访问性能</li>\n<li>支持<strong>外键</strong>约束，保证数据的完整性和正确性</li>\n</ul>\n<p>文件：</p>\n<ul>\n<li>xxx.ibd: xxx 代表表名，InnoDB 引擎的每张表都会对应这样一个表空间文件，存储该表的表结构（frm、sdi）、数据和索引。</li>\n</ul>\n<p>参数：innodb_file_per_table，决定多张表共享一个表空间还是每张表对应一个表空间</p>\n<p>知识点：</p>\n<p>查看 Mysql 变量：<br />\n <code>show variables like 'innodb_file_per_table';</code></p>\n<p>从 idb 文件提取表结构数据：<br />\n（在 cmd 运行）<br />\n <code>ibd2sdi xxx.ibd</code></p>\n<p>InnoDB 逻辑存储结构：<br />\n<img data-src=\"https://learning-logs-1253130399.cos.ap-guangzhou.myqcloud.com/editor/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84_20220316030616590001.png\" alt=\"InnoDB逻辑存储结构\" title=\"InnoDB逻辑存储结构\" /></p>\n<h3 id=\"myisam\"><a class=\"anchor\" href=\"#myisam\">#</a> MyISAM</h3>\n<p>MyISAM 是 MySQL 早期的默认存储引擎。</p>\n<p>特点：</p>\n<ul>\n<li>不支持事务，不支持外键</li>\n<li>支持表锁，不支持行锁</li>\n<li>访问速度快</li>\n</ul>\n<p>文件：</p>\n<ul>\n<li>xxx.sdi: 存储表结构信息</li>\n<li>xxx.MYD: 存储数据</li>\n<li>xxx.MYI: 存储索引</li>\n</ul>\n<h3 id=\"memory\"><a class=\"anchor\" href=\"#memory\">#</a> Memory</h3>\n<p>Memory 引擎的表数据是存储在内存中的，受硬件问题、断电问题的影响，只能将这些表作为临时表或缓存使用。</p>\n<p>特点：</p>\n<ul>\n<li>存放在内存中，速度快</li>\n<li>hash 索引（默认）</li>\n</ul>\n<p>文件：</p>\n<ul>\n<li>xxx.sdi: 存储表结构信息</li>\n</ul>\n<h3 id=\"存储引擎特点\"><a class=\"anchor\" href=\"#存储引擎特点\">#</a> 存储引擎特点</h3>\n<table>\n<thead>\n<tr>\n<th>特点</th>\n<th>InnoDB</th>\n<th>MyISAM</th>\n<th>Memory</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>存储限制</td>\n<td>64TB</td>\n<td>有</td>\n<td>有</td>\n</tr>\n<tr>\n<td>事务安全</td>\n<td>支持</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>锁机制</td>\n<td>行锁</td>\n<td>表锁</td>\n<td>表锁</td>\n</tr>\n<tr>\n<td>B+tree 索引</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>Hash 索引</td>\n<td>-</td>\n<td>-</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>全文索引</td>\n<td>支持（5.6 版本之后）</td>\n<td>支持</td>\n<td>-</td>\n</tr>\n<tr>\n<td>空间使用</td>\n<td>高</td>\n<td>低</td>\n<td>N/A</td>\n</tr>\n<tr>\n<td>内存使用</td>\n<td>高</td>\n<td>低</td>\n<td>中等</td>\n</tr>\n<tr>\n<td>批量插入速度</td>\n<td>低</td>\n<td>高</td>\n<td>高</td>\n</tr>\n<tr>\n<td>支持外键</td>\n<td>支持</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"存储引擎的选择\"><a class=\"anchor\" href=\"#存储引擎的选择\">#</a> 存储引擎的选择</h3>\n<p>在选择存储引擎时，应该根据应用系统的特点选择合适的存储引擎。对于复杂的应用系统，还可以根据实际情况选择多种存储引擎进行组合。</p>\n<ul>\n<li>InnoDB: 如果应用对事物的完整性有比较高的要求，在并发条件下要求数据的一致性，数据操作除了插入和查询之外，还包含很多的更新、删除操作，则 InnoDB 是比较合适的选择</li>\n<li>MyISAM: 如果应用是以读操作和插入操作为主，只有很少的更新和删除操作，并且对事务的完整性、并发性要求不高，那这个存储引擎是非常合适的。</li>\n<li>Memory: 将所有数据保存在内存中，访问速度快，通常用于临时表及缓存。Memory 的缺陷是对表的大小有限制，太大的表无法缓存在内存中，而且无法保障数据的安全性</li>\n</ul>\n<p>电商中的足迹和评论适合使用 MyISAM 引擎，缓存适合使用 Memory 引擎。</p>\n<h2 id=\"性能分析\"><a class=\"anchor\" href=\"#性能分析\">#</a> 性能分析</h2>\n<h3 id=\"查看执行频次\"><a class=\"anchor\" href=\"#查看执行频次\">#</a> 查看执行频次</h3>\n<p>查看当前数据库的 INSERT, UPDATE, DELETE, SELECT 访问频次：<br />\n <code>SHOW GLOBAL STATUS LIKE 'Com_______';</code>  或者  <code>SHOW SESSION STATUS LIKE 'Com_______';</code> <br />\n 例： <code>show global status like 'Com_______'</code></p>\n<h3 id=\"慢查询日志\"><a class=\"anchor\" href=\"#慢查询日志\">#</a> 慢查询日志</h3>\n<p>慢查询日志记录了所有执行时间超过指定参数（long_query_time，单位：秒，默认 10 秒）的所有 SQL 语句的日志。<br />\nMySQL 的慢查询日志默认没有开启，需要在 MySQL 的配置文件（/etc/my.cnf）中配置如下信息：<br />\n# 开启慢查询日志开关<br />\n slow_query_log=1<br />\n# 设置慢查询日志的时间为 2 秒，SQL 语句执行时间超过 2 秒，就会视为慢查询，记录慢查询日志<br />\n long_query_time=2<br />\n 更改后记得重启 MySQL 服务，日志文件位置：/var/lib/mysql/localhost-slow.log</p>\n<p>查看慢查询日志开关状态：<br />\n <code>show variables like 'slow_query_log';</code></p>\n<h3 id=\"profile\"><a class=\"anchor\" href=\"#profile\">#</a> profile</h3>\n<p>show profile 能在做 SQL 优化时帮我们了解时间都耗费在哪里。通过 have_profiling 参数，能看到当前 MySQL 是否支持 profile 操作：<br />\n <code>SELECT @@have_profiling;</code> <br />\nprofiling 默认关闭，可以通过 set 语句在 session/global 级别开启 profiling：<br />\n <code>SET profiling = 1;</code> <br />\n 查看所有语句的耗时：<br />\n <code>show profiles;</code> <br />\n 查看指定 query_id 的 SQL 语句各个阶段的耗时：<br />\n <code>show profile for query query_id;</code> <br />\n 查看指定 query_id 的 SQL 语句 CPU 的使用情况<br />\n <code>show profile cpu for query query_id;</code></p>\n<h3 id=\"explain\"><a class=\"anchor\" href=\"#explain\">#</a> explain</h3>\n<p>EXPLAIN 或者 DESC 命令获取 MySQL 如何执行 SELECT 语句的信息，包括在 SELECT 语句执行过程中表如何连接和连接的顺序。<br />\n语法：<br />\n# 直接在 select 语句之前加上关键字 explain /desc<br />\nEXPLAIN SELECT 字段列表 FROM 表名 HWERE 条件；</p>\n<p>EXPLAIN 各字段含义：</p>\n<ul>\n<li>id：select 查询的序列号，表示查询中执行 select 子句或者操作表的顺序（id 相同，执行顺序从上到下；id 不同，值越大越先执行）</li>\n<li>select_type：表示 SELECT 的类型，常见取值有 SIMPLE（简单表，即不适用表连接或者子查询）、PRIMARY（主查询，即外层的查询）、UNION（UNION 中的第二个或者后面的查询语句）、SUBQUERY（SELECT/WHERE 之后包含了子查询）等</li>\n<li>type：表示连接类型，性能由好到差的连接类型为 NULL、system、const、eq_ref、ref、range、index、all</li>\n<li>possible_key：可能应用在这张表上的索引，一个或多个</li>\n<li>Key：实际使用的索引，如果为 NULL，则没有使用索引</li>\n<li>Key_len：表示索引中使用的字节数，该值为索引字段最大可能长度，并非实际使用长度，在不损失精确性的前提下，长度越短越好</li>\n<li>rows：MySQL 认为必须要执行的行数，在 InnoDB 引擎的表中，是一个估计值，可能并不总是准确的</li>\n<li>filtered：表示返回结果的行数占需读取行数的百分比，filtered 的值越大越好</li>\n</ul>\n<h2 id=\"索引\"><a class=\"anchor\" href=\"#索引\">#</a> 索引</h2>\n<p>索引是帮助 MySQL <strong>高效获取数据</strong>的<strong>数据结构（有序）</strong>。在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查询算法，这种数据结构就是索引。</p>\n<p>优缺点：</p>\n<p>优点：</p>\n<ul>\n<li>提高数据检索效率，降低数据库的 IO 成本</li>\n<li>通过索引列对数据进行排序，降低数据排序的成本，降低 CPU 的消耗</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li>索引列也是要占用空间的</li>\n<li>索引大大提高了查询效率，但降低了更新的速度，比如 INSERT、UPDATE、DELETE</li>\n</ul>\n<h3 id=\"索引结构\"><a class=\"anchor\" href=\"#索引结构\">#</a> 索引结构</h3>\n<table>\n<thead>\n<tr>\n<th>索引结构</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>B+Tree</td>\n<td>最常见的索引类型，大部分引擎都支持 B + 树索引</td>\n</tr>\n<tr>\n<td>Hash</td>\n<td>底层数据结构是用哈希表实现，只有精确匹配索引列的查询才有效，不支持范围查询</td>\n</tr>\n<tr>\n<td>R-Tree (空间索引)</td>\n<td>空间索引是 MyISAM 引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少</td>\n</tr>\n<tr>\n<td>Full-Text (全文索引)</td>\n<td>是一种通过建立倒排索引，快速匹配文档的方式，类似于 Lucene, Solr, ES</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>索引</td>\n<td>InnoDB</td>\n<td>MyISAM</td>\n<td>Memory</td>\n</tr>\n<tr>\n<td>------------</td>\n<td>------------</td>\n<td>------------</td>\n<td>------------</td>\n</tr>\n<tr>\n<td>B+Tree 索引</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>Hash 索引</td>\n<td>不支持</td>\n<td>不支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>R-Tree 索引</td>\n<td>不支持</td>\n<td>支持</td>\n<td>不支持</td>\n</tr>\n<tr>\n<td>Full-text</td>\n<td>5.6 版本后支持</td>\n<td>支持</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"b-tree\"><a class=\"anchor\" href=\"#b-tree\">#</a> B-Tree</h4>\n<p><img data-src=\"https://learning-logs-1253130399.cos.ap-guangzhou.myqcloud.com/editor/%E4%BA%8C%E5%8F%89%E6%A0%91_20220316153214227108.png\" alt=\"二叉树\" title=\"二叉树\" /></p>\n<p>二叉树的缺点可以用红黑树来解决：<br />\n<img data-src=\"https://learning-logs-1253130399.cos.ap-guangzhou.myqcloud.com/editor/%E7%BA%A2%E9%BB%91%E6%A0%91_20220316163142686602.png\" alt=\"红黑树\" title=\"红黑树\" /><br />\n红黑树也存在大数据量情况下，层级较深，检索速度慢的问题。</p>\n<p>为了解决上述问题，可以使用 B-Tree 结构。<br />\nB-Tree (多路平衡查找树) 以一棵最大度数（max-degree，指一个节点的子节点个数）为 5（5 阶）的 b-tree 为例（每个节点最多存储 4 个 key，5 个指针）</p>\n<p><img data-src=\"https://learning-logs-1253130399.cos.ap-guangzhou.myqcloud.com/editor/B-Tree%E7%BB%93%E6%9E%84_20220316163813441163.png\" alt=\"B-Tree结构\" title=\"B-Tree结构\" /></p>\n<blockquote>\n<p>B-Tree 的数据插入过程动画参照：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUtyNHkxaTdydT9wPTY4\">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=68</span><br />\n 演示地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3MudXNmY2EuZWR1L35nYWxsZXMvdmlzdWFsaXphdGlvbi9CVHJlZS5odG1s\">https://www.cs.usfca.edu/~galles/visualization/BTree.html</span></p>\n</blockquote>\n<h4 id=\"btree\"><a class=\"anchor\" href=\"#btree\">#</a> B+Tree</h4>\n<p>结构图：</p>\n<p><img data-src=\"https://learning-logs-1253130399.cos.ap-guangzhou.myqcloud.com/editor/B+Tree%E7%BB%93%E6%9E%84%E5%9B%BE_20220316170700591277.png\" alt=\"B+Tree结构图\" title=\"B+Tree结构图\" /></p>\n<blockquote>\n<p>演示地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3MudXNmY2EuZWR1L35nYWxsZXMvdmlzdWFsaXphdGlvbi9CUGx1c1RyZWUuaHRtbA==\">https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html</span></p>\n</blockquote>\n<p>与 B-Tree 的区别：</p>\n<ul>\n<li>所有的数据都会出现在叶子节点</li>\n<li>叶子节点形成一个单向链表</li>\n</ul>\n<p>MySQL 索引数据结构对经典的 B+Tree 进行了优化。在原 B+Tree 的基础上，增加一个指向相邻叶子节点的链表指针，就形成了带有顺序指针的 B+Tree，提高区间访问的性能。</p>\n<p><img data-src=\"https://learning-logs-1253130399.cos.ap-guangzhou.myqcloud.com/editor/%E7%BB%93%E6%9E%84%E5%9B%BE_20220316171730865611.png\" alt=\"MySQL B+Tree 结构图\" title=\"MySQL B+Tree 结构图\" /></p>\n<h4 id=\"hash\"><a class=\"anchor\" href=\"#hash\">#</a> Hash</h4>\n<p>哈希索引就是采用一定的 hash 算法，将键值换算成新的 hash 值，映射到对应的槽位上，然后存储在 hash 表中。<br />\n如果两个（或多个）键值，映射到一个相同的槽位上，他们就产生了 hash 冲突（也称为 hash 碰撞），可以通过链表来解决。</p>\n<p><img data-src=\"https://learning-logs-1253130399.cos.ap-guangzhou.myqcloud.com/editor/Hash%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86%E5%9B%BE_20220317143226150679.png\" alt=\"Hash索引原理图\" title=\"Hash索引原理图\" /></p>\n<p>特点：</p>\n<ul>\n<li>Hash 索引只能用于对等比较（=、in），不支持范围查询（betwwn、&gt;、&lt;、...）</li>\n<li>无法利用索引完成排序操作</li>\n<li>查询效率高，通常只需要一次检索就可以了，效率通常要高于 B+Tree 索引</li>\n</ul>\n<p>存储引擎支持：</p>\n<ul>\n<li>Memory</li>\n<li>InnoDB: 具有自适应 hash 功能，hash 索引是存储引擎根据 B+Tree 索引在指定条件下自动构建的</li>\n</ul>\n<h4 id=\"面试题\"><a class=\"anchor\" href=\"#面试题\">#</a> 面试题</h4>\n<ol>\n<li>为什么 InnoDB 存储引擎选择使用 B+Tree 索引结构？</li>\n</ol>\n<ul>\n<li>相对于二叉树，层级更少，搜索效率高</li>\n<li>对于 B-Tree，无论是叶子节点还是非叶子节点，都会保存数据，这样导致一页中存储的键值减少，指针也跟着减少，要同样保存大量数据，只能增加树的高度，导致性能降低</li>\n<li>相对于 Hash 索引，B+Tree 支持范围匹配及排序操作</li>\n</ul>\n<h3 id=\"索引分类\"><a class=\"anchor\" href=\"#索引分类\">#</a> 索引分类</h3>\n<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>含义</th>\n<th>特点</th>\n<th>关键字</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>主键索引</td>\n<td>针对于表中主键创建的索引</td>\n<td>默认自动创建，只能有一个</td>\n<td>PRIMARY</td>\n</tr>\n<tr>\n<td>唯一索引</td>\n<td>避免同一个表中某数据列中的值重复</td>\n<td>可以有多个</td>\n<td>UNIQUE</td>\n</tr>\n<tr>\n<td>常规索引</td>\n<td>快速定位特定数据</td>\n<td>可以有多个</td>\n<td></td>\n</tr>\n<tr>\n<td>全文索引</td>\n<td>全文索引查找的是文本中的关键词，而不是比较索引中的值</td>\n<td>可以有多个</td>\n<td>FULLTEXT</td>\n</tr>\n</tbody>\n</table>\n<p>在 InnoDB 存储引擎中，根据索引的存储形式，又可以分为以下两种：</p>\n<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>含义</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>聚集索引 (Clustered Index)</td>\n<td>将数据存储与索引放一块，索引结构的叶子节点保存了行数据</td>\n<td>必须有，而且只有一个</td>\n</tr>\n<tr>\n<td>二级索引 (Secondary Index)</td>\n<td>将数据与索引分开存储，索引结构的叶子节点关联的是对应的主键</td>\n<td>可以存在多个</td>\n</tr>\n</tbody>\n</table>\n<p>演示图：</p>\n<p><img data-src=\"https://learning-logs-1253130399.cos.ap-guangzhou.myqcloud.com/editor/%E5%8E%9F%E7%90%86%E5%9B%BE_20220318194454880073.png\" alt=\"大致原理\" title=\"大致原理\" /><br />\n<img data-src=\"https://learning-logs-1253130399.cos.ap-guangzhou.myqcloud.com/editor/%E6%BC%94%E7%A4%BA%E5%9B%BE_20220319215403721066.png\" alt=\"演示图\" title=\"演示图\" /></p>\n<p>聚集索引选取规则：</p>\n<ul>\n<li>如果存在主键，主键索引就是聚集索引</li>\n<li>如果不存在主键，将使用第一个唯一 (UNIQUE) 索引作为聚集索引</li>\n<li>如果表没有主键或没有合适的唯一索引，则 InnoDB 会自动生成一个 rowid 作为隐藏的聚集索引</li>\n</ul>\n<h4 id=\"思考题\"><a class=\"anchor\" href=\"#思考题\">#</a> 思考题</h4>\n<p>1. 以下 SQL 语句，哪个执行效率高？为什么？</p>\n<pre><code class=\"language-mysql\">select * from user where id = 10;\nselect * from user where name = 'Arm';\n-- 备注：id为主键，name字段创建的有索引\n</code></pre>\n<p>答：第一条语句，因为第二条需要回表查询，相当于两个步骤。</p>\n<p>2. InnoDB 主键索引的 B+Tree 高度为多少？</p>\n<p>答：假设一行数据大小为 1k，一页中可以存储 16 行这样的数据。InnoDB 的指针占用 6 个字节的空间，主键假设为 bigint，占用字节数为 8.<br />\n 可得公式： <code>n * 8 + (n + 1) * 6 = 16 * 1024</code> ，其中 8 表示 bigint 占用的字节数，n 表示当前节点存储的 key 的数量，(n + 1) 表示指针数量（比 key 多一个）。算出 n 约为 1170。</p>\n<p>如果树的高度为 2，那么他能存储的数据量大概为： <code>1171 * 16 = 18736</code> ；<br />\n如果树的高度为 3，那么他能存储的数据量大概为： <code>1171 * 1171 * 16 = 21939856</code> 。</p>\n<p>另外，如果有成千上万的数据，那么就要考虑分表，涉及运维篇知识。</p>\n<h3 id=\"语法\"><a class=\"anchor\" href=\"#语法\">#</a> 语法</h3>\n<p>创建索引：<br />\n <code>CREATE [ UNIQUE | FULLTEXT ] INDEX index_name ON table_name (index_col_name, ...);</code> <br />\n 如果不加 CREATE 后面不加索引类型参数，则创建的是常规索引</p>\n<p>查看索引：<br />\n <code>SHOW INDEX FROM table_name;</code></p>\n<p>删除索引：<br />\n <code>DROP INDEX index_name ON table_name;</code></p>\n<p>案例：</p>\n<pre><code class=\"language-mysql\">-- name字段为姓名字段，该字段的值可能会重复，为该字段创建索引\ncreate index idx_user_name on tb_user(name);\n-- phone手机号字段的值非空，且唯一，为该字段创建唯一索引\ncreate unique index idx_user_phone on tb_user (phone);\n-- 为profession, age, status创建联合索引\ncreate index idx_user_pro_age_stat on tb_user(profession, age, status);\n-- 为email建立合适的索引来提升查询效率\ncreate index idx_user_email on tb_user(email);\n\n-- 删除索引\ndrop index idx_user_email on tb_user;\n</code></pre>\n<h3 id=\"使用规则\"><a class=\"anchor\" href=\"#使用规则\">#</a> 使用规则</h3>\n<h4 id=\"最左前缀法则\"><a class=\"anchor\" href=\"#最左前缀法则\">#</a> 最左前缀法则</h4>\n<p>如果索引关联了多列（联合索引），要遵守最左前缀法则，最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。<br />\n如果跳跃某一列，索引将部分失效（后面的字段索引失效）。</p>\n<p>联合索引中，出现范围查询（&lt;,&gt;），范围查询右侧的列索引失效。可以用 &gt;= 或者 &lt;= 来规避索引失效问题。</p>\n<h4 id=\"索引失效情况\"><a class=\"anchor\" href=\"#索引失效情况\">#</a> 索引失效情况</h4>\n<ol>\n<li>在索引列上进行运算操作，索引将失效。如： <code>explain select * from tb_user where substring(phone, 10, 2) = '15';</code></li>\n<li>字符串类型字段使用时，不加引号，索引将失效。如： <code>explain select * from tb_user where phone = 17799990015;</code> ，此处 phone 的值没有加引号</li>\n<li>模糊查询中，如果仅仅是尾部模糊匹配，索引不会是失效；如果是头部模糊匹配，索引失效。如： <code>explain select * from tb_user where profession like '%工程';</code> ，前后都有 % 也会失效。</li>\n<li>用 or 分割开的条件，如果 or 其中一个条件的列没有索引，那么涉及的索引都不会被用到。</li>\n<li>如果 MySQL 评估使用索引比全表更慢，则不使用索引。</li>\n</ol>\n<h4 id=\"sql-提示\"><a class=\"anchor\" href=\"#sql-提示\">#</a> SQL 提示</h4>\n<p>是优化数据库的一个重要手段，简单来说，就是在 SQL 语句中加入一些人为的提示来达到优化操作的目的。</p>\n<p>例如，使用索引：<br />\n <code>explain select * from tb_user use index(idx_user_pro) where profession=&quot;软件工程&quot;;</code> <br />\n 不使用哪个索引：<br />\n <code>explain select * from tb_user ignore index(idx_user_pro) where profession=&quot;软件工程&quot;;</code> <br />\n 必须使用哪个索引：<br />\n <code>explain select * from tb_user force index(idx_user_pro) where profession=&quot;软件工程&quot;;</code></p>\n<p>use 是建议，实际使用哪个索引 MySQL 还会自己权衡运行速度去更改，force 就是无论如何都强制使用该索引。</p>\n<h4 id=\"覆盖索引回表查询\"><a class=\"anchor\" href=\"#覆盖索引回表查询\">#</a> 覆盖索引 &amp; 回表查询</h4>\n<p>尽量使用覆盖索引（查询使用了索引，并且需要返回的列，在该索引中已经全部能找到），减少 select *。</p>\n<p>explain 中 extra 字段含义：<br />\n <code>using index condition</code> ：查找使用了索引，但是需要回表查询数据<br />\n <code>using where; using index;</code> ：查找使用了索引，但是需要的数据都在索引列中能找到，所以不需要回表查询</p>\n<p>如果在聚集索引中直接能找到对应的行，则直接返回行数据，只需要一次查询，哪怕是 select *；如果在辅助索引中找聚集索引，如 <code>select id, name from xxx where name='xxx';</code> ，也只需要通过辅助索引 (name) 查找到对应的 id，返回 name 和 name 索引对应的 id 即可，只需要一次查询；如果是通过辅助索引查找其他字段，则需要回表查询，如 <code>select id, name, gender from xxx where name='xxx';</code></p>\n<p>所以尽量不要用 <code>select *</code> ，容易出现回表查询，降低效率，除非有联合索引包含了所有字段</p>\n<p>面试题：一张表，有四个字段（id, username, password, status），由于数据量大，需要对以下 SQL 语句进行优化，该如何进行才是最优方案：<br />\n <code>select id, username, password from tb_user where username='itcast';</code></p>\n<p>解：给 username 和 password 字段建立联合索引，则不需要回表查询，直接覆盖索引</p>\n<h4 id=\"前缀索引\"><a class=\"anchor\" href=\"#前缀索引\">#</a> 前缀索引</h4>\n<p>当字段类型为字符串（varchar, text 等）时，有时候需要索引很长的字符串，这会让索引变得很大，查询时，浪费大量的磁盘 IO，影响查询效率，此时可以只降字符串的一部分前缀，建立索引，这样可以大大节约索引空间，从而提高索引效率。</p>\n<p>语法： <code>create index idx_xxxx on table_name(columnn(n));</code> <br />\n 前缀长度：可以根据索引的选择性来决定，而选择性是指不重复的索引值（基数）和数据表的记录总数的比值，索引选择性越高则查询效率越高，唯一索引的选择性是 1，这是最好的索引选择性，性能也是最好的。<br />\n求选择性公式：</p>\n<pre><code class=\"language-mysql\">select count(distinct email) / count(*) from tb_user;\nselect count(distinct substring(email, 1, 5)) / count(*) from tb_user;\n</code></pre>\n<p>show index 里面的 sub_part 可以看到接取的长度</p>\n<h4 id=\"单列索引联合索引\"><a class=\"anchor\" href=\"#单列索引联合索引\">#</a> 单列索引 &amp; 联合索引</h4>\n<p>单列索引：即一个索引只包含单个列<br />\n联合索引：即一个索引包含了多个列<br />\n在业务场景中，如果存在多个查询条件，考虑针对于查询字段建立索引时，建议建立联合索引，而非单列索引。</p>\n<p>单列索引情况：<br />\n <code>explain select id, phone, name from tb_user where phone = '17799990010' and name = '韩信';</code> <br />\n 这句只会用到 phone 索引字段</p>\n<h5 id=\"注意事项-9\"><a class=\"anchor\" href=\"#注意事项-9\">#</a> 注意事项</h5>\n<ul>\n<li>多条件联合查询时，MySQL 优化器会评估哪个字段的索引效率更高，会选择该索引完成本次查询</li>\n</ul>\n<h3 id=\"设计原则\"><a class=\"anchor\" href=\"#设计原则\">#</a> 设计原则</h3>\n<ol>\n<li>针对于数据量较大，且查询比较频繁的表建立索引</li>\n<li>针对于常作为查询条件（where）、排序（order by）、分组（group by）操作的字段建立索引</li>\n<li>尽量选择区分度高的列作为索引，尽量建立唯一索引，区分度越高，使用索引的效率越高</li>\n<li>如果是字符串类型的字段，字段长度较长，可以针对于字段的特点，建立前缀索引</li>\n<li>尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率</li>\n<li>要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价就越大，会影响增删改的效率</li>\n<li>如果索引列不能存储 NULL 值，请在创建表时使用 NOT NULL 约束它。当优化器知道每列是否包含 NULL 值时，它可以更好地确定哪个索引最有效地用于查询</li>\n</ol>\n<h2 id=\"sql-优化\"><a class=\"anchor\" href=\"#sql-优化\">#</a> SQL 优化</h2>\n<h3 id=\"插入数据\"><a class=\"anchor\" href=\"#插入数据\">#</a> 插入数据</h3>\n<p>普通插入：</p>\n<ol>\n<li>采用批量插入（一次插入的数据不建议超过 1000 条）</li>\n<li>手动提交事务</li>\n<li>主键顺序插入</li>\n</ol>\n<p>大批量插入：<br />\n如果一次性需要插入大批量数据，使用 insert 语句插入性能较低，此时可以使用 MySQL 数据库提供的 load 指令插入。</p>\n<pre><code class=\"language-mysql\"># 客户端连接服务端时，加上参数 --local-infile（这一行在bash/cmd界面输入）\nmysql --local-infile -u root -p\n# 设置全局参数local_infile为1，开启从本地加载文件导入数据的开关\nset global local_infile = 1;\nselect @@local_infile;\n# 执行load指令将准备好的数据，加载到表结构中\nload data local infile '/root/sql1.log' into table 'tb_user' fields terminated by ',' lines terminated by '\\n';\n</code></pre>\n<h3 id=\"主键优化\"><a class=\"anchor\" href=\"#主键优化\">#</a> 主键优化</h3>\n<p>数据组织方式：在 InnoDB 存储引擎中，表数据都是根据主键顺序组织存放的，这种存储方式的表称为索引组织表（Index organized table, IOT）</p>\n<p>页分裂：页可以为空，也可以填充一般，也可以填充 100%，每个页包含了 2-N 行数据（如果一行数据过大，会行溢出），根据主键排列。<br />\n页合并：当删除一行记录时，实际上记录并没有被物理删除，只是记录被标记（flaged）为删除并且它的空间变得允许被其他记录声明使用。当页中删除的记录到达 MERGE_THRESHOLD（默认为页的 50%），InnoDB 会开始寻找最靠近的页（前后）看看是否可以将这两个页合并以优化空间使用。</p>\n<p>MERGE_THRESHOLD：合并页的阈值，可以自己设置，在创建表或创建索引时指定</p>\n<blockquote>\n<p>文字说明不够清晰明了，具体可以看视频里的 PPT 演示过程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUtyNHkxaTdydT9wPTkw\">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=90</span></p>\n</blockquote>\n<p>主键设计原则：</p>\n<ul>\n<li>满足业务需求的情况下，尽量降低主键的长度</li>\n<li>插入数据时，尽量选择顺序插入，选择使用 AUTO_INCREMENT 自增主键</li>\n<li>尽量不要使用 UUID 做主键或者是其他的自然主键，如身份证号</li>\n<li>业务操作时，避免对主键的修改</li>\n</ul>\n<h3 id=\"order-by优化\"><a class=\"anchor\" href=\"#order-by优化\">#</a> order by 优化</h3>\n<ol>\n<li>Using filesort：通过表的索引或全表扫描，读取满足条件的数据行，然后在排序缓冲区 sort buffer 中完成排序操作，所有不是通过索引直接返回排序结果的排序都叫 FileSort 排序</li>\n<li>Using index：通过有序索引顺序扫描直接返回有序数据，这种情况即为 using index，不需要额外排序，操作效率高</li>\n</ol>\n<p>如果 order by 字段全部使用升序排序或者降序排序，则都会走索引，但是如果一个字段升序排序，另一个字段降序排序，则不会走索引，explain 的 extra 信息显示的是 <code>Using index, Using filesort</code> ，如果要优化掉 Using filesort，则需要另外再创建一个索引，如： <code>create index idx_user_age_phone_ad on tb_user(age asc, phone desc);</code> ，此时使用 <code>select id, age, phone from tb_user order by age asc, phone desc;</code>  会全部走索引</p>\n<p>总结：</p>\n<ul>\n<li>根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则</li>\n<li>尽量使用覆盖索引</li>\n<li>多字段排序，一个升序一个降序，此时需要注意联合索引在创建时的规则（ASC/DESC）</li>\n<li>如果不可避免出现 filesort，大数据量排序时，可以适当增大排序缓冲区大小 sort_buffer_size（默认 256k）</li>\n</ul>\n<h3 id=\"group-by优化\"><a class=\"anchor\" href=\"#group-by优化\">#</a> group by 优化</h3>\n<ul>\n<li>在分组操作时，可以通过索引来提高效率</li>\n<li>分组操作时，索引的使用也是满足最左前缀法则的</li>\n</ul>\n<p>如索引为 <code>idx_user_pro_age_stat</code> ，则句式可以是 <code>select ... where profession order by age</code> ，这样也符合最左前缀法则</p>\n<h3 id=\"limit优化\"><a class=\"anchor\" href=\"#limit优化\">#</a> limit 优化</h3>\n<p>常见的问题如 <code>limit 2000000, 10</code> ，此时需要 MySQL 排序前 2000000 条记录，但仅仅返回 2000000 - 2000010 的记录，其他记录丢弃，查询排序的代价非常大。<br />\n优化方案：一般分页查询时，通过创建覆盖索引能够比较好地提高性能，可以通过覆盖索引加子查询形式进行优化</p>\n<p>例如：</p>\n<pre><code class=\"language-mysql\">-- 此语句耗时很长\nselect * from tb_sku limit 9000000, 10;\n-- 通过覆盖索引加快速度，直接通过主键索引进行排序及查询\nselect id from tb_sku order by id limit 9000000, 10;\n-- 下面的语句是错误的，因为 MySQL 不支持 in 里面使用 limit\n-- select * from tb_sku where id in (select id from tb_sku order by id limit 9000000, 10);\n-- 通过连表查询即可实现第一句的效果，并且能达到第二句的速度\nselect * from tb_sku as s, (select id from tb_sku order by id limit 9000000, 10) as a where s.id = a.id;\n</code></pre>\n<h3 id=\"count优化\"><a class=\"anchor\" href=\"#count优化\">#</a> count 优化</h3>\n<p>MyISAM 引擎把一个表的总行数存在了磁盘上，因此执行 count (*) 的时候会直接返回这个数，效率很高（前提是不适用 where）；<br />\nInnoDB 在执行 count (*) 时，需要把数据一行一行地从引擎里面读出来，然后累计计数。<br />\n优化方案：自己计数，如创建 key-value 表存储在内存或硬盘，或者是用 redis</p>\n<p>count 的几种用法：</p>\n<ul>\n<li>如果 count 函数的参数（count 里面写的那个字段）不是 NULL（字段值不为 NULL），累计值就加一，最后返回累计值</li>\n<li>用法：count (*)、count (主键)、count (字段)、count (1)</li>\n<li>count (主键) 跟 count (*) 一样，因为主键不能为空；count (字段) 只计算字段值不为 NULL 的行；count (1) 引擎会为每行添加一个 1，然后就 count 这个 1，返回结果也跟 count (*) 一样；count (null) 返回 0</li>\n</ul>\n<p>各种用法的性能：</p>\n<ul>\n<li>count (主键)：InnoDB 引擎会遍历整张表，把每行的主键 id 值都取出来，返回给服务层，服务层拿到主键后，直接按行进行累加（主键不可能为空）</li>\n<li>count (字段)：没有 not null 约束的话，InnoDB 引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，服务层判断是否为 null，不为 null，计数累加；有 not null 约束的话，InnoDB 引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，直接按行进行累加</li>\n<li>count (1)：InnoDB 引擎遍历整张表，但不取值。服务层对于返回的每一层，放一个数字 1 进去，直接按行进行累加</li>\n<li>count (*)：InnoDB 引擎并不会把全部字段取出来，而是专门做了优化，不取值，服务层直接按行进行累加</li>\n</ul>\n<p>按效率排序：count (字段) &lt; count (主键) &lt; count (1) &lt; count (*)，所以尽量使用 count (*)</p>\n<h3 id=\"update优化避免行锁升级为表锁\"><a class=\"anchor\" href=\"#update优化避免行锁升级为表锁\">#</a> update 优化（避免行锁升级为表锁）</h3>\n<p>InnoDB 的行锁是针对索引加的锁，不是针对记录加的锁，并且该索引不能失效，否则会从行锁升级为表锁。</p>\n<p>如以下两条语句：<br />\n <code>update student set no = '123' where id = 1;</code> ，这句由于 id 有主键索引，所以只会锁这一行；<br />\n <code>update student set no = '123' where name = 'test';</code> ，这句由于 name 没有索引，所以会把整张表都锁住进行数据更新，解决方法是给 name 字段添加索引</p>\n<h1 id=\"数据类型\"><a class=\"anchor\" href=\"#数据类型\">#</a> 数据类型</h1>\n<h2 id=\"整型\"><a class=\"anchor\" href=\"#整型\">#</a> 整型</h2>\n<table>\n<thead>\n<tr>\n<th>类型名称</th>\n<th>取值范围</th>\n<th>大小</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>TINYINT</td>\n<td>-128〜127</td>\n<td>1 个字节</td>\n</tr>\n<tr>\n<td>SMALLINT</td>\n<td>-32768〜32767</td>\n<td>2 个宇节</td>\n</tr>\n<tr>\n<td>MEDIUMINT</td>\n<td>-8388608〜8388607</td>\n<td>3 个字节</td>\n</tr>\n<tr>\n<td>INT (INTEGHR)</td>\n<td>-2147483648〜2147483647</td>\n<td>4 个字节</td>\n</tr>\n<tr>\n<td>BIGINT</td>\n<td>-9223372036854775808〜9223372036854775807</td>\n<td>8 个字节</td>\n</tr>\n</tbody>\n</table>\n<p>无符号在数据类型后加 unsigned 关键字。</p>\n<h2 id=\"浮点型\"><a class=\"anchor\" href=\"#浮点型\">#</a> 浮点型</h2>\n<table>\n<thead>\n<tr>\n<th>类型名称</th>\n<th>说明</th>\n<th>存储需求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>FLOAT</td>\n<td>单精度浮点数</td>\n<td>4 个字节</td>\n</tr>\n<tr>\n<td>DOUBLE</td>\n<td>双精度浮点数</td>\n<td>8 个字节</td>\n</tr>\n<tr>\n<td>DECIMAL (M, D)，DEC</td>\n<td>压缩的 “严格” 定点数</td>\n<td>M+2 个字节</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"日期和时间\"><a class=\"anchor\" href=\"#日期和时间\">#</a> 日期和时间</h2>\n<table>\n<thead>\n<tr>\n<th>类型名称</th>\n<th>日期格式</th>\n<th>日期范围</th>\n<th>存储需求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>YEAR</td>\n<td>YYYY</td>\n<td>1901 ~ 2155</td>\n<td>1 个字节</td>\n</tr>\n<tr>\n<td>TIME</td>\n<td>HH:MM:SS</td>\n<td>-838:59:59 ~ 838:59:59</td>\n<td>3 个字节</td>\n</tr>\n<tr>\n<td>DATE</td>\n<td>YYYY-MM-DD</td>\n<td>1000-01-01 ~ 9999-12-3</td>\n<td>3 个字节</td>\n</tr>\n<tr>\n<td>DATETIME</td>\n<td>YYYY-MM-DD HH:MM:SS</td>\n<td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td>\n<td>8 个字节</td>\n</tr>\n<tr>\n<td>TIMESTAMP</td>\n<td>YYYY-MM-DD HH:MM:SS</td>\n<td>1980-01-01 00:00:01 UTC ~ 2040-01-19 03:14:07 UTC</td>\n<td>4 个字节</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"字符串\"><a class=\"anchor\" href=\"#字符串\">#</a> 字符串</h2>\n<table>\n<thead>\n<tr>\n<th>类型名称</th>\n<th>说明</th>\n<th>存储需求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CHAR(M)</td>\n<td>固定长度非二进制字符串</td>\n<td>M 字节，1&lt;=M&lt;=255</td>\n</tr>\n<tr>\n<td>VARCHAR(M)</td>\n<td>变长非二进制字符串</td>\n<td>L+1 字节，在此，L&lt; = M 和 1&lt;=M&lt;=255</td>\n</tr>\n<tr>\n<td>TINYTEXT</td>\n<td>非常小的非二进制字符串</td>\n<td>L+1 字节，在此，L&lt;2^8</td>\n</tr>\n<tr>\n<td>TEXT</td>\n<td>小的非二进制字符串</td>\n<td>L+2 字节，在此，L&lt;2^16</td>\n</tr>\n<tr>\n<td>MEDIUMTEXT</td>\n<td>中等大小的非二进制字符串</td>\n<td>L+3 字节，在此，L&lt;2^24</td>\n</tr>\n<tr>\n<td>LONGTEXT</td>\n<td>大的非二进制字符串</td>\n<td>L+4 字节，在此，L&lt;2^32</td>\n</tr>\n<tr>\n<td>ENUM</td>\n<td>枚举类型，只能有一个枚举字符串值</td>\n<td>1 或 2 个字节，取决于枚举值的数目 (最大值为 65535)</td>\n</tr>\n<tr>\n<td>SET</td>\n<td>一个设置，字符串对象可以有零个或 多个 SET 成员</td>\n<td>1、2、3、4 或 8 个字节，取决于集合 成员的数量（最多 64 个成员）</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"二进制类型\"><a class=\"anchor\" href=\"#二进制类型\">#</a> 二进制类型</h2>\n<table>\n<thead>\n<tr>\n<th>类型名称</th>\n<th>说明</th>\n<th>存储需求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BIT(M)</td>\n<td>位字段类型</td>\n<td>大约 (M+7)/8 字节</td>\n</tr>\n<tr>\n<td>BINARY(M)</td>\n<td>固定长度二进制字符串</td>\n<td>M 字节</td>\n</tr>\n<tr>\n<td>VARBINARY (M)</td>\n<td>可变长度二进制字符串</td>\n<td>M+1 字节</td>\n</tr>\n<tr>\n<td>TINYBLOB (M)</td>\n<td>非常小的 BLOB</td>\n<td>L+1 字节，在此，L&lt;2^8</td>\n</tr>\n<tr>\n<td>BLOB (M)</td>\n<td>小 BLOB</td>\n<td>L+2 字节，在此，L&lt;2^16</td>\n</tr>\n<tr>\n<td>MEDIUMBLOB (M)</td>\n<td>中等大小的 BLOB</td>\n<td>L+3 字节，在此，L&lt;2^24</td>\n</tr>\n<tr>\n<td>LONGBLOB (M)</td>\n<td>非常大的 BLOB</td>\n<td>L+4 字节，在此，L&lt;2^32</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"权限一览表\"><a class=\"anchor\" href=\"#权限一览表\">#</a> 权限一览表</h1>\n<blockquote>\n<p>具体权限的作用详见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vOC4wL2VuL3ByaXZpbGVnZXMtcHJvdmlkZWQuaHRtbA==\">官方文档</span></p>\n</blockquote>\n<p>GRANT 和 REVOKE 允许的静态权限</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Privilege</th>\n<th style=\"text-align:left\">Grant Table Column</th>\n<th style=\"text-align:left\">Context</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_all\"> <code>ALL [PRIVILEGES]</code> </a></td>\n<td style=\"text-align:left\">Synonym for “all privileges”</td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter\"> <code>ALTER</code> </a></td>\n<td style=\"text-align:left\"><code>Alter_priv</code></td>\n<td style=\"text-align:left\">Tables</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter-routine\"> <code>ALTER ROUTINE</code> </a></td>\n<td style=\"text-align:left\"><code>Alter_routine_priv</code></td>\n<td style=\"text-align:left\">Stored routines</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create\"> <code>CREATE</code> </a></td>\n<td style=\"text-align:left\"><code>Create_priv</code></td>\n<td style=\"text-align:left\">Databases, tables, or indexes</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-role\"> <code>CREATE ROLE</code> </a></td>\n<td style=\"text-align:left\"><code>Create_role_priv</code></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-routine\"> <code>CREATE ROUTINE</code> </a></td>\n<td style=\"text-align:left\"><code>Create_routine_priv</code></td>\n<td style=\"text-align:left\">Stored routines</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-tablespace\"> <code>CREATE TABLESPACE</code> </a></td>\n<td style=\"text-align:left\"><code>Create_tablespace_priv</code></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-temporary-tables\"> <code>CREATE TEMPORARY TABLES</code> </a></td>\n<td style=\"text-align:left\"><code>Create_tmp_table_priv</code></td>\n<td style=\"text-align:left\">Tables</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-user\"> <code>CREATE USER</code> </a></td>\n<td style=\"text-align:left\"><code>Create_user_priv</code></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-view\"> <code>CREATE VIEW</code> </a></td>\n<td style=\"text-align:left\"><code>Create_view_priv</code></td>\n<td style=\"text-align:left\">Views</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_delete\"> <code>DELETE</code> </a></td>\n<td style=\"text-align:left\"><code>Delete_priv</code></td>\n<td style=\"text-align:left\">Tables</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop\"> <code>DROP</code> </a></td>\n<td style=\"text-align:left\"><code>Drop_priv</code></td>\n<td style=\"text-align:left\">Databases, tables, or views</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop-role\"> <code>DROP ROLE</code> </a></td>\n<td style=\"text-align:left\"><code>Drop_role_priv</code></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_event\"> <code>EVENT</code> </a></td>\n<td style=\"text-align:left\"><code>Event_priv</code></td>\n<td style=\"text-align:left\">Databases</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_execute\"> <code>EXECUTE</code> </a></td>\n<td style=\"text-align:left\"><code>Execute_priv</code></td>\n<td style=\"text-align:left\">Stored routines</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_file\"> <code>FILE</code> </a></td>\n<td style=\"text-align:left\"><code>File_priv</code></td>\n<td style=\"text-align:left\">File access on server host</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_grant-option\"> <code>GRANT OPTION</code> </a></td>\n<td style=\"text-align:left\"><code>Grant_priv</code></td>\n<td style=\"text-align:left\">Databases, tables, or stored routines</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_index\"> <code>INDEX</code> </a></td>\n<td style=\"text-align:left\"><code>Index_priv</code></td>\n<td style=\"text-align:left\">Tables</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_insert\"> <code>INSERT</code> </a></td>\n<td style=\"text-align:left\"><code>Insert_priv</code></td>\n<td style=\"text-align:left\">Tables or columns</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_lock-tables\"> <code>LOCK TABLES</code> </a></td>\n<td style=\"text-align:left\"><code>Lock_tables_priv</code></td>\n<td style=\"text-align:left\">Databases</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_process\"> <code>PROCESS</code> </a></td>\n<td style=\"text-align:left\"><code>Process_priv</code></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_proxy\"> <code>PROXY</code> </a></td>\n<td style=\"text-align:left\">See  <code>proxies_priv</code>  table</td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_references\"> <code>REFERENCES</code> </a></td>\n<td style=\"text-align:left\"><code>References_priv</code></td>\n<td style=\"text-align:left\">Databases or tables</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_reload\"> <code>RELOAD</code> </a></td>\n<td style=\"text-align:left\"><code>Reload_priv</code></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-client\"> <code>REPLICATION CLIENT</code> </a></td>\n<td style=\"text-align:left\"><code>Repl_client_priv</code></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave\"> <code>REPLICATION SLAVE</code> </a></td>\n<td style=\"text-align:left\"><code>Repl_slave_priv</code></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_select\"> <code>SELECT</code> </a></td>\n<td style=\"text-align:left\"><code>Select_priv</code></td>\n<td style=\"text-align:left\">Tables or columns</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-databases\"> <code>SHOW DATABASES</code> </a></td>\n<td style=\"text-align:left\"><code>Show_db_priv</code></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-view\"> <code>SHOW VIEW</code> </a></td>\n<td style=\"text-align:left\"><code>Show_view_priv</code></td>\n<td style=\"text-align:left\">Views</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_shutdown\"> <code>SHUTDOWN</code> </a></td>\n<td style=\"text-align:left\"><code>Shutdown_priv</code></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_super\"> <code>SUPER</code> </a></td>\n<td style=\"text-align:left\"><code>Super_priv</code></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_trigger\"> <code>TRIGGER</code> </a></td>\n<td style=\"text-align:left\"><code>Trigger_priv</code></td>\n<td style=\"text-align:left\">Tables</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_update\"> <code>UPDATE</code> </a></td>\n<td style=\"text-align:left\"><code>Update_priv</code></td>\n<td style=\"text-align:left\">Tables or columns</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_usage\"> <code>USAGE</code> </a></td>\n<td style=\"text-align:left\">Synonym for “no privileges”</td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n</tbody>\n</table>\n<p>GRANT 和 REVOKE 允许的动态权限</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Privilege</th>\n<th style=\"text-align:left\">Context</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_application-password-admin\"> <code>APPLICATION_PASSWORD_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Dual password administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-abort-exempt\"> <code>AUDIT_ABORT_EXEMPT</code> </a></td>\n<td style=\"text-align:left\">Allow queries blocked by audit log filter</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-admin\"> <code>AUDIT_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Audit log administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_authentication-policy-admin\"> <code>AUTHENTICATION_POLICY_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Authentication administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_backup-admin\"> <code>BACKUP_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Backup administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-admin\"> <code>BINLOG_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Backup and Replication administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-encryption-admin\"> <code>BINLOG_ENCRYPTION_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Backup and Replication administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_clone-admin\"> <code>CLONE_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Clone administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_connection-admin\"> <code>CONNECTION_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_encryption-key-admin\"> <code>ENCRYPTION_KEY_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-admin\"> <code>FIREWALL_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Firewall administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-exempt\"> <code>FIREWALL_EXEMPT</code> </a></td>\n<td style=\"text-align:left\">Firewall administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-user\"> <code>FIREWALL_USER</code> </a></td>\n<td style=\"text-align:left\">Firewall administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-optimizer-costs\"> <code>FLUSH_OPTIMIZER_COSTS</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-status\"> <code>FLUSH_STATUS</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-tables\"> <code>FLUSH_TABLES</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-user-resources\"> <code>FLUSH_USER_RESOURCES</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-admin\"> <code>GROUP_REPLICATION_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Replication administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-stream\"> <code>GROUP_REPLICATION_STREAM</code> </a></td>\n<td style=\"text-align:left\">Replication administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_innodb-redo-log-archive\"> <code>INNODB_REDO_LOG_ARCHIVE</code> </a></td>\n<td style=\"text-align:left\">Redo log archiving administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_ndb-stored-user\"> <code>NDB_STORED_USER</code> </a></td>\n<td style=\"text-align:left\">NDB Cluster</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_passwordless-user-admin\"> <code>PASSWORDLESS_USER_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Authentication administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_persist-ro-variables-admin\"> <code>PERSIST_RO_VARIABLES_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-applier\"> <code>REPLICATION_APPLIER</code> </a></td>\n<td style=\"text-align:left\"><code>PRIVILEGE_CHECKS_USER</code>  for a replication channel</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave-admin\"> <code>REPLICATION_SLAVE_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Replication administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-admin\"> <code>RESOURCE_GROUP_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Resource group administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-user\"> <code>RESOURCE_GROUP_USER</code> </a></td>\n<td style=\"text-align:left\">Resource group administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_role-admin\"> <code>ROLE_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_session-variables-admin\"> <code>SESSION_VARIABLES_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_set-user-id\"> <code>SET_USER_ID</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-routine\"> <code>SHOW_ROUTINE</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-user\"> <code>SYSTEM_USER</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-variables-admin\"> <code>SYSTEM_VARIABLES_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_table-encryption-admin\"> <code>TABLE_ENCRYPTION_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_version-token-admin\"> <code>VERSION_TOKEN_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_xa-recover-admin\"> <code>XA_RECOVER_ADMIN</code> </a></td>\n<td style=\"text-align:left\">Server administration</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"图形化界面工具\"><a class=\"anchor\" href=\"#图形化界面工具\">#</a> 图形化界面工具</h1>\n<ul>\n<li>DataGrip (有破解脚本): <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9kYXRhZ3JpcC8=\">https://www.jetbrains.com/datagrip/</span></li>\n<li>Workbench (免费): <span class=\"exturl\" data-url=\"aHR0cDovL2Rldi5teXNxbC5jb20vZG93bmxvYWRzL3dvcmtiZW5jaC8=\">http://dev.mysql.com/downloads/workbench/</span></li>\n<li>navicat (收费，试用版 30 天): <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmF2aWNhdC5jb20vZW4vZG93bmxvYWQvbmF2aWNhdC1mb3ItbXlzcWw=\">https://www.navicat.com/en/download/navicat-for-mysql</span></li>\n<li>Sequel Pro (开源免费，仅支持 Mac OS): <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zZXF1ZWxwcm8uY29tLw==\">http://www.sequelpro.com/</span></li>\n<li>HeidiSQL (免费): <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oZWlkaXNxbC5jb20v\">http://www.heidisql.com/</span></li>\n<li>phpMyAdmin (免费): <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGhwbXlhZG1pbi5uZXQv\">https://www.phpmyadmin.net/</span></li>\n<li>SQLyog: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcWx5b2cuZW4uc29mdG9uaWMuY29tLw==\">https://sqlyog.en.softonic.com/</span></li>\n</ul>\n<h1 id=\"小技巧\"><a class=\"anchor\" href=\"#小技巧\">#</a> 小技巧</h1>\n<ol>\n<li>在 SQL 语句之后加上 <code>\\G</code>  会将结果的表格形式转换成行文本形式</li>\n<li>查看 Mysql 数据库占用空间：</li>\n</ol>\n<pre><code class=\"language-mysql\">SELECT table_schema &quot;Database Name&quot;\n     , SUM(data_length + index_length) / (1024 * 1024) &quot;Database Size in MB&quot;\nFROM information_schema.TABLES\nGROUP BY table_schema;\n</code></pre>\n",
            "tags": [
                "Mysql"
            ]
        },
        {
            "id": "https://zyakmd.github.io/2024/03/11/spring%E5%A4%8D%E4%B9%A0/Spring%20framework/",
            "url": "https://zyakmd.github.io/2024/03/11/spring%E5%A4%8D%E4%B9%A0/Spring%20framework/",
            "title": "Spring framework",
            "date_published": "2024-03-11T05:56:18.000Z",
            "content_html": "<p>Spring 框架主要的优势是在 <code>简化开发</code> 和 <code>框架整合</code> 上，至于如何实现就是学习 Spring 框架的主要内容：</p>\n<ul>\n<li>简化开发: Spring 框架中提供了两个大的核心技术，分别是:\n<ul>\n<li><mark>IOC</mark></li>\n<li><mark>AOP</mark></li>\n<li><mark>事务处理</mark></li>\n</ul>\n</li>\n<li>框架整合: Spring 在框架整合这块已经做到了极致，它可以整合市面上几乎所有主流框架，比如:\n<ul>\n<li><mark>MyBatis</mark></li>\n<li>MyBatis-plus</li>\n<li>Struts</li>\n<li>Struts2</li>\n<li>Hibernate</li>\n<li>……<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUZpNHkxUzdpeC8/dmRfc291cmNlPThmNjc0NTk4N2Y2ZDljNGEzMzM1NzA4NTJlNDMzZDZj\"> 参考黑马教程</span></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"spring-介绍\"><a class=\"anchor\" href=\"#spring-介绍\">#</a> spring 介绍</h1>\n<p>基于 java web 的升级，很久以前学的来，挺多忘了，这部分不完整的整理了，参考下别人的 javaweb 内容的博客快速过下：</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJvcmcyMDc3LmdpdGh1Yi5pby8yMDIyLzA4LzExL0phdmFXZWIwMS8=\">maven+mybatis</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJvcmcyMDc3LmdpdGh1Yi5pby8yMDIyLzA4LzE2L0phdmFXZWIwNC8=\">HTTP&amp;Tomcat&amp;Servlet</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJvcmcyMDc3LmdpdGh1Yi5pby8yMDIyLzA4LzE3L0phdmFXZWIwNS8=\">Request&amp;Response</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJvcmcyMDc3LmdpdGh1Yi5pby8yMDIyLzA4LzE4L0phdmFXZWIwNi8=\">MVC 与三层架构</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJvcmcyMDc3LmdpdGh1Yi5pby8yMDIyLzA4LzIwL0phdmFXZWIwNy8=\">会话技术 - cookie、session</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\" /><label for=\"cbx_5\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJvcmcyMDc3LmdpdGh1Yi5pby8yMDIyLzA4LzIxL0phdmFXZWIwOC8=\">Filter&amp;Listener-Servlet 外的三大 JW 的组件</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_6\" disabled=\"true\" /><label for=\"cbx_6\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJvcmcyMDc3LmdpdGh1Yi5pby8yMDIyLzA4LzI0L0phdmFXZWIxMC8=\">JW 综合案例</span></label></li>\n</ul>\n<p>发现这个佬↑用了图床，有些教程里的图片可以直接白嫖！</p>\n<h2 id=\"学什么\"><a class=\"anchor\" href=\"#学什么\">#</a> 学什么</h2>\n<ul>\n<li>\n<p>简化开发: Spring 框架中提供了两个大的核心技术，分别是:</p>\n<ul>\n<li><mark>IOC</mark></li>\n<li><mark>AOP</mark></li>\n<li><mark>事务处理</mark></li>\n</ul>\n<ol>\n<li>Spring 的简化操作都是基于这两块内容，所以这也是 Spring 学习中最为重要的两个知识点。</li>\n<li>事务处理属于 Spring 中 AOP 的具体应用，可以简化项目中的事务管理，也是 Spring 技术中的一大亮点。</li>\n</ol>\n</li>\n<li>\n<p>框架整合: Spring 在框架整合这块已经做到了极致，它可以整合市面上几乎所有主流框架，比如:</p>\n<ul>\n<li><mark>MyBatis</mark></li>\n<li>MyBatis-plus</li>\n<li>Struts</li>\n<li>Struts2</li>\n<li>Hibernate</li>\n<li>……</li>\n</ul>\n<p>这些框架中，我们目前只学习了 MyBatis，所以在 Spring 框架的学习中，主要是学习如何整合 MyBatis。</p>\n<p>综上所述，对于 Spring 的学习，主要学习四块内容:</p>\n<ol>\n<li>IOC</li>\n<li>整合 Mybatis (IOC 的具体应用)</li>\n<li>AOP</li>\n<li>声明式事务 (AOP 的具体应用)</li>\n</ol>\n</li>\n</ul>\n<p><strong>方法</strong></p>\n<ul>\n<li>学习 Spring 框架设计思想\n<ul>\n<li>对于 Spring 来说，它能迅速占领全球市场，不只是说它的某个功能比较强大，更重要是在它的 <code>思想</code> 上。</li>\n</ul>\n</li>\n<li>学习基础操作，思考操作与思想间的联系\n<ul>\n<li>掌握了 Spring 的设计思想，然后就需要通过一些基础操作来思考操作与思想之间的关联关系</li>\n</ul>\n</li>\n<li>学习案例，熟练应用操作的同时，体会思想\n<ul>\n<li>会了基础操作后，就需要通过大量案例来熟练掌握框架的具体应用，加深对设计思想的理解。</li>\n</ul>\n</li>\n</ul>\n<p><em>Spring 的学习主线是 IOC、AOP、声明式事务和整合 MyBais</em></p>\n<h1 id=\"spring-framework\"><a class=\"anchor\" href=\"#spring-framework\">#</a> spring framework</h1>\n<ol>\n<li>核心层 Core Container: 核心容器，这个模块是 Spring 最核心的模块，其他的都需要依赖该模块</li>\n<li>AOP 层 AOP: 面向切面编程，它依赖核心层容器，目的是在不改变原有代码的前提下对其进行功能增强 Aspects: AOP 是思想，Aspects 是对 AOP 思想的具体实现</li>\n<li>数据层 Data Access: 数据访问，Spring 全家桶中有对数据访问的具体实现技术 Data Integration: 数据集成，Spring 支持整合其他的数据层解决方案，比如 Mybatis Transactions: 事务，Spring 中事务管理是 Spring AOP 的一个具体实现，也是后期学习的 重点内容</li>\n<li>Web 层 这一层的内容将在 SpringMVC 框架具体学习</li>\n<li>Test 层 Spring 主要整合了 Junit 来完成单元测试和集成测试</li>\n</ol>\n<p>例如：业务层需要调用数据层的方法，就需要在业务层 new 数据层的对象。如果数据层的实现类发生变化，那么业务层的代码也需要跟着改变，发生变更后，都需要进行编译 打包和重部署。总而言之就是<em><strong>耦合度高</strong></em>。</p>\n<p>解决方案 / 核心思想: <em>使用对象时，在程序中不要主动使用 new 产生对象，转换为由外部提供对象</em></p>\n<h2 id=\"ioc-ioc容器-bean-di\"><a class=\"anchor\" href=\"#ioc-ioc容器-bean-di\">#</a> IOC、IOC 容器、Bean、DI</h2>\n<h3 id=\"iocinversion-of-control控制反转\"><a class=\"anchor\" href=\"#iocinversion-of-control控制反转\">#</a> IOC（Inversion of Control）控制反转</h3>\n<p>(1) 什么是控制反转呢？</p>\n<ul>\n<li>\n<p>使用对象时，由主动 new 产生对象转换为由<mark>外部</mark>提供对象，此过程中对象创建控制权由程序转移到外部，此思想称为控制反转。</p>\n<ul>\n<li>\n<p>业务层要用数据层的类对象，以前是自己 <code>new</code>  的</p>\n</li>\n<li>\n<p>现在自己不 new 了，交给 <code>别人[外部]</code>  来创建对象</p>\n</li>\n<li>\n<p><code>别人[外部]</code>  就反转控制了数据层对象的创建权</p>\n</li>\n<li>\n<p>这种思想就是控制反转</p>\n</li>\n<li>\n<p>别人 [外部] 指定是什么呢？继续往下学</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>(2) Spring 和 IOC 之间的关系是什么呢？</p>\n<ul>\n<li>\n<p>Spring 技术对 IOC 思想进行了实现</p>\n</li>\n<li>\n<p>Spring 提供了一个容器，称为<strong> IOC 容器</strong>，用来充当 IOC 思想中的 &quot;外部&quot;</p>\n</li>\n<li>\n<p>IOC 思想中的 <code>别人[外部]</code>  指的就是 Spring 的 IOC 容器</p>\n</li>\n</ul>\n<p>(3) IOC 容器的作用以及内部存放的是什么？</p>\n<ul>\n<li>\n<p>IOC 容器负责对象的创建、初始化等一系列工作，其中包含了数据层和业务层的类对象</p>\n</li>\n<li>\n<p>被创建或被管理的<strong>对象</strong>在 IOC 容器中统称为<strong> Bean</strong></p>\n</li>\n<li>\n<p>IOC 容器中放的就是一个个的 Bean 对象</p>\n</li>\n</ul>\n<p>(4) 当 IOC 容器中创建好 service 和 dao 对象后，程序能正确执行么？</p>\n<ul>\n<li>\n<p><em>不行，因为 service 运行需要依赖 dao 对象</em></p>\n</li>\n<li>\n<p>IOC 容器中虽然有 service 和 dao 对象</p>\n</li>\n<li>\n<p>但是 service 对象和 dao 对象没有任何关系</p>\n</li>\n<li>\n<p>需要把 dao 对象交给 service, 也就是说<em>要绑定 service 和 dao 对象之间的关系</em></p>\n</li>\n</ul>\n<p>像这种在容器中建立对象与对象之间的绑定关系就要用到 DI:</p>\n<h3 id=\"didependency-injection依赖注入\"><a class=\"anchor\" href=\"#didependency-injection依赖注入\">#</a> DI（Dependency Injection）依赖注入</h3>\n<ol>\n<li>什么是依赖注入呢？</li>\n</ol>\n<ul>\n<li>在容器中建立 bean 与 bean 之间的依赖关系的整个过程，称为依赖注入\n<ul>\n<li>业务层要用数据层的类对象，以前是自己 <code>new</code>  的</li>\n<li>现在自己不 new 了，靠 <code>别人[外部其实指的就是IOC容器]</code>  来给注入进来</li>\n<li>这种思想就是依赖注入</li>\n</ul>\n</li>\n</ul>\n<ol start=\"2\">\n<li>IOC 容器中哪些 bean 之间要建立依赖关系呢？</li>\n</ol>\n<ul>\n<li>这个需要程序员根据业务需求提前建立好关系，如业务层需要依赖数据层，service 就要和 dao 建立依赖关系</li>\n</ul>\n<p>IOC 和 DI 的最终目标就是: <strong>充分解耦</strong>，具体实现靠:</p>\n<ul>\n<li>使用 IOC 容器管理 bean（IOC)</li>\n<li>在 IOC 容器内将有依赖关系的 bean 进行关系绑定（DI）<br />\n最终结果为：使用对象时不仅可以直接从 IOC 容器中获取，并且获取到的 bean 已经绑定了所有的依赖关系.</li>\n</ul>\n<h3 id=\"小结\"><a class=\"anchor\" href=\"#小结\">#</a> 小结</h3>\n<ol>\n<li>什么 IOC/DI 思想？</li>\n</ol>\n<ul>\n<li>IOC: 控制反转，控制反转的是对象的创建权</li>\n<li>DI: 依赖注入，绑定对象与对象之间的依赖关系</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p>什么是 IOC 容器？<br />\nSpring 创建了一个容器用来存放所创建的对象，这个容器就叫 IOC 容器</p>\n</li>\n<li>\n<p>什么是 Bean?<br />\n 容器中所存放的一个个对象就叫 Bean 或 Bean 对象</p>\n</li>\n</ol>\n<h1 id=\"iocdi配置入门案例\"><a class=\"anchor\" href=\"#iocdi配置入门案例\">#</a> IOC/DI 配置入门案例</h1>\n<h2 id=\"本地化\"><a class=\"anchor\" href=\"#本地化\">#</a> 本地化</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5NjUzMzg1L2FydGljbGUvZGV0YWlscy8xMjk0ODMyMjE=\">https://blog.csdn.net/qq_39653385/article/details/129483221</span></p>\n<ol>\n<li>调整项目的 jdk 版本为 1.8</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project.build.sourceEncoding</span><span class=\"token punctuation\">></span></span>UTF-8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project.build.sourceEncoding</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.source</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.source</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.target</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.target</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>调整 spring-context 为版本为 5.3.23</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-context<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.3.23<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"3\">\n<li>另一个文章找到的换版本</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">></span></span>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>      </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.maven.plugins<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>maven-compiler-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span>        </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t    <span class=\"token comment\">&lt;!-- 根据个人需要自己修改 --></span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span><span class=\"token punctuation\">></span></span>16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>source</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>target</span><span class=\"token punctuation\">></span></span>16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>target</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><mark>记得刷新 maven</mark>，最终选择 2、3 结合起来一整段更换</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project.build.sourceEncoding</span><span class=\"token punctuation\">></span></span>UTF-8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project.build.sourceEncoding</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.source</span><span class=\"token punctuation\">></span></span>16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.source</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.target</span><span class=\"token punctuation\">></span></span>16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.target</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-context<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.3.23<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"ioc案例\"><a class=\"anchor\" href=\"#ioc案例\">#</a> IOC 案例</h2>\n<h3 id=\"思路分析\"><a class=\"anchor\" href=\"#思路分析\">#</a> 思路分析</h3>\n<ol>\n<li>Spring 是使用容器来管理 bean 对象的，那么管什么？</li>\n</ol>\n<ul>\n<li>主要管理项目中所使用到的类对象，比如 (Service 和 Dao)</li>\n</ul>\n<ol start=\"2\">\n<li>如何将被管理的对象告知 IOC 容器？</li>\n</ol>\n<ul>\n<li>使用配置文件</li>\n</ul>\n<ol start=\"3\">\n<li>被管理的对象交给 IOC 容器，要想从容器中获取对象，就先得思考如何获取到 IOC 容器？</li>\n</ol>\n<ul>\n<li>Spring 框架提供相应的接口</li>\n</ul>\n<ol start=\"4\">\n<li>IOC 容器得到后，如何从容器中获取 bean?</li>\n</ol>\n<ul>\n<li>调用 Spring 框架提供对应接口中的方法</li>\n</ul>\n<ol start=\"5\">\n<li>使用 Spring 导入哪些坐标？</li>\n</ol>\n<ul>\n<li>用别人的东西，就需要在 pom.xml 添加对应的依赖</li>\n</ul>\n<p><strong>需求：</strong> 将实现类交给 Spring 管理，并从容器中获取对应的 bean 对象进行方法调用。</p>\n<h3 id=\"实现\"><a class=\"anchor\" href=\"#实现\">#</a> 实现</h3>\n<ol>\n<li>创建 Maven 的 java 项目<br />\n<img data-src=\"image-20240311204656859.png\" alt=\"\" /></li>\n<li>pom.xml 添加 Spring 的依赖 jar 包</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--  添加 Spring 的依赖 jar 包 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-context<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"3\">\n<li>创建 BookService,BookServiceImpl，BookDao 和 BookDaoImpl 四个类</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BookDaoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>resources 下添加 spring 配置文件 (applicationContext.xml)，并完成 bean 的配置</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">&lt;!-- 上面的自动生成 --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">&lt;!--bean 标签标示配置 bean</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    \tid 属性标示给 bean 起名字</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    \tclass 属性表示给 bean 定义类型</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t--></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookService<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.service.impl.BookServiceImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"5\">\n<li>使用 Spring 提供的接口完成 IOC 容器的创建</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 使用 Spring 提供的接口完成 IOC 容器的创建，创建 App 类，编写 main 方法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 1. 获取 IOC 容器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token comment\">// 2. 从容器中获取对象，并进行方法调用</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token comment\">// BookDao bookDao = (BookDao) ctx.getBean(\"bookDao\");</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token comment\">// bookDao.save();</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">BookService</span> bookService <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BookService</span><span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookService\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        bookService<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Spring 的 IOC 入门案例已经完成，但是在 <code>BookServiceImpl</code>  的类中依然存在 <code>BookDaoImpl</code>  对象的 new 操作，它们之间的耦合度还是比较高，这块该如何解决，就需要用到下面的 <code>DI:依赖注入</code> 。</p>\n<h2 id=\"di案例\"><a class=\"anchor\" href=\"#di案例\">#</a> DI 案例</h2>\n<h3 id=\"思路分析-2\"><a class=\"anchor\" href=\"#思路分析-2\">#</a> 思路分析</h3>\n<ol>\n<li>要想实现依赖注入，必须要基于 IOC 管理 Bean</li>\n</ol>\n<ul>\n<li>DI 的入门案例要依赖于前面 IOC 的入门案例</li>\n</ul>\n<ol start=\"2\">\n<li>Service 中使用 new 形式创建的 Dao 对象是否保留？</li>\n</ol>\n<ul>\n<li>需要删除掉，最终要使用 IOC 容器中的 bean 对象</li>\n</ul>\n<ol start=\"3\">\n<li>Service 中需要的 Dao 对象如何进入到 Service 中？</li>\n</ol>\n<ul>\n<li>在 Service 中提供方法，让 Spring 的 IOC 容器可以通过该方法传入 bean 对象</li>\n</ul>\n<ol start=\"4\">\n<li>Service 与 Dao 间的关系如何描述？</li>\n</ol>\n<ul>\n<li>使用配置文件</li>\n</ul>\n<h3 id=\"实现-2\"><a class=\"anchor\" href=\"#实现-2\">#</a> 实现</h3>\n<ol>\n<li>删除业务层中使用 new 的方式创建的 dao 对象</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 删除业务层中使用 new 的方式创建的 dao 对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>为属性提供 setter 方法</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 删除业务层中使用 new 的方式创建的 dao 对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 提供对应的 set 方法</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBookDao</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bookDao <span class=\"token operator\">=</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>在配置文件中添加依赖注入的配置 (添加 property)</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookService<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.service.impl.BookServiceImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token comment\">&lt;!-- 配置 server 与 dao 的关系 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token comment\">&lt;!--property 标签表示配置当前 bean 的属性</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\tname 属性表示配置哪一个具体的属性</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\tref 属性表示参照哪一个 bean</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t--></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><mark>注意：配置中的两个 bookDao 的含义是不一样的</mark></p>\n<ul>\n<li>name=&quot;bookDao&quot; 中 <code>bookDao</code>  的作用是让 Spring 的 IOC 容器在获取到名称后，将首字母大写，前面加 set 找对应的 <code>setBookDao()</code>  方法进行对象注入</li>\n<li>ref=&quot;bookDao&quot; 中 <code>bookDao</code>  的作用是让 Spring 能在 IOC 容器中找到 id 为 <code>bookDao</code>  的 Bean 对象给 <code>bookService</code>  进行注入</li>\n<li>综上所述，对应关系如下:<br />\n<img data-src=\"image-20240311212320948.png\" alt=\"\" /></li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzU4MDU4NjUzL2FydGljbGUvZGV0YWlscy8xMjExNTM5ODI=\">补充</span><br />\n xml 中 bean 的顺序无关，给属性赋值看的是<mark> set 方法</mark>，与属性名无关，<mark> 与有没有属性无关</mark>，看的只是 set 方法，有 set 就是正确的</p>\n<h2 id=\"ioc相关内容\"><a class=\"anchor\" href=\"#ioc相关内容\">#</a> IOC 相关内容</h2>\n<h3 id=\"bean基础配置\"><a class=\"anchor\" href=\"#bean基础配置\">#</a> bean 基础配置</h3>\n<p>对于 bean 的配置中，主要包括 <code>bean基础配置</code> ， <code>bean的别名配置</code> ， <code>bean的作用范围配置</code> <mark> (重点)</mark>, 这三部分内容：</p>\n<ol>\n<li><strong>bean 基础配置</strong></li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><ul>\n<li>class 属性能不能写接口如 <code>BookDao</code>  的类全名呢？<br />\n 答案肯定是不行，因为接口是没办法创建对象的。</li>\n</ul>\n<ol start=\"2\">\n<li><strong>bean 的别名配置</strong></li>\n</ol>\n<ul>\n<li>前面提过为 bean 设置 id 时，id 必须唯一，但是如果由于命名习惯而产生了分歧后，该如何解决？<br />\n<mark> 使用别名</mark></li>\n</ul>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--name: 为 bean 指定别名，别名可以有多个，使用逗号，分号，空格进行分隔 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookService<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>service service4 bookEbi<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.service.impl.BookServiceImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">&lt;!--scope：为 bean 设置作用范围，可选值为单例 singloton，非单例 prototype--></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><p>实现类中可以用别名 (name) 实现</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppForName</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 此处根据 bean 标签的 id 属性和 name 属性的任意一个值来获取 bean 对象</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">BookService</span> bookService <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BookService</span><span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"service4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        bookService<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>别名 (name) 还可以用作别的 bean 中依赖注入的 ref，<strong>必须存在</strong></p>\n<ol start=\"3\">\n<li><strong>bean 的作用范围配置</strong><br />\n <code>&lt;bean id=&quot;bookDao&quot; name=&quot;dao&quot; class=&quot;com.itheima.dao.impl.BookDaoImpl&quot; scope=&quot;singleton&quot;/&gt;</code>  bean 的 scope 属性中设置<br />\n<img data-src=\"image-20240311213433499.png\" alt=\"\" /></li>\n</ol>\n<p>同一个 bean 获取两次，将对象打印到控制台，看打印出的地址值是否一致？</p>\n<ul>\n<li>默认情况下，Spring 创建的 bean 对象都是单例的<br />\n即下面会得到相同的结果</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppForScope</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">BookDao</span> bookDao1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span><span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookDao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">BookDao</span> bookDao2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span><span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookDao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookDao1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookDao2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>&lt;bean id=&quot;bookDao&quot; name=&quot;dao&quot; class=&quot;com.itheima.dao.impl.BookDaoImpl&quot; scope=&quot;prototype&quot;/&gt;</code> <br />\n 后会得到不同的结果</p>\n<h4 id=\"思考\"><a class=\"anchor\" href=\"#思考\">#</a> 思考</h4>\n<ul>\n<li>\n<p>为什么 bean 默认为单例？</p>\n<ul>\n<li>bean 为单例的意思是在 Spring 的 IOC 容器中只会有该类的一个对象</li>\n<li>bean 对象只有一个就避免了对象的频繁创建与销毁，达到了 bean 对象的复用，性能高</li>\n</ul>\n</li>\n<li>\n<p>bean 在容器中是单例的，会不会产生线程安全问题？</p>\n<ul>\n<li>如果对象是有状态对象，即该对象有成员变量可以用来存储数据的，</li>\n<li>因为所有请求线程共用一个 bean 对象，所以会存在线程安全问题。</li>\n<li>如果对象是无状态对象，即该对象没有成员变量没有进行数据存储的，</li>\n<li>因方法中的局部变量在方法调用完成后会被销毁，所以不会存在线程安全问题。</li>\n</ul>\n</li>\n<li>\n<p>哪些 bean 对象适合交给容器进行管理？</p>\n<ul>\n<li>表现层对象</li>\n<li>业务层对象</li>\n<li>数据层对象</li>\n<li>工具对象</li>\n</ul>\n</li>\n<li>\n<p>哪些 bean 对象不适合交给容器进行管理？</p>\n<ul>\n<li>封装实例的域对象（有状态），因为会引发线程安全问题，所以不适合。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"bean实例化\"><a class=\"anchor\" href=\"#bean实例化\">#</a> bean 实例化</h3>\n<ul>\n<li>bean 是如何创建的</li>\n<li>实例化 bean 的三种方式， <code>构造方法</code> ， <code>静态工厂</code> 和 <code>实例工厂</code></li>\n</ul>\n<h4 id=\"构造方法\"><a class=\"anchor\" href=\"#构造方法\">#</a> 构造方法</h4>\n<p><em><strong>bean 本质上就是对象，对象在 new 的时候会使用构造方法完成，那创建 bean 也是使用构造方法完成的。</strong></em></p>\n<p>构造一个无参构造函数，且设置为私有类，能访问到，显而易见<mark> Spring 底层用的是反射</mark>。<br />\n构造一个有参狗在函数，则程序会报错，说明 Spring 底层使用的是类的<mark>无参构造方法</mark>。</p>\n<pre><code>tips:为了不让外界访问到有的属性和方法的private可以用反射访问。或者编译时不知道的意思，如类的名称放在XML文件中，属性和属性值放在XML文件中，需要在运行时读取XML文件，动态获取类的信息\n</code></pre>\n<h4 id=\"静态工厂\"><a class=\"anchor\" href=\"#静态工厂\">#</a> 静态工厂</h4>\n<p>兼容早期老系统</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>orderDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.factory.OrderDaoFactory<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">factory-method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getOrderDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><p><code>class</code> : 工厂类的类全名<br />\n <code>factory-mehod</code> : 具体工厂类中创建对象的方法名</p>\n<p><img data-src=\"image-20240311235827552.png\" alt=\"\" /></p>\n<p>此时从容器中获取 bean，还是在工厂类中 new 对象，意义是？</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppForInstanceOrder</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">OrderDao</span> orderDao <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OrderDao</span><span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"orderDao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        orderDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>在工厂的静态方法中，我们除了 new 对象还可以做其他的一些业务操作，这些操作必不可少，如:</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">OrderDaoFactory</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">OrderDao</span> <span class=\"token function\">getOrderDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"factory setup....\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 模拟必要的业务操作</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OrderDaoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><mark>原本的因为 static 不能加？</mark></p>\n<h4 id=\"实例工厂\"><a class=\"anchor\" href=\"#实例工厂\">#</a> 实例工厂</h4>\n<p>相比于静态工厂就是少了工厂类中的 static，工厂本身也需要被 new</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserDaoFactory</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserDao</span> <span class=\"token function\">getUserDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserDaoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppForInstanceUser</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 创建实例工厂对象</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">UserDaoFactory</span> userDaoFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserDaoFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 通过实例工厂对象创建对象</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">UserDao</span> userDao <span class=\"token operator\">=</span> userDaoFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getUserDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        userDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>交给 spring 进行 bean 实例化，多了个 <code>factory-bean</code>  要指定：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userFactory<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.factory.UserDaoFactory<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">factory-method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getUserDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">factory-bean</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userFactory<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><ul>\n<li>创建实例化工厂对象，对应的是第一行配置</li>\n<li>调用对象中的方法来创建 bean，对应的是第二行配置<br />\n<img data-src=\"image-20240312101230127.png\" alt=\"\" /><br />\n从 IOC 容器中获取 bean 的方法</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppForInstanceUser</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">UserDao</span> userDao <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">UserDao</span><span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userDao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        userDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>实例工厂实例化比较复杂，Spring 为了简化这种配置方式就提供了一种叫 <code>FactoryBean</code>  (泛型) 的方式来简化开发。</p>\n<div class=\"tab\" data-id=\"fanxing\" data-title=\"泛型方法\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 泛型补充</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 泛型方法：调用时可以接收不同类型的参数。根据传递给泛型方法的参数类型，编译器适当地处理每一个方法调用。</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GenericMethodTest</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   <span class=\"token comment\">// 泛型方法 printArray                         </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span> <span class=\"token class-name\">E</span> <span class=\"token punctuation\">></span></span> <span class=\"token keyword\">void</span> <span class=\"token function\">printArray</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">E</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> inputArray <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">// 输出数组元素            </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>         <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token class-name\">E</span> element <span class=\"token operator\">:</span> inputArray <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"%s \"</span><span class=\"token punctuation\">,</span> element <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>         <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>         <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 创建不同类型数组： Integer, Double 和 Character</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> intArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">Double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> doubleArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.4</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">Character</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> charArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token char\">'H'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'E'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'L'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'L'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'O'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"整型数组元素为:\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">printArray</span><span class=\"token punctuation\">(</span> intArray  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 传递一个整型数组</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"\\n双精度型数组元素为:\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token function\">printArray</span><span class=\"token punctuation\">(</span> doubleArray <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 传递一个双精度型数组</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"\\n字符型数组元素为:\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">printArray</span><span class=\"token punctuation\">(</span> charArray <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 传递一个字符型数组</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">// 结果</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>整型数组元素为<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>双精度型数组元素为<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token number\">1.1</span> <span class=\"token number\">2.2</span> <span class=\"token number\">3.3</span> <span class=\"token number\">4.4</span> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>字符型数组元素为<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token class-name\">H</span> <span class=\"token class-name\">E</span> <span class=\"token class-name\">L</span> <span class=\"token class-name\">L</span> <span class=\"token class-name\">O</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"fanxing\" data-title=\"泛型类\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 泛型类：泛型方法一样，泛型类的类型参数声明部分也包含一个或多个类型参数，参数间用逗号隔开</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Box</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token class-name\">T</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>t <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token class-name\">T</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token class-name\">Box</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> integerBox <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Box</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token class-name\">Box</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> stringBox <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Box</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    integerBox<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    stringBox<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"菜鸟教程\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"整型值为 :%d\\n\\n\"</span><span class=\"token punctuation\">,</span> integerBox<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"字符串为 :%s\\n\"</span><span class=\"token punctuation\">,</span> stringBox<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">// 结果</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>整型值为 <span class=\"token operator\">:</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>字符串为 <span class=\"token operator\">:</span>菜鸟教程</pre></td></tr></table></figure></div>\n<p>有两个方法要重写，单例模式默认 true<br />\n<img data-src=\"image-20240312104055573.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>FactoryBean的使用</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建一个 UserDaoFactoryBean 的类，实现 FactoryBean 接口，重写接口的方法</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserDaoFactoryBean</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">FactoryBean</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserDao</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 代替原始实例工厂中创建对象的方法</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserDao</span> <span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserDaoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 返回所创建类的 Class 对象</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getObjectType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">UserDao</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>此时 bean 配置为：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.factory.UserDaoFactoryBean<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><h4 id=\"小结-2\"><a class=\"anchor\" href=\"#小结-2\">#</a> 小结</h4>\n<p>3.5 种 bean 实例方法，对应 xml 配置</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 方式一：构造方法实例化 bean--></span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">&lt;!-- 方式二：使用静态工厂实例化 bean--></span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>orderDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.factory.OrderDaoFactory<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">factory-method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getOrderDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">&lt;!-- 方式三：使用实例工厂实例化 bean--></span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userFactory<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.factory.UserDaoFactory<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">factory-method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getUserDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">factory-bean</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userFactory<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">&lt;!-- 方式四：使用 FactoryBean 实例化 bean--></span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.factory.UserDaoFactoryBean<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><ol>\n<li>\n<p>bean 是如何创建的呢？<br />\n 构造方法</p>\n</li>\n<li>\n<p>Spring 的 IOC 实例化对象的三种方式分别是:</p>\n<ul>\n<li>构造方法 (常用)</li>\n<li>静态工厂 (了解)</li>\n<li>实例工厂 (了解)\n<ul>\n<li>FactoryBean (实用)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p>这些方式中，重点掌握 <code>构造方法</code> 和 <code>FactoryBean</code>  即可。</p>\n<p><span class=\"label warning\">warning</span> 需要注意的一点是，构造方法在类中默认会提供，但是如果重写了构造方法，默认的就会消失，在使用的过程中需要注意，如果需要重写构造方法，最好把默认的构造方法也重写下。</p>\n<h3 id=\"bean的生命周期\"><a class=\"anchor\" href=\"#bean的生命周期\">#</a> bean 的生命周期</h3>\n<p>思考的是如何在 bean 的创建之后和销毁之前把我们需要添加的内容添加进去</p>\n<ol>\n<li>环境准备：添加 BookDao、BookDaoImpl、BookService 和 BookServiceImpl 类</li>\n</ol>\n<div class=\"tab\" data-id=\"smzq_environment\" data-title=\"BookDao\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"smzq_environment\" data-title=\"BookDaoImpl\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token comment\">// 表示 bean 初始化对应的操作</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"init...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 表示 bean 销毁前对应的操作</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">destory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"destory...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"smzq_environment\" data-title=\"BookService\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"smzq_environment\" data-title=\"BookServiceImpl\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBookDao</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bookDao <span class=\"token operator\">=</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"smzq_environment\" data-title=\"spring的xml\">\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">init-method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>init<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">destroy-method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>destory<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"smzq_environment\" data-title=\"运行类\">\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>// 加载Spring的IOC容器，并从中获取对应的bean对象</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>public class AppForLifeCycle &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    public static void main( String[] args ) &#123;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        ApplicationContext ctx = new </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        \tClassPathXmlApplicationContext(\"applicationContext.xml\");</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        BookDao bookDao = (BookDao) ctx.getBean(\"bookDao\");</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        bookDao.save();</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#125;</pre></td></tr></table></figure></div>\n<p>增添了 <code>init-method</code>  和 <code>destroy-method</code>  进行 bean 周期前后的操作<br />\n<span class=\"label warning\"> warning</span> 运行会发现 init 方法执行了，但是 destroy 方法却未执行</p>\n<ul>\n<li>Spring 的 IOC 容器是运行在 JVM 中</li>\n<li>运行 main 方法后，JVM 启动，Spring 加载配置文件生成 IOC 容器，从容器获取 bean 对象，然后调方法执行</li>\n<li>main 方法执行完后，JVM 退出，这个时候 IOC 容器中的 bean 还没有来得及销毁就已经结束了</li>\n<li>所以没有调用对应的 destroy 方法</li>\n</ul>\n<p>要执行销毁操作则主动销毁，退出前 close / 注册钩子 <strong>关闭容器</strong></p>\n<div class=\"tab\" data-id=\"bean_xiaohui\" data-title=\"close\">\n<ul>\n<li>ApplicationContext 中没有 close 方法</li>\n<li>需要将 ApplicationContext 更换成 ClassPathXmlApplicationContext<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ClassPathXmlApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span>   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// ......</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 调用 ctx 的 close () 方法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>运行程序，就能执行 destroy 方法的内容</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"bean_xiaohui\" data-title=\"注册钩子\">\n<ul>\n<li>registerShutdownHook 在 ApplicationContext 中也没有</li>\n<li>设置好回调函数，让 JVM 在退出之前回调此函数来关闭容器<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ClassPathXmlApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span>   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">registerShutdownHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// ......</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 注册了就不用 close</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// ctx.close();</span></pre></td></tr></table></figure></li>\n</ul>\n</div>\n<p><span class=\"label info\">相同点</span>：这两种都能用来关闭容器</p>\n<p><span class=\"label info\">不同点</span> : close () 是在调用的时候关闭，registerShutdownHook () 是在 JVM 退出前调用关闭。</p>\n<p>Spring 提供了两个接口来完成生命周期的控制，添加两个接口 <code>InitializingBean</code> ，  <code>DisposableBean</code>  并实现接口中的两个方法 <code>afterPropertiesSet</code>  和 <code>destroy</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InitializingBean</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">DisposableBean</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBookDao</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bookDao <span class=\"token operator\">=</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"service destroy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterPropertiesSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"service init\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image-20240312113146415.png\" alt=\"\" /><br />\n= 先生成并且后销毁 注入的依赖 =</p>\n<p><span class=\"label warning\">warning</span></p>\n<ul>\n<li>对于 InitializingBean 接口中的 afterPropertiesSet 方法，翻译过来为 <code>属性设置之后</code> 。</li>\n<li>对于 BookServiceImpl 来说，bookDao 是它的一个属性</li>\n<li>setBookDao 方法是 Spring 的 IOC 容器为其注入属性的方法</li>\n<li>思考:afterPropertiesSet 和 setBookDao 谁先执行？\n<ul>\n<li>从方法名分析，猜想应该是 setBookDao 方法先执行</li>\n<li>验证思路，在 setBookDao 方法中添加一句话<br />\n <code>public void setBookDao(BookDao bookDao) &#123;     \t\tSystem.out.println(&quot;set .....&quot;);     \t\tthis.bookDao = bookDao;     \t&#125;  </code></li>\n<li>重新运行 AppForLifeCycle，打印结果如下:<br />\n 验证的结果和我们猜想的结果是一致的，所以初始化方法会在类中属性设置之后执行。<br />\n<img data-src=\"image-20240312113606247.png\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"小结-3\"><a class=\"anchor\" href=\"#小结-3\">#</a> 小结</h4>\n<ol>\n<li>关于 Spring 中对 bean 生命周期控制提供了两种方式:</li>\n</ol>\n<ul>\n<li>在配置文件中的 bean 标签中添加 <code>init-method</code>  和 <code>destroy-method</code>  属性</li>\n<li>类实现 <code>InitializingBean</code>  与 <code>DisposableBean</code>  接口，这种方式了解下即可。</li>\n</ul>\n<ol start=\"2\">\n<li>对于 bean 的生命周期控制在 bean 的整个生命周期中所处的位置如下:</li>\n</ol>\n<ul>\n<li>初始化容器\n<ul>\n<li>1. 创建对象 (内存分配)</li>\n<li>2. 执行构造方法</li>\n<li>3. 执行属性注入 (set 操作)</li>\n<li><mark>4. 执行 bean 初始化方法</mark></li>\n</ul>\n</li>\n<li>使用 bean\n<ul>\n<li>1. 执行业务操作</li>\n</ul>\n</li>\n<li>关闭 / 销毁容器\n<ul>\n<li><mark>1. 执行 bean 销毁方法</mark></li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li>关闭容器的两种方式:</li>\n</ol>\n<ul>\n<li>ConfigurableApplicationContext 是 ApplicationContext 的子类\n<ul>\n<li>close () 方法</li>\n<li>registerShutdownHook () 方法</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"di相关内容\"><a class=\"anchor\" href=\"#di相关内容\">#</a> DI 相关内容</h2>\n<h3 id=\"依赖注入方式\"><a class=\"anchor\" href=\"#依赖注入方式\">#</a> 依赖注入方式</h3>\n<h4 id=\"setter\"><a class=\"anchor\" href=\"#setter\">#</a> setter</h4>\n<p>对于多个引用数据注入，都要实现 set 方法和 xml 设置 ref</p>\n<div class=\"tab\" data-id=\"set_yinyong\" data-title=\"set方法\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserDao</span> userDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setUserDao</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserDao</span> userDao<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userDao <span class=\"token operator\">=</span> userDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBookDao</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bookDao <span class=\"token operator\">=</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        userDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"set_yinyong\" data-title=\"xml配置\">\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.UserDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookService<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.service.impl.BookServiceImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></div>\n<p>对于简单数据（string、int 等）也要实现 set，但 xml 不用 <code>ref</code> （ref 是指向 Spring 的 IOC 容器中的另一个 bean 对象的），而是 <code>value</code></p>\n<div class=\"tab\" data-id=\"set_simple\" data-title=\"set方法\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> databaseName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> connectionNum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setConnectionNum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> connectionNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>connectionNum <span class=\"token operator\">=</span> connectionNum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setDatabaseName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> databaseName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>databaseName <span class=\"token operator\">=</span> databaseName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span><span class=\"token operator\">+</span>databaseName<span class=\"token operator\">+</span><span class=\"token string\">\",\"</span><span class=\"token operator\">+</span>connectionNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"set_simple\" data-title=\"xml配置\">\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>databaseName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mysql<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>connectionNum<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.UserDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookService<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.service.impl.BookServiceImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></div>\n<ul>\n<li>对于引用数据类型使用的是 <code>&lt;property name=&quot;&quot; ref=&quot;&quot;/&gt;</code></li>\n<li>对于简单数据类型使用的是 <code>&lt;property name=&quot;&quot; value=&quot;&quot;/&gt;</code></li>\n</ul>\n<h4 id=\"构造器函数注入\"><a class=\"anchor\" href=\"#构造器函数注入\">#</a> 构造器（函数）注入</h4>\n<p>以 BookServiceImpl 为例，类似 set，还是要实现 <code>this.bookDao = bookDao;</code>  在构造函数中</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">BookServiceImpl</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span> bookDao1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bookDao <span class=\"token operator\">=</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//    public void setBookDao(BookDao bookDao) &#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//        this.bookDao = bookDao;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//    &#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>区别在于 xml 中不用 <code>property</code>  而是  <code>constructor-arg</code>  且此时 name 中的是形参名，这会导致耦合</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookService<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.service.impl.BookServiceImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>多属性</p>\n<div class=\"tab\" data-id=\"constructor_lei\" data-title=\"类引用java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserDao</span> userDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">BookServiceImpl</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">,</span><span class=\"token class-name\">UserDao</span> userDao<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bookDao <span class=\"token operator\">=</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userDao <span class=\"token operator\">=</span> userDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        userDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"constructor_lei\" data-title=\"类引用xml\">\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.UserDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookService<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.service.impl.BookServiceImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"constructor_simple\" data-title=\"简单参数java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> databaseName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> connectionNum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">BookDaoImpl</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> databaseName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> connectionNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>databaseName <span class=\"token operator\">=</span> databaseName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>connectionNum <span class=\"token operator\">=</span> connectionNum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span><span class=\"token operator\">+</span>databaseName<span class=\"token operator\">+</span><span class=\"token string\">\",\"</span><span class=\"token operator\">+</span>connectionNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"constructor_simple\" data-title=\"简单参数xml\">\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>databaseName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mysql<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>connectionNum<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>666<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.UserDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookService<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.service.impl.BookServiceImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>userDao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></div>\n<p><code>&lt;contructor-arg&gt;</code>  的配置顺序可以任意 name 要跟着形参名变化，存在紧耦合，具体该如何解决？</p>\n<ol>\n<li>删除 name 属性，添加 type 属性，按照类型注入</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>int<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>java.lang.String<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mysql<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>但是如果构造方法参数中有类型相同的参数，这种方式就不太好实现了</li>\n</ul>\n<ol start=\"2\">\n<li>删除 type 属性，添加 index 属性，按照索引下标注入，下标从 0 开始</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mysql<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>这种方式可以解决参数类型重复问题</li>\n<li>但是如果构造方法参数顺序发生变化后，这种方式又带来了耦合问题</li>\n</ul>\n<p>如何选择呢？</p>\n<ol>\n<li>强制依赖使用构造器进行，使用<mark> setter 注入有概率不进行注入</mark>导致 null 对象出现\n<ul>\n<li>强制依赖指对象在创建的过程中必须要注入指定的参数（不然报错）</li>\n</ul>\n</li>\n<li>可选依赖使用 setter 注入进行，灵活性强\n<ul>\n<li>可选依赖指对象在创建过程中注入的参数可有可无</li>\n</ul>\n</li>\n<li>Spring 框架倡导使用构造器，第三方框架内部大多数采用构造器注入的形式进行数据初始化，相对严谨</li>\n<li>如果有必要可以两者同时使用，使用构造器注入完成强制依赖的注入，使用 setter 注入完成可选依赖的注入</li>\n<li>实际开发过程中还要根据实际情况分析，如果受控对象没有提供 setter 方法就必须使用构造器注入</li>\n<li><strong><mark>自己开发的模块推荐使用 setter 注入</mark></strong></li>\n</ol>\n<h3 id=\"自动装配\"><a class=\"anchor\" href=\"#自动装配\">#</a> 自动装配</h3>\n<ul>\n<li>IoC 容器根据 bean 所依赖的资源在容器中自动查找并注入到 bean 中的过程称为自动装配</li>\n</ul>\n<p>有哪些？</p>\n<ul>\n<li><mark>按类型（常用）</mark></li>\n<li>按名称</li>\n<li>按构造方法</li>\n<li>不启用自动装配</li>\n</ul>\n<h4 id=\"按类型\"><a class=\"anchor\" href=\"#按类型\">#</a> 按类型</h4>\n<p><strong><mark>set 方法必须要有，对应的 bean 也必须要有，bean 不唯一也不行</mark></strong><br />\n xml 中：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--autowire 属性：开启自动装配，通常使用按类型装配 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookService<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.service.impl.BookServiceImpl<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autowire</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>byType<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><h4 id=\"按名称\"><a class=\"anchor\" href=\"#按名称\">#</a> 按名称</h4>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--autowire 属性：开启自动装配，通常使用按类型装配 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookService<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.service.impl.BookServiceImpl<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autowire</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>byName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><ul>\n<li>bookDao 是 private 修饰的，外部类无法直接方法\n<ul>\n<li>外部类只能通过属性的 set 方法进行访问</li>\n<li>对外部类来说，setBookDao 方法名，去掉 set 后首字母小写是其属性名\n<ul>\n<li>为什么是去掉 set 首字母小写？</li>\n<li>这个规则是 set 方法生成的默认规则，set 方法的生成是把属性名首字母大写前面加 set 形成的方法名</li>\n</ul>\n</li>\n<li>所以按照名称注入，其实是和对应的 set 方法有关，但是如果按照标准起名称，属性名和 set 对应的名是一致的</li>\n</ul>\n</li>\n<li>如果按照名称去找对应的 bean 对象，找不到则注入 Null</li>\n<li>当某一个类型在 IOC 容器中有多个对象，按照名称注入只找其指定名称对应的 bean 对象，不会报错</li>\n</ul>\n<p><span class=\"label warning\">warning</span></p>\n<ol>\n<li>自动装配用于引用类型依赖注入，不能对简单类型进行操作</li>\n<li>使用按类型装配时（byType）必须保障容器中相同类型的 bean 唯一，推荐使用</li>\n<li>使用按名称装配时（byName）必须保障容器中具有指定名称的 bean，因变量名与配置耦合，不推荐使用</li>\n<li>自动装配优先级低于 setter 注入与构造器注入，同时出现时自动装配配置失效</li>\n</ol>\n<h3 id=\"集合注入\"><a class=\"anchor\" href=\"#集合注入\">#</a> 集合注入</h3>\n<p>前面我们已经能完成引入数据类型和简单数据类型的注入，但是还有一种数据类型<mark>集合</mark>，集合中既可以装简单数据类型也可以装引用数据类型，对于集合，在 Spring 中该如何注入呢？</p>\n<ul>\n<li>数组</li>\n<li>List</li>\n<li>Set</li>\n<li>Map</li>\n<li>Properties</li>\n</ul>\n<p>以 BookDao、BookDaoImpl 类和其 xml 为例</p>\n<div class=\"tab\" data-id=\"zhuru_jihe\" data-title=\"BookDao\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"zhuru_jihe\" data-title=\"BookDaoImpl\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> set<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> map<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Properties</span> properties<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"遍历数组:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"遍历List\"</span> <span class=\"token operator\">+</span> list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"遍历Set\"</span> <span class=\"token operator\">+</span> set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"遍历Map\"</span> <span class=\"token operator\">+</span> map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"遍历Properties\"</span> <span class=\"token operator\">+</span> properties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t<span class=\"token comment\">//setter.... 方法省略，自己使用工具生成</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"zhuru_jihe\" data-title=\"xml\">\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>array<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>array</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>100<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>200<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>300<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>array</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>list</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>itcast<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>itheima<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>boxuegu<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>chuanzhihui<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>list</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>set<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>set</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>itcast<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>itheima<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>boxuegu<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>value</span><span class=\"token punctuation\">></span></span>boxuegu<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>value</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>set</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>map</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>entry</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>country<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>china<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>entry</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>province<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>henan<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>entry</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>city<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>kaifeng<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>map</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>properties<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>props</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prop</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>country<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>china<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prop</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prop</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>province<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>henan<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prop</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>prop</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>city<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>kaifeng<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>prop</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>props</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></div>\n<ul>\n<li>property 标签表示 setter 方式注入，构造方式注入 constructor-arg 标签内部也可以写 <code>&lt;array&gt;</code> 、 <code>&lt;list&gt;</code> 、 <code>&lt;set&gt;</code> 、 <code>&lt;map&gt;</code> 、 <code>&lt;props&gt;</code>  标签</li>\n<li>List 的底层也是通过数组实现的，所以 <code>&lt;list&gt;</code>  和 <code>&lt;array&gt;</code>  标签是可以混用</li>\n<li>集合中要添加引用类型，只需要把 <code>&lt;value&gt;</code>  标签改成 <code>&lt;ref&gt;</code>  标签，这种方式用的比较少</li>\n</ul>\n<h1 id=\"iocdi配置管理第三方bean\"><a class=\"anchor\" href=\"#iocdi配置管理第三方bean\">#</a> IOC/DI 配置管理第三方 bean</h1>\n<p>前面所讲的知识点都是基于我们自己写的类，现在如果有需求让我们去管理第三方 jar 包中的类，该如何管理？</p>\n<h2 id=\"环境准备\"><a class=\"anchor\" href=\"#环境准备\">#</a> 环境准备</h2>\n<p>依旧是创建 Maven 项目、添加依赖、在配置中注入依赖、运行类引入，再记录下全流程</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"><span>pom.xml</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-context<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>resources 下添加 spring 的配置文件 applicationContext.xml</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"><span>applicationContext.xml</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            http://www.springframework.org/schema/beans</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            http://www.springframework.org/schema/beans/spring-beans.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>编写一个运行类 App</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"思路分析-3\"><a class=\"anchor\" href=\"#思路分析-3\">#</a> 思路分析</h2>\n<p>需求：使用 Spring 的 IOC 容器来管理 Druid 连接池对象</p>\n<ol>\n<li>使用第三方的技术，需要在 pom.xml 添加依赖</li>\n<li>在配置文件中将【第三方的类】制作成一个 bean，让 IOC 容器进行管理</li>\n<li>数据库连接需要基础的四要素 <code>驱动</code> 、 <code>连接</code> 、 <code>用户名</code> 和 <code>密码</code> ，【如何注入】到对应的 bean 中</li>\n<li>从 IOC 容器中获取对应的 bean 对象，将其打印到控制台查看结果</li>\n</ol>\n<ul>\n<li>第三方的类指的是什么？</li>\n<li>如何注入数据库连接四要素？</li>\n</ul>\n<blockquote>\n<p>步骤 1: 导入 <code>druid</code>  的依赖，pom.xml 中添加</p>\n</blockquote>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"><span>pom.xml</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>druid<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.1.16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>步骤 2: 配置第三方 bean</p>\n</blockquote>\n<p>在 applicationContext.xml 配置文件中添加 <code>DruidDataSource</code>  的配置</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            http://www.springframework.org/schema/beans</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            http://www.springframework.org/schema/beans/spring-beans.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token comment\">&lt;!-- 管理 DruidDataSource 对象 --></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.alibaba.druid.pool.DruidDataSource<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>driverClassName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.mysql.jdbc.Driver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc:mysql://localhost:3306/spring_db<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>driverClassName: 数据库驱动</li>\n<li>url: 数据库连接地址</li>\n<li>username: 数据库连接用户名</li>\n<li>password: 数据库连接密码</li>\n<li>数据库连接的四要素要和自己使用的数据库信息一致。</li>\n</ul>\n<p>tips: maven -search 插件</p>\n<ul>\n<li>\n<p>第三方的类指的是什么？<br />\nDruidDataSource</p>\n</li>\n<li>\n<p>如何注入数据库连接四要素？<br />\nsetter 注入</p>\n</li>\n</ul>\n<blockquote>\n<p>另一个例子，管理 <code>C3P0</code>  数据源<br />\n步骤 1: 导入 <code>C3P0</code>  的依赖</p>\n</blockquote>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>c3p0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>c3p0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>0.9.1.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><strong>对于新的技术，不知道具体的坐标该如何查找？</strong></p>\n<ul>\n<li>直接百度搜索</li>\n<li>从 mvn 的仓库 <code>https://mvnrepository.com/</code>  中进行搜索</li>\n</ul>\n<blockquote>\n<p>步骤 2: 配置第三方 bean</p>\n</blockquote>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dataSource<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.mchange.v2.c3p0.ComboPooledDataSource<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>driverClass<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.mysql.jdbc.Driver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbcUrl<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc:mysql://localhost:3306/spring_db<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>maxPoolSize<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1000<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>\n<p>ComboPooledDataSource 的属性是通过 setter 方式进行注入</p>\n</li>\n<li>\n<p>想注入属性就需要在 ComboPooledDataSource 类或其上层类中有提供属性对应的 setter 方法</p>\n</li>\n<li>\n<p>C3P0 的四个属性和 Druid 的四个属性是不一样的</p>\n</li>\n<li>\n<p>数据连接池在配置属性的时候，除了可以注入数据库连接四要素外还可以配置很多其他的属性，具体都有哪些属性用到的时候再去查，一般配置基础的四个，其他都有自己的默认值</p>\n</li>\n<li>\n<p>Druid 和 C3P0 在没有导入 mysql 驱动包的前提下，一个没报错一个报错，说明 Druid 在初始化的时候没有去加载驱动，而 C3P0 刚好相反</p>\n</li>\n<li>\n<p>Druid 程序运行虽然没有报错，但是当调用 DruidDataSource 的 getConnection () 方法获取连接的时候，也会报找不到驱动类的错误</p>\n</li>\n</ul>\n<h2 id=\"属性优化\"><a class=\"anchor\" href=\"#属性优化\">#</a> 属性优化</h2>\n<p>上面的样例有些问题:</p>\n<ul>\n<li>这两个数据源中都使用到了一些固定的常量如数据库连接四要素，把这些值写在 Spring 的配置文件中不利于后期维护</li>\n<li>需要将这些值提取到一个外部的 properties 配置文件中</li>\n<li>Spring 框架如何从配置文件中读取属性值来配置就是接下来要解决的问题。</li>\n</ul>\n<p>问题提出来后，具体该如何实现？</p>\n<ol>\n<li>在 resources 下创建一个 jdbc.properties (文件的名称可以任意)</li>\n<li>将数据库连接四要素配置到配置文件中</li>\n<li><mark>在 Spring 的配置文件中加载 properties 文件</mark></li>\n<li><mark>使用加载到的值实现属性注入</mark></li>\n</ol>\n<blockquote>\n<p>步骤 1: 准备 properties 配置文件</p>\n</blockquote>\n<p>resources 下创建一个 jdbc.properties 文件，并添加对应的属性键值对</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">jdbc.driver</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.mysql.jdbc.Driver</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">jdbc.url</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://127.0.0.1:3306/spring_db</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">jdbc.username</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">jdbc.password</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 2: 开启 <code>context</code>  命名空间</p>\n</blockquote>\n<p>在 applicationContext.xml 中开 <code>context</code>  命名空间<br />\n xmlns (xml name space):&lt;spacename&gt;=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zcHJpbmdmcmFtZXdvcmsub3JnL3NjaGVtYS8=\">http://www.springframework.org/schema/</span>&lt;spacename&gt;&quot;<br />\n 要添加第 4 行和 8、9 行。将 beans（spacename）都换成新的</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>context</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/context<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            http://www.springframework.org/schema/beans</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            http://www.springframework.org/schema/beans/spring-beans.xsd</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            http://www.springframework.org/schema/context</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            http://www.springframework.org/schema/context/spring-context.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>步骤 3: 加载 properties 配置文件 ( <code>&lt;sn:property-placeholder location=&quot;file&quot;/&gt;</code> )<br />\n 步骤 4: 完成属性注入 ( <code>$&#123;key&#125;</code> )</p>\n</blockquote>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>context</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/context<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            http://www.springframework.org/schema/beans</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            http://www.springframework.org/schema/beans/spring-beans.xsd</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            http://www.springframework.org/schema/context</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            http://www.springframework.org/schema/context/spring-context.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>property-placeholder</span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc.properties<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dataSource<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.alibaba.druid.pool.DruidDataSource<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>driverClassName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.driver&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.url&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.username&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.password&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>作为单个属性读取注入<br />\n步骤 1: 在项目中添对应的类</p>\n</blockquote>\n<p>BookDao 和 BookDaoImpl 类，并在 BookDaoImpl 类中添加 <code>name</code>  属性与 setter 方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>​  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>​  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>​  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 2: 完成配置文件的读取与注入</p>\n</blockquote>\n<p>在 applicationContext.xml 添加配置， <code>bean的配置管理</code> 、 <code>读取外部properties</code> 、 <code>依赖注入</code> :</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>context</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/context<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            http://www.springframework.org/schema/beans</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            http://www.springframework.org/schema/beans/spring-beans.xsd</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            http://www.springframework.org/schema/context</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            http://www.springframework.org/schema/context/spring-context.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>property-placeholder</span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc.properties<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.driver&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>步骤 3: 运行程序</p>\n</blockquote>\n<p>在 App 类中，从 IOC 容器中获取 bookDao 对象，调用方法，查看值是否已经被获取到并打印控制台</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">BookDao</span> bookDao <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span><span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookDao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>​  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><span class=\"label warning\">warning</span><br />\n<strong> 问题一：键值对的 key 为 <code>username</code>  引发的问题</strong></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bookDao<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao.impl.BookDaoImpl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;username&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>运行后，在控制台打印的却不是 <code>root666</code> ，而是自己电脑的用户名</p>\n<ul>\n<li>出现问题的原因是 <code>&lt;context:property-placeholder/&gt;</code>  标签会加载系统的环境变量，而且环境变量的值会被优先加载，如何查看系统的环境变量？</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> env <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getenv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>解决方法</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>property-placeholder</span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc.properties<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">system-properties-mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NEVER<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><p>当然还有一个解决方案就是避免使用 <code>username</code>  作为属性的 <code>key</code> 。</p>\n<p><strong>问题二：当有多个 properties 配置文件需要被加载，该如何配置？</strong><br />\n 假如有多个配置 jdbc1.properties， jdbc2.properties</p>\n<div class=\"tab\" data-id=\"properties\" data-title=\"jdbc1.properties\">\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">jdbc.driver</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.mysql.jdbc.Driver</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">jdbc.url</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://127.0.0.1:3306/spring_db</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">jdbc.username</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">jdbc.password</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"properties\" data-title=\"jdbc2.properties\">\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">username</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root666</span></pre></td></tr></table></figure></div>\n<p>对应的 xml 文件中</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 方式一 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>property-placeholder</span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc.properties,jdbc2.properties<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">system-properties-mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NEVER<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 方式二 --></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>property-placeholder</span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*.properties<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">system-properties-mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NEVER<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 方式三 --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>property-placeholder</span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>classpath:*.properties<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">system-properties-mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NEVER<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 方式四 --></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>property-placeholder</span> <span class=\"token attr-name\">location</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>classpath*:*.properties<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">system-properties-mode</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NEVER<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><ul>\n<li>方式一：可以实现，如果配置文件多的话，每个都需要配置</li>\n<li>方式二: <code>*.properties</code>  代表所有以 properties 结尾的文件都会被加载，可以解决方式一的问题，但是不标准</li>\n<li>方式三：标准的写法， <code>classpath:</code>  代表的是从根路径下开始查找，但是只能查询当前项目的根路径</li>\n<li>方式四：不仅可以加载当前项目还可以加载当前项目所依赖的所有项目的根路径下的 properties 配置文件</li>\n</ul>\n<p>掌握：</p>\n<ol>\n<li>如何开启 <code>context</code>  命名空间（xmlns 相关内容更改）</li>\n<li>如何加载 properties 配置文件（）<br />\n <code>&lt;context:property-placeholder location=&quot;&quot; system-properties-mode=&quot;NEVER&quot;/&gt;</code></li>\n<li>如何在 applicationContext.xml 引入 properties 配置文件中的值 ( <code>$&#123;key&#125;</code> )</li>\n</ol>\n<h1 id=\"核心容器\"><a class=\"anchor\" href=\"#核心容器\">#</a> 核心容器</h1>\n<p>前面已经完成 bean 与依赖注入的相关知识学习，接下来学习的是 IOC 容器中的<mark>核心容器</mark>。<br />\n可以把它简单的理解为 <code>ApplicationContext</code> ，前面虽然已经用到过，但是并没有系统的学习，接下来咱们从以下几个问题入手来学习下容器的相关知识:</p>\n<ul>\n<li>如何创建容器？</li>\n<li>创建好容器后，如何从容器中获取 bean 对象？</li>\n<li>容器类的层次结构是什么？</li>\n<li>BeanFactory 是什么？</li>\n</ul>\n<p>与上述的环境类似包括：pom.xml、applicationContext.xml、BookDao、BookDaoImpl 为例</p>\n<h2 id=\"容器创建\"><a class=\"anchor\" href=\"#容器创建\">#</a> 容器创建</h2>\n<ol>\n<li>类路径下的 XML 配置文件<br />\n <code>ApplicationContext ctx = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);</code></li>\n<li>文件系统下的 XML 配置文件<br />\n <code>ApplicationContext ctx = new FileSystemXmlApplicationContext(&quot;applicationContext.xml&quot;);</code></li>\n</ol>\n<p>其中 2 是从项目路径下开始查找 <code>applicationContext.xml</code>  配置文件的，需要指定绝对路径，耦合度较高，不推荐使用<br />\n <code>ApplicationContext ctx = new FileSystemXmlApplicationContext(&quot;D:\\\\workspace\\\\spring\\\\spring_10_container\\\\src\\\\main\\\\resources\\\\applicationContext.xml&quot;); </code></p>\n<h2 id=\"bean的获取\"><a class=\"anchor\" href=\"#bean的获取\">#</a> bean 的获取</h2>\n<ol>\n<li>方式一，就是目前案例中获取的方式:  <code>BookDao bookDao = (BookDao) ctx.getBean(&quot;bookDao&quot;);</code></li>\n</ol>\n<p>这种方式存在的问题是每次获取的时候都需要进行类型转换，有没有更简单的方式呢？</p>\n<ol start=\"2\">\n<li>\n<p>方式二： <code>BookDao bookDao = ctx.getBean(&quot;bookDao&quot;，BookDao.class); </code> <br />\n这种方式可以解决类型强转问题，但是参数又多加了一个，相对来说没有简化多少。</p>\n</li>\n<li>\n<p>方式三: <code>BookDao bookDao = ctx.getBean(BookDao.class);</code></p>\n</li>\n</ol>\n<p>这种方式就类似我们之前所学习依赖注入中的按类型注入。必须要确保 IOC 容器中该类型对应的 bean 对象只能有一个</p>\n<h2 id=\"容器类层次结构\"><a class=\"anchor\" href=\"#容器类层次结构\">#</a> 容器类层次结构</h2>\n<ol>\n<li>在 IDEA 中双击 <code>shift</code> , 输入 BeanFactory</li>\n</ol>\n<p><img data-src=\"image-20240312192216910.png\" alt=\"\" /></p>\n<ol start=\"2\">\n<li>点击进入 BeanFactory 类，ctrl+h, 就能查看到如下结构的层次关系<br />\n<img data-src=\"image-20240312192338994.png\" alt=\"\" /><br />\n从图中可以看出，容器类也是从无到有根据需要一层层叠加上来的，重点理解下这种设计思想。</li>\n</ol>\n<h2 id=\"beanfactory的使用\"><a class=\"anchor\" href=\"#beanfactory的使用\">#</a> BeanFactory 的使用</h2>\n<p>使用 BeanFactory 来创建 IOC 容器的具体实现方式为:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppForBeanFactory</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Resource</span> resources <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">BeanFactory</span> bf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XmlBeanFactory</span><span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">BookDao</span> bookDao <span class=\"token operator\">=</span> bf<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>为了更好的看出 <code>BeanFactory</code>  和 <code>ApplicationContext</code>  之间的区别，在 BookDaoImpl 添加如下构造函数:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">BookDaoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"constructor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如果不去获取 bean 对象，打印会发现：</p>\n<ul>\n<li>BeanFactory 是延迟加载，只有在获取 bean 对象的时候才会去创建</li>\n<li>ApplicationContext 是立即加载，容器加载的时候就会创建 bean 对象</li>\n<li>ApplicationContext 要想成为延迟加载，只需要按照如下方式进行配置<br />\n <code>&lt;bean id=&quot;bookDao&quot; class=&quot;com.itheima.dao.impl.BookDaoImpl&quot;  lazy-init=&quot;true&quot;/&gt;</code></li>\n</ul>\n<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<ul>\n<li>BeanFactory 是 IoC 容器的顶层接口，初始化 BeanFactory 对象时，加载的 bean 延迟加载</li>\n<li>ApplicationContext 接口是 Spring 容器的核心接口，初始化时 bean 立即加载</li>\n<li>ApplicationContext 接口提供基础的 bean 操作相关方法，通过其他接口扩展其功能</li>\n<li>ApplicationContext 接口常用初始化类\n<ul>\n<li><strong><mark>ClassPathXmlApplicationContext (常用)</mark></strong></li>\n<li>FileSystemXmlApplicationContext</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"image-20240312192706131.png\" alt=\"\" /><br />\n最常用的就两个属性<mark> id</mark> 和<mark> class</mark>。</p>\n<p><img data-src=\"image-20240312192738210.png\" alt=\"\" /></p>\n<h1 id=\"iocdi注解开发\"><a class=\"anchor\" href=\"#iocdi注解开发\">#</a> IOC/DI 注解开发</h1>\n<p>Spring 的 IOC/DI 对应的配置了解完了，但是使用起来相对来说还是比较复杂的，复杂的地方在<mark>配置文件</mark><br />\n所以 Spring 到底是如何简化代码开发的呢？需要用到 Spring 的注解开发</p>\n<ul>\n<li>2.0 版开始支持注解</li>\n<li>2.5 版注解功能趋于完善</li>\n<li>3.0 版支持纯注解开发</li>\n</ul>\n<p>有两块内容 <code>注解开发定义bean</code>  和 <code>纯注解开发</code></p>\n<p>同上面一样，用 BookDao、BookDaoImpl、BookService、BookServiceImpl 四个类为例</p>\n<h2 id=\"注解开发定义bean\"><a class=\"anchor\" href=\"#注解开发定义bean\">#</a> 注解开发定义 bean</h2>\n<p>不再 xml 中写 &lt;bean&gt; 依赖<br />\n<s> <code>&lt;bean id=&quot;bookDao&quot; class=&quot;com.itheima.dao.impl.BookDaoImpl&quot;/&gt;</code> </s><br />\n 而是在 BookDaoImpl 类上添加 <code>@Component</code>  注解</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookDao\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><span class=\"label danger\">💔danger</span><br />\n@Component 注解不可以添加在接口上，因为接口是无法创建对象的即 BookDao 这种接口类不能用</p>\n<p><img data-src=\"image-20240312204854420.png\" alt=\"\" /></p>\n<p><mark>为了让 Spring 框架能够扫描到写在类上的注解，需要在配置文件上进行包扫描</mark></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>component-scan</span> <span class=\"token attr-name\">base-package</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><strong>component-scan</strong></p>\n<ul>\n<li>component: 组件，Spring 将管理的 bean 视作自己的一个组件</li>\n<li>scan: 扫描<br />\n base-package 指定 Spring 框架扫描的包路径，它会扫描指定包及其子包中的所有类上的注解</li>\n<li>包路径越多 [如:com.itheima.dao.impl]，扫描的范围越小速度越快</li>\n<li>包路径越少 [如:com.itheima], 扫描的范围越大速度越慢</li>\n<li>一般扫描到项目的组织名称即 Maven 的 groupId 下 [如:com.itheima] 即可</li>\n</ul>\n<p>在 BookServiceImpl 类上也添加 <code>@Component</code>  交给 Spring 框架管理</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBookDao</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bookDao <span class=\"token operator\">=</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 App 类中，从 IOC 容器中获取 BookServiceImpl 对应的 bean 对象，打印。测试为默认单例</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">BookDao</span> bookDao <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span><span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookDao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookDao<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 按类型获取 bean</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">BookService</span> bookService <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>BookServiceImpl 类没有起名称，所以在 App 中是按照类型来获取 bean 对象</li>\n<li>@Component 注解如果不起名称，会有一个默认值就是 <code>当前类名首字母小写</code> ，所以也可以按照名称获取，如</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">BookService</span> bookService <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BookService</span><span class=\"token punctuation\">)</span>ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookServiceImpl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>对于 @Component 注解，还衍生出了其他三个注解 <code>@Controller</code> 、 <code>@Service</code> 、 <code>@Repository</code> <br />\n 这三个注解和 @Component 注解的作用是一样的，为什么要衍生出这三个呢？<br />\n 方便我们后期在编写类的时候能很好的区分出这个类是属于 <code>表现层</code> 、 <code>业务层</code> 还是 <code>数据层</code> 的类。</p>\n<h2 id=\"纯注解开发模式\"><a class=\"anchor\" href=\"#纯注解开发模式\">#</a> 纯注解开发模式</h2>\n<p>上面已经可以使用注解来配置 bean, 但是依然有用到配置文件，在配置文件中对包进行了扫描，Spring 在 3.0 版已经支持纯注解开发</p>\n<ul>\n<li>Spring3.0 开启了纯注解开发模式，使用 Java 类替代配置文件，开启了 Spring 快速开发赛道</li>\n</ul>\n<blockquote>\n<p>1：创建配置类、标识该类为配置类<br />\n 2：创建一个配置类 <code>SpringConfig</code> <br />\n3：在配置类上添加 <code>@Configuration</code>  注解<br />\n 4：将其标识为一个配置类，替换 <code>applicationContext.xml</code> <br />\n5：在配置类上添加包扫描注解 <code>@ComponentScan</code>  替换 <code>&lt;context:component-scan base-package=&quot;&quot;/&gt;</code> <br />\n6：创建一个新的运行类 <code>AppForAnnotation</code></p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>AppForAnnotation</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppForAnnotation</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">BookDao</span> bookDao <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span><span class=\"token punctuation\">)</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookDao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookDao<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">BookService</span> bookService <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>@Configuration 注解用于设定当前类为配置类</li>\n<li>@ComponentScan 注解用于设定扫描路径，此注解只能添加一次，多个数据请用数组格式<br />\n <code>@ComponentScan(&#123;com.itheima.service&quot;,&quot;com.itheima.dao&quot;&#125;)</code></li>\n<li>读取 Spring 核心配置文件初始化容器对象切换为读取 Java 配置类初始化容器对象</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 加载配置文件初始化容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"applicationContext.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 加载配置类初始化容器</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"小结-4\"><a class=\"anchor\" href=\"#小结-4\">#</a> 小结</h3>\n<ul>\n<li>记住 @Component、@Controller、@Service、@Repository 这四个注解</li>\n<li>applicationContext.xml 中 <code>&lt;context:component-san/&gt;</code>  的作用是指定扫描包路径，注解为 @ComponentScan</li>\n<li>@Configuration 标识该类为配置类，使用类替换 applicationContext.xml 文件</li>\n<li>ClassPathXmlApplicationContext 是加载 XML 配置文件</li>\n<li>AnnotationConfigApplicationContext 是加载配置类</li>\n</ul>\n<h2 id=\"注解范围及生命周期\"><a class=\"anchor\" href=\"#注解范围及生命周期\">#</a> 注解范围及生命周期</h2>\n<p>首先注解加载 bean 也是默认单例模式。更改的话在对应的 bean 上面添加 <code>@Scope</code>  注解</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>@Scope</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>类型</td>\n<td>类注解</td>\n</tr>\n<tr>\n<td>位置</td>\n<td>类定义上方</td>\n</tr>\n<tr>\n<td>作用</td>\n<td>设置该类创建对象的作用范围 &lt;br/&gt; 可用于设置创建出的 bean 是否为单例对象</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>value（默认）：定义 bean 作用范围，&lt;br/&gt;<mark> 默认值 singleton（单例），可选值 prototype（非单例）</mark></td>\n</tr>\n</tbody>\n</table>\n<p>对于初始化和销毁对应的注解是： <code>@PostConstruct</code>  和 <code>@PreDestroy</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostConstruct</span> <span class=\"token comment\">// 在构造方法之后执行，替换 init-method</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"init ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@PreDestroy</span> <span class=\"token comment\">// 在销毁方法之前执行，替换 destroy-method</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"destroy ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">AnnotationConfigApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">BookDao</span> bookDao1 <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">BookDao</span> bookDao2 <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookDao1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookDao2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//`destroy` 只有在容器关闭的时候，才会执行</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><mark><strong>注意:</strong>@PostConstruct 和 @PreDestroy 注解如果找不到，需要导入下面的 jar 包</mark></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>javax.annotation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>javax.annotation-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.3.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>找不到的原因是，从 JDK9 以后 jdk 中的 javax.annotation 包被移除了，这两个注解刚好就在这个包中。</p>\n<p><img data-src=\"image-20240313154231688.png\" alt=\"\" /></p>\n<h2 id=\"注解依赖注入\"><a class=\"anchor\" href=\"#注解依赖注入\">#</a> 注解依赖注入</h2>\n<p>虽然已经通过注解实现了 bean 的控制，但如下</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBookDao</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bookDao <span class=\"token operator\">=</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">AnnotationConfigApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">BookService</span> bookService <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        bookService<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行 app 类则会报错 <code>Cannot invoke &quot;com.itheima.dao.BookDao.save()&quot; because &quot;this.bookDao&quot; is null</code> <br />\n 这是因为还没尽兴依赖注入，虽然 bookService 创建没问题，要调用 bookDao 时则会报错。删除 get 注入方式，通过注解 <code>@Autowired</code>  即可</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>@Autowired 可以写在属性上，也可也写在 setter 方法上，最简单的处理方式是 <code>写在属性上并将setter方法删除掉</code></li>\n<li>为什么 setter 方法可以删除呢？\n<ul>\n<li>自动装配基于反射设计创建对象并通过暴力反射为私有属性进行设值</li>\n<li>普通反射只能获取 public 修饰的内容</li>\n<li>暴力反射除了获取 public 修饰的内容还可以获取 private 修改的内容</li>\n<li>所以此处无需提供 setter 方法</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"label warning\">warning</span> 但如果对应 BookDao 接口如果有多个实现类，如 <code>public class BookDaoImpl2 implements BookDao &#123;...&#125;</code> ，则又会报错<br />\n此时，按照类型注入就无法区分到底注入哪个对象，解决方案: <code>按照名称注入</code> <br />\n给两个 dao 类起别名</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookDao\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookDao2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl2</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...2\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>此时就可以注入成功，但是得思考个问题:</p>\n<ul>\n<li>@Autowired 是按照类型注入的，给 BookDao 的两个实现起了名称，它还是有两个 bean 对象，为什么不报错？</li>\n<li>@Autowired 默认按照类型自动装配，如果 IOC 容器中同类的 Bean 找到多个，就按照变量名和 Bean 的名称匹配。因为变量名叫 <code>bookDao</code>  而容器中也有一个 <code>booDao</code> ，所以可以成功注入</li>\n</ul>\n<p>相对的，此时按照类型会找到多个 bean 对象，此时会按照 <code>bookDao</code>  名称去找，因为 IOC 容器只有名称叫 <code>bookDao1</code>  和 <code>bookDao2</code> , 所以找不到，会报 <code>NoUniqueBeanDefinitionException</code> <br />\n<img data-src=\"image-20240313155232173.png\" alt=\"\" /></p>\n<p>当根据类型在容器中找到多个 bean, 注入参数的属性名又和容器中 bean 的名称不一致，这个时候该如何解决，就需要使用到 <code>@Qualifier</code>  来指定注入哪个名称的 bean 对象。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookDao1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book service save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>@Qualifier 注解后的值就是需要注入的 bean 的名称。</p>\n<p><mark>注意:@Qualifier 不能独立使用，必须和 @Autowired 一起使用</mark></p>\n<blockquote>\n<p>简单数据的注入</p>\n</blockquote>\n<p>使用 <code>@Value</code> ，如果类型不对应则会报错</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookDao\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>为了统一管理，可以使用到之前的 <code>properties配置文件</code> ，可见<a href=\"#%E5%B1%9E%E6%80%A7%E4%BC%98%E5%8C%96\">属性优化</a>，区别在于要改为注解读取 properties 配置文件</p>\n<blockquote>\n<p>resource 下准备 properties 文件，如：jdbc.properties<br />\n 使用注解加载 properties 配置文件（在配置类上添加 <code>@PropertySource</code>  注解）<br />\n使用 @Value 读取配置文件中的内容（${name}）</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>样例</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 假设在 jdbc.properties 下有个属性 name=zy</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc.properties\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bookDao\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;name&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// 结果：book dao save zy</span></pre></td></tr></table></figure><ul>\n<li>如果读取的 properties 配置文件有多个，可以使用 <code>@PropertySource</code>  的属性来指定多个<br />\n <code>@PropertySource(&#123;&quot;jdbc.properties&quot;,&quot;xxx.properties&quot;&#125;)</code></li>\n<li><code>@PropertySource</code>  注解属性中不支持使用通配符 <code>*</code> , 运行会报错<br />\n <code>@PropertySource(&#123;&quot;*.properties&quot;&#125;)</code></li>\n<li><code>@PropertySource</code>  注解属性中可以把 <code>classpath:</code>  加上，代表从当前项目的根路径找文件<br />\n <code>@PropertySource(&#123;&quot;classpath:jdbc.properties&quot;&#125;)</code></li>\n</ul>\n<h3 id=\"小结-5\"><a class=\"anchor\" href=\"#小结-5\">#</a> 小结</h3>\n<p><code>@Autowired</code>  自动装配依赖<br />\n <code>@Qualifier</code>  依赖类有多个 bean 时，指定 id 注入<br />\n <code>@Value</code>  简单数据注入的注解<br />\n <code>@PropertySource</code>  注入 properties 文件（管理简单数据 / 特定数据：数据库账号密码等），搭配 <code>@Value</code>  和 ${&lt;name&gt;} 使用</p>\n<h1 id=\"iocdi注解开发管理第三方bean\"><a class=\"anchor\" href=\"#iocdi注解开发管理第三方bean\">#</a> IOC/DI 注解开发管理第三方 bean</h1>\n<p>前面定义 bean 的时候都是在自己开发的类上面写个注解就完成了，但如果是第三方的类，这些类都是在 jar 包中，我们没有办法在类上面添加注解，这个时候该怎么办？</p>\n<ul>\n<li>我们就需要有一种更加灵活的方式来定义 bean, 这种方式不能在原始代码上面书写注解，一样能定义 bean, 这就用到了一个全新的注解 ==@Bean==。</li>\n</ul>\n<p>以导入 druid 为例，可见<a href=\"#IOC/DI%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E7%AC%AC%E4%B8%89%E6%96%B9bean\"> IOC/DI 配置管理第三方 bean</a> 中在 xml 中设置 bean，现在通过注解在 config 类中配置</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>druid<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.1.16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>在配置类中添加一个方法，该方法的返回值就是要创建的 Bean 对象类型，<mark>在方法上添加 <code>@Bean</code>  注解</mark></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">DruidDataSource</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.mysql.jdbc.Driver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/spring_db\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>注意：不能使用 <code>DataSource ds = new DruidDataSource()</code> </strong> ，因为 DataSource 接口中没有对应的 setter 方法来设置属性。</p>\n<p>此时就可以从 IOC 容器中获取对象并打印：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">AnnotationConfigApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">DataSource</span> dataSource <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如果有多个 bean 要被 Spring 管理，直接在配置类中多些几个方法，方法上添加 @Bean 注解即可</p>\n<h2 id=\"多配置处理\"><a class=\"anchor\" href=\"#多配置处理\">#</a> 多配置处理</h2>\n<p>如果把所有的第三方 bean 都配置到 Spring 的配置类 <code>SpringConfig</code>  中，虽然可以，但是不利于代码阅读和分类管理，所有我们就想能不能按照类别将这些 bean 配置到不同的配置类中？</p>\n<p>对于数据源的 bean, 我们新建一个 <code>JdbcConfig</code>  配置类，并把数据源配置到该类下</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>JdbcConfig.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JdbcConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">DruidDataSource</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.mysql.jdbc.Driver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/spring_db\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这个配置类如何能被 Spring 配置类加载到，并创建 DataSource 对象在 IOC 容器中？</p>\n<ol>\n<li>包扫描</li>\n<li>@Import 引入</li>\n</ol>\n<p>对于包扫描：</p>\n<blockquote>\n<p>步骤 1: 在 Spring 的配置类上添加包扫描<br />\n步骤 2: 在 JdbcConfig 上添加配置注解</p>\n</blockquote>\n<p>在 dao 层同级的 config 目录下创建配置类 SpringConfig 为例，在跟配置类 SpringConfig 指定 <code>@ComponentScan()</code>  扫描对应的目录。JdbcConfig 依然要声明 <code>@Configuration</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima.config\"</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JdbcConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">DruidDataSource</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.mysql.jdbc.Driver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/spring_db\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用 <code>@Import</code>  引入：<br />\n这种方案可以不用加 <code>@Configuration</code>  注解，但是必须在 Spring 配置类上使用 <code>@Import</code>  注解手动引入需要加载的配置类</p>\n<blockquote>\n<p>步骤 1: 去除 JdbcConfig 类上的注解<br />\n步骤 2: 在 Spring 配置类中引入</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//@ComponentScan(\"com.itheima.config\")</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">JdbcConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JdbcConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">DruidDataSource</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.mysql.jdbc.Driver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/spring_db\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>扫描注解可以移除</li>\n<li>@Import 参数需要的是一个<mark>数组</mark>，可以引入多个配置类</li>\n<li>@Import 注解在配置类中只能写一次，多个则会报错</li>\n</ul>\n<h2 id=\"第三方的依赖注入\"><a class=\"anchor\" href=\"#第三方的依赖注入\">#</a> 第三方的依赖注入</h2>\n<ul>\n<li>对于简单数据，类似<a href=\"#%E6%B3%A8%E8%A7%A3%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5\">注解依赖注入</a>中的 properties 处理</li>\n<li>对于类，在 SpringConfig 中扫描该类，纳入 Spring 管理即可</li>\n</ul>\n<p><em><strong>简单数据</strong></em>：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:jdbc.properties\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">JdbcConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JdbcConfig</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">//1. 定义一个方法获得要管理的对象  </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.driver&#125;\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> driver<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.url&#125;\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.username&#125;\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userName<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.password&#125;\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">//2. 添加 @Bean，表示当前方法的返回值是一个 bean  </span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">//@Bean 修饰的方法，形参根据类型自动装配  </span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookDao<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">DruidDataSource</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\">AnnotationConfigApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token class-name\">DataSource</span> dataSource <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>jdbc.properties 文件放在 main 目录下的 resources 资源文件夹，可以右键 make directory as ：Sources root 就会自动找到了</p>\n<p><em><strong>类注入</strong></em><br />\n假设在构建 DataSource 对象的时候，需要用到 BookDao 对象，该如何把 BookDao 对象注入进方法内让其使用呢？</p>\n<blockquote>\n<p>步骤 1: 在 SpringConfig 中扫描 BookDao<br />\n 步骤 2: 在 JdbcConfig 类的方法上添加参数</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima.dao\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">JdbcConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bookDao<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token class-name\">DruidDataSource</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    ds<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    ds<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><mark>引用类型注入只需要为 bean 定义方法设置形参即可，容器会根据类型自动装配对象</mark></p>\n<h1 id=\"注解开发总结\"><a class=\"anchor\" href=\"#注解开发总结\">#</a> 注解开发总结</h1>\n<p>前文包括了 XML 配置和注解的开发实现，两者之间的差异见图<br />\n<img data-src=\"image-20240313170908374.png\" alt=\"\" /></p>\n<h1 id=\"spring整合\"><a class=\"anchor\" href=\"#spring整合\">#</a> Spring 整合</h1>\n<p>Spring 有一个容器，叫做 IoC 容器，里面保存 bean。在进行企业级开发的时候，其实除了将自己写的类让 Spring 管理之外，还有一部分重要的工作就是使用第三方的技术。前面已经讲了如何管理第三方 bean 了，下面结合 IoC 和 DI，整合 2 个常用技术 <code>Mybatis</code> , <code>Junit</code> ，进一步加深对 Spring 的使用理解。</p>\n<h2 id=\"mybatis\"><a class=\"anchor\" href=\"#mybatis\">#</a> mybatis</h2>\n<h3 id=\"独立开发流程\"><a class=\"anchor\" href=\"#独立开发流程\">#</a> 独立开发流程</h3>\n<blockquote>\n<p>步骤 1: 准备数据库表</p>\n</blockquote>\n<p>Mybatis 是来操作数据库表，所以先创建一个数据库及表</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> spring_db <span class=\"token keyword\">character</span> <span class=\"token keyword\">set</span> utf8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">use</span> spring_db<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tbl_account<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    id <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">35</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    money <span class=\"token keyword\">double</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>小小的复习下 mysql<br />\n 打开服务、进入终端  <code>mysql -u root -p</code> / DG、</p>\n<blockquote>\n<p>步骤 2: 创建项目导入 jar 包</p>\n</blockquote>\n<p>项目的 pom.xml 添加相关依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"><span>pom.xml</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-context<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>druid<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.1.16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>mysql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mysql-connector-java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.1.47<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>步骤 3: 根据表创建模型类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Account</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> id<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Double</span> <span class=\"token function\">getMoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> money<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setMoney</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>money <span class=\"token operator\">=</span> money<span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span>  </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Account&#123;\"</span> <span class=\"token operator\">+</span>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token string\">\"id=\"</span> <span class=\"token operator\">+</span> id <span class=\"token operator\">+</span>  </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token string\">\", name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token string\">\", money=\"</span> <span class=\"token operator\">+</span> money <span class=\"token operator\">+</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 4: 创建 Dao 接口</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Insert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"insert into tbl_account(name,money)values(#&#123;name&#125;,#&#123;money&#125;)\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delete from tbl_account where id = #&#123;id&#125; \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@Update</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update tbl_account set name = #&#123;name&#125; , money = #&#123;money&#125; where id = #&#123;id&#125; \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from tbl_account\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Account</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from tbl_account where id = #&#123;id&#125; \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token class-name\">Account</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 5: 创建 Service 接口和实现类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Account</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\">Account</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountDao</span> accountDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Account</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">return</span> accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Account</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">return</span> accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 6: 添加 jdbc.properties 文件</p>\n</blockquote>\n<p>resources 目录下添加，用于配置数据库连接四要素</p>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">jdbc.driver</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.mysql.jdbc.Driver</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">jdbc.url</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://localhost:3306/spring_db?useSSL=false</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">jdbc.username</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 根据自身 mysql 环境账号密码设置</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key attr-name\">jdbc.password</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">123456</span></pre></td></tr></table></figure><p>useSSL: 关闭 MySQL 的 SSL 连接</p>\n<blockquote>\n<p>步骤 7: 添加 Mybatis 核心配置文件</p>\n</blockquote>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">configuration</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//mybatis.org//DTD Config 3.0//EN\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-config.dtd\"</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 读取外部 properties 配置文件 --></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span> <span class=\"token attr-name\">resource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc.properties<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 别名扫描的包路径 --></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>typeAliases</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>package</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.domain<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>typeAliases</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 数据源 --></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>environments</span> <span class=\"token attr-name\">default</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mysql<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>environment</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mysql<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>transactionManager</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>JDBC<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>transactionManager</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dataSource</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POOLED<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>driver<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.driver&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.url&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.username&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.password&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dataSource</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>environment</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>environments</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 映射文件扫描包路径 --></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mappers</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>package</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.itheima.dao<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>package</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mappers</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>步骤 8: 编写应用程序</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 1. 创建 SqlSessionFactoryBuilder 对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> sqlSessionFactoryBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 2. 加载 SqlMapConfig.xml 配置文件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">InputStream</span> inputStream <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SqlMapConfig.xml.bak\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 3. 创建 SqlSessionFactory 对象</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">SqlSessionFactory</span> sqlSessionFactory <span class=\"token operator\">=</span> sqlSessionFactoryBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 4. 获取 SqlSession</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> sqlSessionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 5. 执行 SqlSession 对象执行查询，获取结果 User</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">AccountDao</span> accountDao <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AccountDao</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">Account</span> ac <span class=\"token operator\">=</span> accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 6. 释放资源</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"用spring的流程\"><a class=\"anchor\" href=\"#用spring的流程\">#</a> 用 Spring 的流程</h3>\n<p>Mybatis 的基础环境我们已经准备好了，接下来就得分析下在上述的内容中，哪些对象可以交给 Spring 来管理？</p>\n<ul>\n<li>Mybatis 程序核心对象分析<br />\n<img data-src=\"image-20240313194410603.png\" alt=\"\" /></li>\n<li>从图中可以获取到，真正需要交给 Spring 管理的是<mark> SqlSessionFactory</mark>，SqlSession 是由 SqlSessionFactory 造好的</li>\n<li>整合 Mybatis，就是将 Mybatis 用到的内容交给 Spring 管理，分析下配置文件<br />\n<img data-src=\"1630137388717.png\" alt=\"\" /></li>\n<li>第一行读取外部 properties 配置文件，Spring 有提供具体的解决方案 <code>@PropertySource</code> , 需要交给 Spring</li>\n<li>第二行起别名包扫描，为 SqlSessionFactory 服务的，需要交给 Spring</li>\n<li>第三行主要用于做连接池，Spring 之前我们已经整合了 Druid 连接池，这块也需要交给 Spring</li>\n<li>前面三行一起都是为了创建 SqlSession 对象用的，那么用 Spring 管理 SqlSession 对象吗？回忆下 SqlSession 是由 SqlSessionFactory 创建出来的，所以只需要将 SqlSessionFactory 交给 Spring 管理即可。</li>\n<li>第四行是 Mapper 接口和映射文件 [如果使用注解就没有该映射文件]，这个是在获取到 SqlSession 以后执行具体操作的时候用，所以它和 SqlSessionFactory 创建的时机都不在同一个时间，可能需要单独管理。</li>\n</ul>\n<p>因此大体需要做两件事：</p>\n<ol>\n<li>Spring 要管理 MyBatis 中的 SqlSessionFactory</li>\n<li>Spring 要管理 Mapper 接口的扫描</li>\n</ol>\n<blockquote>\n<p>步骤 1: 项目中导入整合需要的 jar 包</p>\n</blockquote>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">&lt;!--Spring 操作数据库需要该 jar 包 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-jdbc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">&lt;!--</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tSpring 与 Mybatis 整合的 jar 包</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t这个 jar 包 mybatis 在前面，是 Mybatis 提供的</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t--></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-spring<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.3.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>步骤 2: 创建 Spring 的主配置类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 配置类注解</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 包扫描，主要扫描的是项目中的 AccountServiceImpl 类</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 3: 创建数据源的配置类</p>\n</blockquote>\n<p>在配置类中完成数据源的创建</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JdbcConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.driver&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> driver<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.url&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.username&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.password&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">DruidDataSource</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 4: 主配置类中读 properties 并引入数据源配置类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:jdbc.properties\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JdbcConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 或者在 JdbcConfig 上添加 @Configuration</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 5: 创建 Mybatis 配置类并配置 SqlSessionFactory</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MybatisConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 定义 bean，SqlSessionFactoryBean，用于产生 SqlSessionFactory 对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SqlSessionFactoryBean</span> <span class=\"token function\">sqlSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">SqlSessionFactoryBean</span> ssfb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 设置模型类的别名扫描</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ssfb<span class=\"token punctuation\">.</span><span class=\"token function\">setTypeAliasesPackage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima.domain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 设置数据源</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        ssfb<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> ssfb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 定义 bean，返回 MapperScannerConfigurer 对象</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MapperScannerConfigurer</span> <span class=\"token function\">mapperScannerConfigurer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">MapperScannerConfigurer</span> msc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MapperScannerConfigurer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        msc<span class=\"token punctuation\">.</span><span class=\"token function\">setBasePackage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima.dao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> msc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><em><strong>说明：</strong></em></p>\n<ul>\n<li>\n<p>使用 SqlSessionFactoryBean 封装 SqlSessionFactory 需要的环境信息<br />\n<img data-src=\"image-20240313195717288.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>SqlSessionFactoryBean 是前面我们讲解 FactoryBean 的一个子类，在该类中将 SqlSessionFactory 的创建进行了封装，简化 bean 的创建，我们只需要将其需要的内容设置即可。</p>\n</li>\n<li>\n<p>DataSource 读取配置文件生成 bean，然后注入进来的</p>\n</li>\n<li>\n<p>方法中有一个参数为 dataSource，当前 Spring 容器中已经创建了 Druid 数据源，类型刚好是 DataSource 类型，此时在初始化 SqlSessionFactoryBean 这个对象的时候，发现需要使用 DataSource 对象，而容器中刚好有这么一个对象，就自动加载了 DruidDataSource 对象。</p>\n</li>\n<li>\n<p>使用 MapperScannerConfigurer 加载 Dao 接口，创建代理对象保存到 IOC 容器中<br />\n<img data-src=\"image-20240313200424505.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>这个 MapperScannerConfigurer 对象也是 MyBatis 提供的专用于整合的 jar 包中的类，用来处理原始配置文件中的 mappers 相关配置，加载数据层的 Mapper 接口类</p>\n</li>\n<li>\n<p>MapperScannerConfigurer 有一个核心属性 basePackage，就是用来设置所扫描的包路径</p>\n</li>\n</ul>\n<blockquote>\n<p>步骤 6: 主配置类中引入 Mybatis 配置类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:jdbc.properties\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">JdbcConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">MybatisConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 7: 编写运行类</p>\n</blockquote>\n<p>在运行类中，从 IOC 容器中获取 Service 对象，调用方法获取结果</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">AccountService</span> accountService <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AccountService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">Account</span> ac <span class=\"token operator\">=</span> accountService<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>支持 Spring 与 Mybatis 的整合就已经完成了，其中主要用到的两个类分别是:</p>\n<ul>\n<li><mark>SqlSessionFactoryBean</mark> ( <code>ssfb.setTypeAliasesPackage(&quot;com.itheima.domain&quot;);</code> )</li>\n</ul>\n<ul>\n<li><mark>MapperScannerConfigurer</mark> ( <code>msc.setBasePackage(&quot;com.itheima.dao&quot;);</code> )<br />\n 就是动态的管理这两个，模型类，和与数据库对应属性的对象类。<br />\n至于 Mapper 接口怎么注入 Spring 容器，相关的扩展学习：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTIwNjAwMzMvYXJ0aWNsZS9kZXRhaWxzLzEwODQ1MzI5OA==\">原理详解</span></li>\n</ul>\n<h2 id=\"junit\"><a class=\"anchor\" href=\"#junit\">#</a> Junit</h2>\n<p>内容和其他环境跟<a href=\"#mybatis\"> mybatis</a> 一样</p>\n<blockquote>\n<p>步骤 1: 引入依赖<br />\n pom.xml</p>\n</blockquote>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>步骤 2: 编写测试类</p>\n</blockquote>\n<p>在 test\\java 下创建一个 AccountServiceTest，这个名字任意，配置要测试的 bean 为其属性，测试相应方法即可</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 设置类运行器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringJUnit4ClassRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 设置 Spring 环境对应的配置类</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@ContextConfiguration</span><span class=\"token punctuation\">(</span>classes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">SpringConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 加载配置类</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//@ContextConfiguration (locations=&#123;\"classpath:applicationContext.xml\"&#125;)// 加载配置文件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountServiceTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 支持自动装配注入 bean</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountService</span> accountService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testFindById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>accountService<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testFindAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>accountService<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><mark>核心就是：</mark></p>\n<ul>\n<li>\n<p>设置类运行器： <code>@RunWith(SpringJUnit4ClassRunner.class)</code></p>\n</li>\n<li>\n<p>加载测试配置</p>\n<ul>\n<li>如果测试的是注解配置类，则使用 <code>@ContextConfiguration(classes = 配置类.class)</code></li>\n<li>如果测试的是配置文件，则使用 <code>@ContextConfiguration(locations=&#123;配置文件名,...&#125;)</code></li>\n</ul>\n</li>\n<li>\n<p>Junit 运行后是基于 Spring 环境运行的，所以 Spring 提供了一个专用的类运行器，这个务必要设置，这个类运行器就在 Spring 的测试专用包中提供的，导入的坐标就是这个东西 <code>SpringJUnit4ClassRunner</code></p>\n</li>\n<li>\n<p>上面两个配置都是固定格式，当需要测试哪个 bean 时，使用自动装配加载对应的对象，下面的工作就和以前做 Junit 单元测试完全一样了</p>\n</li>\n</ul>\n<h1 id=\"aop\"><a class=\"anchor\" href=\"#aop\">#</a> AOP</h1>\n<p>Spring 有两个核心的概念，一个是 <code>IOC/DI</code> ，一个是 <code>AOP</code></p>\n<ul>\n<li>AOP (Aspect Oriented Programming) 面向切面编程，一种编程范式，指导开发者如何组织程序结构。\n<ul>\n<li>OOP (Object Oriented Programming) 面向对象编程</li>\n</ul>\n</li>\n<li>作用: <mark>在不惊动原始设计的基础上为其进行功能增强</mark>，前面咱们有技术就可以实现这样的功能即代理模式。</li>\n</ul>\n<h2 id=\"核心概念\"><a class=\"anchor\" href=\"#核心概念\">#</a> 核心概念</h2>\n<p>为了能更好的理解 AOP 的相关概念，我们准备了一个环境，整个环境的内容我们暂时可以不用关注，最主要的类为: <code>BookDaoImpl</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 记录程序当前执行执行（开始时间）</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Long</span> startTime <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 业务执行万次</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">10000</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 记录程序当前执行时间（结束时间）</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Long</span> endTime <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 计算时间差</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">Long</span> totalTime <span class=\"token operator\">=</span> endTime<span class=\"token operator\">-</span>startTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 输出信息</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行万次消耗时间：\"</span> <span class=\"token operator\">+</span> totalTime <span class=\"token operator\">+</span> <span class=\"token string\">\"ms\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao update ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao delete ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao select ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>当在 App 类中从容器中获取 bookDao 对象后，分别执行其 <code>save</code> , <code>delete</code> , <code>update</code>  和 <code>select</code>  方法后会有如下的打印结果:<br />\n<img data-src=\"image-20240313203733902.png\" alt=\"\" /></p>\n<ul>\n<li>对于计算万次执行消耗的时间只有 save 方法有，为什么 delete 和 update 方法也会有呢？</li>\n<li>delete 和 update 方法有，那什么 select 方法为什么又没有呢？</li>\n</ul>\n<p>这个案例中其实就使用了 Spring 的 AOP，在不惊动 (改动) 原有设计 (代码) 的前提下，想给谁添加功能就给谁添加。这个也就是 Spring 的理念：</p>\n<ul>\n<li>无入侵式 / 无侵入式</li>\n</ul>\n<p><img data-src=\"image-20240313203949106.png\" alt=\"\" /></p>\n<ol>\n<li>前面一直在强调，Spring 的 AOP 是对一个类的方法在不进行任何修改的前提下实现增强。对于上面的案例中 BookServiceImpl 中有 <code>save</code> , <code>update</code> , <code>delete</code>  和 <code>select</code>  方法，这些方法我们给起了一个名字叫<mark>连接点</mark> (所有方法)</li>\n<li>在 BookServiceImpl 的四个方法中，update 和 delete 只有打印没有计算万次执行消耗时间，但是在运行的时候已经有该功能，那也就是说 update 和 delete 方法都已经被增强，所以对于需要增强的方法我们给起了一个名字叫<mark>切入点</mark>（需要增强的方法）</li>\n<li>执行 BookServiceImpl 的 update 和 delete 方法的时候都被添加了一个计算万次执行消耗时间的功能，将这个功能抽取到一个方法中，换句话说就是<strong>存放共性功能的方法</strong>，我们给起了个名字叫<strong>通知</strong></li>\n<li>通知是要增强的内容，会有多个，切入点是需要被增强的方法，也会有多个，那哪个切入点需要添加哪个通知，就需要提前将它们之间的关系描述清楚，那么对于通知和切入点之间的关系描述，我们给起了个名字叫<mark>切面</mark></li>\n<li>通知是一个方法，方法不能独立存在需要被写在一个类中，这个类我们也给起了个名字叫<strong>通知类</strong></li>\n</ol>\n<p>至此 AOP 中的核心概念就已经介绍完了，总结下:</p>\n<ul>\n<li>连接点 (JoinPoint)：程序执行过程中的任意位置，粒度为执行方法、抛出异常、设置变量等\n<ul>\n<li>在 SpringAOP 中，理解为方法的执行</li>\n</ul>\n</li>\n<li>切入点 (Pointcut): 匹配连接点的式子\n<ul>\n<li>在 SpringAOP 中，一个切入点可以描述一个具体方法，也可也匹配多个方法\n<ul>\n<li>一个具体的方法：如 com.itheima.dao 包下的 BookDao 接口中的无形参无返回值的 save 方法</li>\n<li>匹配多个方法：所有的 save 方法，所有的 get 开头的方法，所有以 Dao 结尾的接口中的任意方法，所有带有一个参数的方法</li>\n</ul>\n</li>\n<li>连接点范围要比切入点范围大，是切入点的方法也一定是连接点，但是是连接点的方法就不一定要被增强，所以可能不是切入点。</li>\n</ul>\n</li>\n<li>通知 (Advice): 在切入点处执行的操作，也就是共性功能\n<ul>\n<li>在 SpringAOP 中，功能最终以方法的形式呈现</li>\n</ul>\n</li>\n<li>通知类：定义通知的类</li>\n<li>切面 (Aspect): 描述通知与切入点的对应关系。</li>\n</ul>\n<details class=\"info\"><summary>提问</summary><div>\n<ul>\n<li>什么是 AOP?</li>\n<li>AOP 的作用是什么？</li>\n<li>AOP 中核心概念分别指的是什么？</li>\n</ul>\n</div></details>\n<h2 id=\"aop入门案例\"><a class=\"anchor\" href=\"#aop入门案例\">#</a> AOP 入门案例</h2>\n<h3 id=\"需求分析\"><a class=\"anchor\" href=\"#需求分析\">#</a> 需求分析</h3>\n<p>案例设定：测算接口执行效率，但是这个案例稍微复杂了点，我们对其进行简化。<br />\n简化设定：在方法执行前输出当前系统时间。<br />\n对于 SpringAOP 的开发有两种方式，XML 和 <mark>注解</mark>，我们使用哪个呢？<br />\n 因为现在注解使用的比较多，所以本次课程就采用注解完成 AOP 的开发。<br />\n总结需求为：使用 SpringAOP 的注解方式完成在方法执行的前打印出当前系统时间。</p>\n<ol>\n<li>导入坐标 (pom.xml)</li>\n<li>制作连接点 (原始操作，Dao 接口与实现类)</li>\n<li>制作共性功能 (通知类与通知)</li>\n<li>定义切入点</li>\n<li>绑定切入点与通知关系 (切面)</li>\n</ol>\n<h3 id=\"环境准备-2\"><a class=\"anchor\" href=\"#环境准备-2\">#</a> 环境准备</h3>\n<p>创建一个 Maven 项目</p>\n<ul>\n<li>\n<p>pom.xml 添加 Spring 依赖 (context 会关联 aop 的包默认导入)</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-context<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>添加 BookDao 和 BookDaoImpl 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao save ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book dao update ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>创建 Spring 的配置类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>编写 App 运行类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">BookDao</span> bookDao <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"aop实现步骤\"><a class=\"anchor\" href=\"#aop实现步骤\">#</a> AOP 实现步骤</h3>\n<blockquote>\n<p>步骤 1: 添加依赖</p>\n</blockquote>\n<p>pom.xml</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.aspectj<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>aspectjweaver<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.9.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ul>\n<li>因为 <code>spring-context</code>  中已经导入了 <code>spring-aop</code> , 所以不需要再单独导入 <code>spring-aop</code></li>\n<li>导入 AspectJ 的 jar 包，AspectJ 是 AOP 思想的一个具体实现，Spring 有自己的 AOP 实现，但是相比于 AspectJ 来说比较麻烦，所以我们直接采用 Spring 整合 ApsectJ 的方式进行 AOP 开发。</li>\n</ul>\n<blockquote>\n<p>步骤 2: 定义接口与实现类</p>\n</blockquote>\n<pre><code>环境准备的时候，BookDaoImpl已经准备好，不需要做任何修改\n</code></pre>\n<blockquote>\n<p>步骤 3: 定义通知类和通知</p>\n</blockquote>\n<p>通知就是将共性功能抽取出来后形成的方法，共性功能指的就是当前系统时间的打印。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>类名和方法名没有要求，可以任意。</p>\n<blockquote>\n<p>步骤 4: 定义切入点</p>\n</blockquote>\n<p>BookDaoImpl 中有两个方法，分别是 save 和 update，我们要增强的是 update 方法，该如何定义呢？ <code>@Pointcut</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(void com.itheima.dao.BookDao.update())\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>说明:</strong></p>\n<ul>\n<li>切入点定义依托一个不具有实际意义的方法进行，即无参数、无返回值、方法体无实际逻辑。</li>\n<li>execution 及后面编写的内容，后面会有章节专门去学习。</li>\n</ul>\n<blockquote>\n<p>步骤 5: 制作切面</p>\n</blockquote>\n<p>切面是用来描述通知和切入点之间的关系，如何进行关系的绑定？ <code>@Before</code>  等切面注解</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(void com.itheima.dao.BookDao.update())\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Before</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>绑定切入点与通知关系，并指定通知添加到原始连接点的具体执行<mark>位置</mark></p>\n<p><strong>说明:</strong>@Before 翻译过来是之前，也就是说通知会在切入点方法执行之前执行，除此之前还有其他四种类型，后面会讲。</p>\n<blockquote>\n<p>步骤 6: 将通知类配给容器 <code>@Component</code>  并标识其为切面类 <code>@Aspect</code></p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(void com.itheima.dao.BookDao.update())\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Before</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 7: 开启注解格式 AOP 功能 <code>@EnableAspectJAutoProxy</code> <br />\n 告诉 spring，有用注解开发的 AOP</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@EnableAspectJAutoProxy</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 8: 运行程序</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">BookDao</span> bookDao <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>看到在执行 update 方法之前打印了系统时间戳，说明对原始方法进行了增强，AOP 编程成功。</p>\n<p><span class=\"label primary\">核心流程</span>  就是告知 spring 用了 AOP 注解 <code>@EnableAspectJAutoProxy</code> ，定义通知类和通知（ <code>@Pointcut</code>  添加切入点（哪些要增强），通知上 <code>@Before</code>  等切面注解（什么时候切入）），最后这个通知类配给容器 <code>@Component</code>  并标识其为切面类 <code>@Aspect</code></p>\n<h3 id=\"aop工作流程\"><a class=\"anchor\" href=\"#aop工作流程\">#</a> AOP 工作流程</h3>\n<blockquote>\n<p>流程 1:Spring 容器启动</p>\n</blockquote>\n<ul>\n<li>容器启动就需要去加载 bean, 哪些类需要被加载呢？</li>\n<li>需要被增强的类，如：BookServiceImpl</li>\n<li>通知类，如：MyAdvice</li>\n<li>注意此时 bean 对象还没有创建成功</li>\n</ul>\n<blockquote>\n<p>流程 2: 读取所有切面配置中的切入点</p>\n</blockquote>\n<p><img data-src=\"image-20240314153401740.png\" alt=\"\" /></p>\n<ul>\n<li>上面这个例子中有两个切入点的配置，但是第一个 <code>ptx()</code>  并没有被使用，所以不会被读取。</li>\n</ul>\n<blockquote>\n<p>流程 3: 初始化 bean，</p>\n</blockquote>\n<p>判定 bean 对应的类中的方法是否匹配到任意切入点</p>\n<ul>\n<li>注意第 1 步在容器启动的时候，bean 对象还没有被创建成功。</li>\n<li>要被实例化 bean 对象的类中的方法和切入点进行匹配<br />\n<img data-src=\"image-20240314153621648.png\" alt=\"\" />\n<ul>\n<li>匹配失败，创建原始对象，如 <code>UserDao</code>\n<ul>\n<li>匹配失败说明不需要增强，直接调用原始对象的方法即可。</li>\n</ul>\n</li>\n<li>匹配成功，创建原始对象（<mark>目标对象</mark>）的<mark>代理</mark>对象，如: <code>BookDao</code>\n<ul>\n<li>匹配成功说明需要对其进行增强</li>\n<li>对哪个类做增强，这个类对应的对象就叫做目标对象</li>\n<li>因为要对目标对象进行功能增强，而采用的技术是动态代理，所以会为其创建一个代理对象</li>\n<li>最终运行的是代理对象的方法，在该方法中会对原始方法进行功能增强</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>流程 4: 获取 bean 执行方法</p>\n</blockquote>\n<ul>\n<li>获取的 bean 是原始对象时，调用方法并执行，完成操作</li>\n<li>获取的 bean 是代理对象时，根据代理对象的运行模式运行原始方法与增强的内容，完成操作</li>\n</ul>\n<p>代理成功后输出对象不变，但 class 会变成代理<br />\n <code>System.out.println(bookDao);</code>     <code>com.itheima.dao.impl.BookDaoImpl@279fedbd</code> <br />\n <code>System.out.println(bookDao.getClass());</code></p>\n<ul>\n<li>如果目标对象中的方法会被增强，那么容器中将存入的是目标对象的代理对象（ <code>class com.sun.proxy.$Proxy19</code> ）</li>\n<li>如果目标对象中的方法不被增强，那么容器中将存入的是目标对象本身 ( <code>class com.itheima.dao.impl.BookDaoImpl</code> )</li>\n</ul>\n<p>直接打印对象走的是对象的 toString 方法，不管是不是代理对象打印的结果都是一样的，原因是内部对 toString 方法进行了重写</p>\n<p><span class=\"label warning\">提问</span></p>\n<ul>\n<li>请说出 AOP 的工作流程</li>\n<li>AOP 的核心概念？</li>\n</ul>\n<details class=\"success\"><summary>答案</summary><div>\n<ul>\n<li>目标对象、连接点、切入点</li>\n<li>通知类、通知</li>\n<li>切面</li>\n<li>代理</li>\n</ul>\n</div></details>\n<ul>\n<li>SpringAOP 的本质或者可以说底层实现是？</li>\n</ul>\n<details class=\"success\"><summary>答案</summary><div>\n<ul>\n<li>通过代理模式。</li>\n</ul>\n</div></details>\n<h2 id=\"aop配置管理\"><a class=\"anchor\" href=\"#aop配置管理\">#</a> AOP 配置管理</h2>\n<h3 id=\"aop切入点表达式\"><a class=\"anchor\" href=\"#aop切入点表达式\">#</a> AOP 切入点表达式</h3>\n<p>对于 AOP 中切入点表达式，有三部分，分别是 <code>语法格式</code> 、 <code>通配符</code> 和 <code>书写技巧</code> 。</p>\n<h4 id=\"语法格式\"><a class=\"anchor\" href=\"#语法格式\">#</a> 语法格式</h4>\n<p><code>execution(public User com.itheima.service.UserService.findById(int))</code>  为例：</p>\n<ul>\n<li>execution：动作关键字，描述切入点的行为动作，例如 execution 表示执行到指定切入点</li>\n<li>public: 访问修饰符，还可以是 public，private 等，可以省略</li>\n<li>User：返回值，写返回值类型</li>\n<li>com.itheima.service：包名，多级包使用点连接</li>\n<li>UserService: 类 / 接口名称</li>\n<li>findById：方法名</li>\n<li>int: 参数，直接写参数的类型，多个类型用逗号隔开</li>\n<li>异常名：方法定义中抛出指定异常，可以省略</li>\n</ul>\n<h4 id=\"通配符\"><a class=\"anchor\" href=\"#通配符\">#</a> 通配符</h4>\n<ul>\n<li>\n<p><code>*</code> : 单个独立的任意符号，可以独立出现，也可以作为前缀或者后缀的匹配符出现<br />\n execution（public * com.itheima.*.UserService.find*(*))<br />\n 匹配 com.itheima 包下的任意包中的 UserService 类或接口中所有 find 开头的带有一个参数的方法</p>\n</li>\n<li>\n<p><code>..</code> ：多个连续的任意符号，可以独立出现，常用于简化包名与参数的书写<br />\n execution（public User com..UserService.findById (..))<br />\n 匹配 com 包下的任意包中的 UserService 类或接口中所有名称为 findById 的方法</p>\n</li>\n<li>\n<p><code>+</code> ：专用于匹配子类类型<br />\n execution (* *..*Service+.*(..))<br />\n 这个使用率较低，描述子类的，咱们做 JavaEE 开发，继承机会就一次，使用都很慎重，所以很少用它。*Service+，表示所有以 Service 结尾的接口的子类。</p>\n</li>\n</ul>\n<p>样例：<br />\n<img data-src=\"image-20240314155728526.png\" alt=\"\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>itheima<span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span></span>BookDao</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>匹配接口，能匹配到</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>itheima<span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span>BookDaoImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>匹配实现类，能匹配到</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>itheima<span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span>BookDaoImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>返回值任意，能匹配到</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>itheima<span class=\"token punctuation\">.</span>dao<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span>BookDaoImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>返回值任意，但是update方法必须要有一个参数，无法匹配，要想匹配需要在update接口和实现类添加参数</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> com<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>返回值为<span class=\"token keyword\">void</span><span class=\"token punctuation\">,</span>com包下的任意包三层包下的任意类的update方法，匹配到的是实现类，能匹配</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> com<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>返回值为<span class=\"token keyword\">void</span><span class=\"token punctuation\">,</span>com包下的任意两层包下的任意类的update方法，匹配到的是接口，能匹配</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>返回值为<span class=\"token keyword\">void</span>，方法名是update的任意包下的任意类，能匹配</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>匹配项目中任意类的任意方法，能匹配，但是不建议使用这种方式，影响范围广</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>u<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>匹配项目中任意包任意类下只要以u开头的方法，update方法能满足，能匹配</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>*<span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>匹配项目中任意包任意类下只要以e结尾的方法，update和save方法能满足，能匹配</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> com<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>返回值为<span class=\"token keyword\">void</span>，com包下的任意包任意类任意方法，能匹配，<span class=\"token operator\">*</span>代表的是方法</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> com<span class=\"token punctuation\">.</span>itheima<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">.</span>*<span class=\"token class-name\">Service</span><span class=\"token punctuation\">.</span>find<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>将项目中所有业务层方法的以find开头的方法匹配</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token function\">execution</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> com<span class=\"token punctuation\">.</span>itheima<span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">.</span>*<span class=\"token class-name\">Service</span><span class=\"token punctuation\">.</span>save<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>将项目中所有业务层方法的以save开头的方法匹配</pre></td></tr></table></figure><p>后面两种更符合我们平常切入点表达式的编写规则</p>\n<h4 id=\"书写技巧\"><a class=\"anchor\" href=\"#书写技巧\">#</a> 书写技巧</h4>\n<p>对于切入点表达式的编写其实是很灵活的，那么在编写的时候，有没有什么好的技巧让我们用用:</p>\n<ul>\n<li>所有代码按照标准规范开发，否则以下技巧全部失效</li>\n<li>描述切入点通 <strong><mark>常描述接口</mark></strong>，而不描述实现类，如果描述到实现类，就出现紧耦合了</li>\n<li>访问控制修饰符针对接口开发均采用 public 描述（<strong><mark>可省略访问控制修饰符描述</mark></strong>）</li>\n<li>返回值类型对于增删改类使用精准类型加速匹配，对于查询类使用 * 通配快速描述</li>\n<li><strong><mark>包名</mark></strong> 书写 <strong><mark>尽量不使用.. 匹配</mark></strong>，效率过低，常用 * 做单个包描述匹配，或精准匹配</li>\n<li><strong><mark>接口名 / 类名</mark><strong>书写名称与模块相关的</strong><mark>采用 * 匹配</mark></strong>，例如 UserService 书写成 * Service，绑定业务层接口名</li>\n<li><strong><mark>方法名</mark></strong> 书写以 <strong><mark>动词</mark></strong> 进行 <strong><mark>精准匹配</mark></strong>，名词采用_匹配，例如 getById 书写成 getBy_,selectAll 书写成 selectAll</li>\n<li>参数规则较为复杂，根据业务方法灵活调整</li>\n<li>通常 <strong><mark>不使用异常</mark></strong> 作为 <strong><mark>匹配</mark></strong> 规则</li>\n</ul>\n<h3 id=\"aop通知类型\"><a class=\"anchor\" href=\"#aop通知类型\">#</a> AOP 通知类型</h3>\n<p>之前提过的 <code>@Before(&quot;pt()&quot;)</code>  所代表的含义是将 <code>通知</code> 添加到 <code>切入点</code> 方法执行的<mark>前面</mark>。<br />\n包括它还有：</p>\n<ul>\n<li>前置通知  <code>@Before</code></li>\n<li>后置通知  <code>@After</code></li>\n<li><strong><mark>环绕通知 (重点)</mark></strong>  <code>@Around</code></li>\n<li>返回后通知 (了解)  <code>@AfterReturning</code></li>\n<li>抛出异常后通知 (了解)  <code>@AfterThrowing</code></li>\n</ul>\n<p><img data-src=\"image-20240314160606994.png\" alt=\"\" /></p>\n<p>前置、后置看图很好理解，讲下环绕</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>例子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(void com.itheima.dao.BookDao.update())\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">around</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"around before advice ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"around after advice ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行后通知的内容打印出来，但是原始方法的内容却没有被执行<br />\n因为环绕通知需要在原始方法的前后进行增强，所以环绕通知就必须要能对原始操作进行调用，具体如何实现？</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(void com.itheima.dao.BookDao.update())\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">around</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> pjp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"around before advice ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 表示对原始操作的调用</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"around after advice ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>pjp.proceed();</code>  会强制要求抛异常 <code>throws Throwable</code> 。 <code>ProceedingJoinPoint pjp</code>  会代替接入点</p>\n<p>对于切入点<span class=\"label warning\">有返回值的</span></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt2()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">aroundSelect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> pjp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"around before advice ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 表示对原始操作的调用</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Object</span> ret <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"around after advice ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>必须要返回，否则报错。且能在截取出来的这个方法里进一步操作，但是需要返回值具体类型能匹配，比如要返回值 + 100，还得将 ret 强转 int 匹配。<br />\n<mark><strong>环绕通知注意事项</strong></mark></p>\n<ol>\n<li>环绕通知必须依赖形参 ProceedingJoinPoint 才能实现对原始方法的调用，进而实现原始方法调用前后同时添加通知</li>\n<li>通知中如果未使用 ProceedingJoinPoint 对原始方法进行调用将跳过原始方法的执行</li>\n<li>对原始方法的调用可以不接收返回值，通知方法设置成 void 即可，如果接收返回值，最好设定为 Object 类型</li>\n<li>原始方法的返回值如果是 void 类型，通知方法的返回值类型可以设置成 void, 也可以设置成 Object</li>\n<li>由于无法预知原始方法运行后是否会抛出异常，因此环绕通知方法必须要处理 Throwable 异常</li>\n</ol>\n<p><code>@AfterReturning</code>  是需要在原始方法 <code>select</code>  正常执行后才会被执行，如果 <code>select()</code>  方法执行的过程中出现了异常，那么返回后通知是不会被执行。后置通知是不管原始方法有没有抛出异常都会被执行。</p>\n<p><code>@AfterThrowing</code>  是需要原始方法抛出异常，可以在 <code>select()</code>  方法中添加一行代码 <code>int i = 1/0</code>  即可。如果没有抛异常，异常后通知将不会被执行。</p>\n<p><img data-src=\"image-20240314162351601.png\" alt=\"\" /></p>\n<h3 id=\"业务层接口执行效率\"><a class=\"anchor\" href=\"#业务层接口执行效率\">#</a> 业务层接口执行效率</h3>\n<p>任务：使用环绕通知，原始方法如果只执行一次，时间太快，两个时间差可能为 0，所以我们要执行万次来计算时间差。</p>\n<h4 id=\"环境准备-3\"><a class=\"anchor\" href=\"#环境准备-3\">#</a> 环境准备</h4>\n<p>创建一个 Maven 项目</p>\n<ul>\n<li>\n<p>pom.xml 添加 Spring 依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-context<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-jdbc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.aspectj<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>aspectjweaver<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.9.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>mysql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mysql-connector-java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.1.47<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>druid<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.1.16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-spring<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.3.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>添加 AccountService、AccountServiceImpl、AccountDao 与 Account 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Account</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">Account</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountDao</span> accountDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Account</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Account</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token annotation punctuation\">@Insert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"insert into tbl_account(name,money)values(#&#123;name&#125;,#&#123;money&#125;)\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token annotation punctuation\">@Delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delete from tbl_account where id = #&#123;id&#125; \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token annotation punctuation\">@Update</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update tbl_account set name = #&#123;name&#125; , money = #&#123;money&#125; where id = #&#123;id&#125; \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Account</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from tbl_account\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Account</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from tbl_account where id = #&#123;id&#125; \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token class-name\">Account</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Account</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token comment\">//setter..getter..toString 方法省略</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>resources 下提供一个 jdbc.properties</p>\n</li>\n</ul>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">jdbc.driver</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.mysql.jdbc.Driver</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">jdbc.url</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://localhost:3306/spring_db?useSSL=false</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">jdbc.username</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">jdbc.password</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">123456</span></pre></td></tr></table></figure><ul>\n<li>\n<p>创建相关配置类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//Spring 配置类：SpringConfig</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:jdbc.properties\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">JdbcConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">MybatisConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//JdbcConfig 配置类</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JdbcConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.driver&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> driver<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.url&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.username&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.password&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">DruidDataSource</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">//MybatisConfig 配置类</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MybatisConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SqlSessionFactoryBean</span> <span class=\"token function\">sqlSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token class-name\">SqlSessionFactoryBean</span> ssfb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        ssfb<span class=\"token punctuation\">.</span><span class=\"token function\">setTypeAliasesPackage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima.domain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        ssfb<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> ssfb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MapperScannerConfigurer</span> <span class=\"token function\">mapperScannerConfigurer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token class-name\">MapperScannerConfigurer</span> msc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MapperScannerConfigurer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        msc<span class=\"token punctuation\">.</span><span class=\"token function\">setBasePackage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima.dao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> msc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>编写 Spring 整合 Junit 的测试类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringJUnit4ClassRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ContextConfiguration</span><span class=\"token punctuation\">(</span>classes <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountServiceTestCase</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountService</span> accountService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testFindById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Account</span> ac <span class=\"token operator\">=</span> accountService<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testFindAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Account</span><span class=\"token punctuation\">></span></span> all <span class=\"token operator\">=</span> accountService<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"功能实现\"><a class=\"anchor\" href=\"#功能实现\">#</a> 功能实现</h4>\n<blockquote>\n<p>步骤 1: 开启 SpringAOP 的注解功能</p>\n</blockquote>\n<p>在 Spring 的主配置文件 SpringConfig 类中添加注解</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@EnableAspectJAutoProxy</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 2: 创建 AOP 的通知类</p>\n</blockquote>\n<ul>\n<li>该类要被 Spring 管理，需要添加 @Component</li>\n<li>要标识该类是一个 AOP 的切面类，需要添加 @Aspect</li>\n<li>配置切入点表达式，需要添加一个方法，并添加 @Pointcut</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProjectAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 配置业务层的所有方法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.service.*Service.*(..))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">servicePt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">runSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 3: 添加环绕通知</p>\n</blockquote>\n<p>在 runSpeed () 方法上添加 @Around</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProjectAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 配置业务层的所有方法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.service.*Service.*(..))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">servicePt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">//@Around (\"ProjectAdvice.servicePt ()\") 可以简写为下面的方式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"servicePt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">runSpeed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> pjp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Object</span> ret <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>注意:</strong> 目前并没有做任何增强</p>\n<blockquote>\n<p>步骤 4: 完成核心业务，记录万次执行的时间</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProjectAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 配置业务层的所有方法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.service.*Service.*(..))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">servicePt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">//@Around (\"ProjectAdvice.servicePt ()\") 可以简写为下面的方式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"servicePt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">runSpeed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> pjp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">long</span> start <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>           pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">long</span> end <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"业务层接口万次执行时间: \"</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"ms\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 6: 程序优化</p>\n</blockquote>\n<p>目前程序所面临的问题是，多个方法一起执行测试的时候，控制台都打印的是:<br />\n <code>业务层接口万次执行时间:xxxms</code> <br />\n 我们没有办法区分到底是哪个接口的哪个方法执行的具体时间，具体如何优化？</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProjectAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 配置业务层的所有方法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.service.*Service.*(..))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">servicePt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">//@Around (\"ProjectAdvice.servicePt ()\") 可以简写为下面的方式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"servicePt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">runSpeed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> pjp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 获取执行签名信息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Signature</span> signature <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">getSignature</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 通过签名获取执行操作名称 (接口名)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">String</span> className <span class=\"token operator\">=</span> signature<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaringTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 通过签名获取执行操作名称 (方法名)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">String</span> methodName <span class=\"token operator\">=</span> signature<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">long</span> start <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>           pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">long</span> end <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"万次执行：\"</span><span class=\"token operator\">+</span> className<span class=\"token operator\">+</span><span class=\"token string\">\".\"</span><span class=\"token operator\">+</span>methodName<span class=\"token operator\">+</span><span class=\"token string\">\"---->\"</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"ms\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image-20240314205902098.png\" alt=\"\" /></p>\n<p>tips: 当前测试的接口执行效率仅仅是一个理论值，并不是一次完整的执行过程</p>\n<h3 id=\"aop通知获取数据\"><a class=\"anchor\" href=\"#aop通知获取数据\">#</a> AOP 通知获取数据</h3>\n<p>目前我们写 AOP 仅仅是在原始方法前后追加一些操作，接下来我们要说说 AOP 中数据相关的内容，我们将从 <code>获取参数</code> 、 <code>获取返回值</code> 和 <code>获取异常</code> 三个方面来研究切入点的相关信息。</p>\n<p>前面我们介绍通知类型的时候总共讲了五种，那么对于这五种类型都会有参数，返回值和异常吗？</p>\n<ul>\n<li>\n<p>获取切入点方法的参数，所有的通知类型都可以获取参数</p>\n<ul>\n<li>JoinPoint：适用于前置、后置、返回后、抛出异常后通知</li>\n<li>ProceedingJoinPoint：适用于环绕通知</li>\n</ul>\n</li>\n<li>\n<p>获取切入点方法返回值，前置和抛出异常后通知是没有返回值，后置通知可有可无，所以不做研究</p>\n<ul>\n<li>返回后通知</li>\n<li>环绕通知</li>\n</ul>\n</li>\n<li>\n<p>获取切入点方法运行异常信息，前置和返回后通知是不会有，后置通知可有可无，所以不做研究</p>\n<ul>\n<li>抛出异常后通知</li>\n<li>环绕通知</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"环境准备-4\"><a class=\"anchor\" href=\"#环境准备-4\">#</a> 环境准备</h4>\n<ul>\n<li>\n<p>创建一个 Maven 项目</p>\n</li>\n<li>\n<p>pom.xml 添加 Spring 依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-context<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.aspectj<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>aspectjweaver<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.9.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>添加 BookDao 和 BookDaoImpl 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">findName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">findName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id:\"</span><span class=\"token operator\">+</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>创建 Spring 的配置类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@EnableAspectJAutoProxy</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>编写通知类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.dao.BookDao.findName(..))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Before</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">before</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"before advice ...\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@After</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">after</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"after advice ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">around</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">Object</span> ret <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token annotation punctuation\">@AfterReturning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterReturning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"afterReturning advice ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token annotation punctuation\">@AfterThrowing</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterThrowing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"afterThrowing advice ...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>编写 App 运行类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">BookDao</span> bookDao <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BookDao</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">findName</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"获取参数\"><a class=\"anchor\" href=\"#获取参数\">#</a> 获取参数</h4>\n<h5 id=\"非环绕通知获取方式\"><a class=\"anchor\" href=\"#非环绕通知获取方式\">#</a> 非环绕通知获取方式</h5>\n<p>在方法上添加 JoinPoint, 通过 JoinPoint 来获取参数</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.dao.BookDao.findName(..))\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>​  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Before</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">before</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JoinPoint</span> jp<span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args <span class=\"token operator\">=</span> jp<span class=\"token punctuation\">.</span><span class=\"token function\">getArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"before advice ...\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">//... 其他的略  </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行 App 类，可以获取如下内容，说明参数 100 已经被获取<br />\n<img data-src=\"image-20240314210242378.png\" alt=\"\" /></p>\n<details class=\"info\"><summary>方法的参数只有一个，为什么获取的是一个数组?</summary><div>\n<ul>\n<li>因为参数的个数是不固定的，所以使用数组更通配些</li>\n</ul>\n</div></details>\n<p>使用 JoinPoint 的方式获取参数适用于 <code>前置</code> 、 <code>后置</code> 、 <code>返回后</code> 、 <code>抛出异常后</code> 通知</p>\n<h5 id=\"环绕通知获取方式\"><a class=\"anchor\" href=\"#环绕通知获取方式\">#</a> 环绕通知获取方式</h5>\n<p>环绕通知使用的是 ProceedingJoinPoint，因为 ProceedingJoinPoint 是 JoinPoint 类的子类，所以对于 ProceedingJoinPoint 类中应该也会有对应的 <code>getArgs()</code>  方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.dao.BookDao.findName(..))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">around</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> pjp<span class=\"token punctuation\">)</span><span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">getArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Object</span> ret <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token comment\">// 其他的略</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><span class=\"label danger\">tips:</span> pjp.proceed () 方法是有两个构造方法，分别是:<br />\n<img data-src=\"image-20240314210648634.png\" alt=\"\" /></p>\n<ul>\n<li>调用无参数的 proceed，当原始方法有参数，会在调用的过程中自动传入参数</li>\n<li>所以调用这两个方法的任意一个都可以完成功能</li>\n<li>但是当需要修改原始方法的参数时，就只能采用带有参数的方法，如下</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.dao.BookDao.findName(..))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">around</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> pjp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">getArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">666</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">Object</span> ret <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 其他的略</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>有了这个特性后，我们就可以在环绕通知中对原始方法的参数进行拦截过滤，避免由于参数的问题导致程序无法正确运行，保证代码的健壮性</p>\n<h4 id=\"获取返回值\"><a class=\"anchor\" href=\"#获取返回值\">#</a> 获取返回值</h4>\n<p>对于返回值，只有返回后 <code>AfterReturing</code>  和环绕 <code>Around</code>  这两个通知类型可以获取，具体如何获取？</p>\n<h5 id=\"环绕通知获取返回值\"><a class=\"anchor\" href=\"#环绕通知获取返回值\">#</a> 环绕通知获取返回值</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.dao.BookDao.findName(..))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">around</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> pjp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">getArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">666</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">Object</span> ret <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 其他的略</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上述代码中， <code>ret</code>  就是方法的返回值，我们是可以直接获取，不但可以获取，如果需要还可以进行修改。</p>\n<h5 id=\"返回后通知获取返回值\"><a class=\"anchor\" href=\"#返回后通知获取返回值\">#</a> 返回后通知获取返回值</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.dao.BookDao.findName(..))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@AfterReturning</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">,</span>returning <span class=\"token operator\">=</span> <span class=\"token string\">\"ret\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterReturning</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> ret<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"afterReturning advice ...\"</span><span class=\"token operator\">+</span>ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 其他的略</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"image-20240314210956948.png\" alt=\"\" /><br />\n其中参数类型可以写成 String 等具体的，但是为了能匹配更多的参数类型，建议写成 Object 类型<br />\n<img data-src=\"image-20240314211059578.png\" alt=\"\" /></p>\n<h4 id=\"获取异常\"><a class=\"anchor\" href=\"#获取异常\">#</a> 获取异常</h4>\n<p>对于获取抛出的异常，只有抛出异常后 <code>AfterThrowing</code>  和环绕 <code>Around</code>  这两个通知类型可以获取，具体如何获取？</p>\n<h5 id=\"环绕通知获取异常\"><a class=\"anchor\" href=\"#环绕通知获取异常\">#</a> 环绕通知获取异常</h5>\n<p>这块比较简单，以前我们是抛出异常，现在只需要将异常捕获，就可以获取到原始方法的异常信息了</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.dao.BookDao.findName(..))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">around</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> pjp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">getArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">666</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">Object</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            ret <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> throwable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            t<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token comment\">// 其他的略</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 catch 方法中就可以获取到异常，至于获取到异常以后该如何处理，这个就和你的业务需求有关了。</p>\n<h5 id=\"抛出异常后通知获取异常\"><a class=\"anchor\" href=\"#抛出异常后通知获取异常\">#</a> 抛出异常后通知获取异常</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(* com.itheima.dao.BookDao.findName(..))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@AfterThrowing</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"pt()\"</span><span class=\"token punctuation\">,</span>throwing <span class=\"token operator\">=</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterThrowing</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"afterThrowing advice ...\"</span><span class=\"token operator\">+</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token comment\">// 其他的略</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>同上一小节返回值一样 <code>throwing =</code>  中和形参 <code>Throwable t</code>  名字要保持一致<br />\n如何让原始方法抛出异常，方式有很多，</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">findName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id:\"</span><span class=\"token operator\">+</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NullPointerException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"itcast\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>至此，AOP 通知如何获取数据就已经讲解完了，数据中包含 <code>参数</code> 、 <code>返回值</code> 、 <code>异常(了解)</code></p>\n<h3 id=\"百度网盘密码数据兼容处理案例\"><a class=\"anchor\" href=\"#百度网盘密码数据兼容处理案例\">#</a> 百度网盘密码数据兼容处理案例</h3>\n<p>需求：对百度网盘分享链接输入密码时尾部多输入的空格做兼容处理。<br />\n很多输入都有对尾部空格做处理</p>\n<p>我们只需要在业务方法执行之前对所有的输入参数进行格式处理 ——trim ()</p>\n<ul>\n<li>是对所有的参数都需要去除空格么？<br />\n 也没有必要，一般只需要针对字符串处理即可</li>\n<li>以后涉及到需要去除前后空格的业务可能会有很多，这个去空格的代码是每个业务都写么？<br />\n 可以考虑使用 AOP 来统一处理。</li>\n<li>AOP 有五种通知类型，该使用哪种呢？<br />\n 我们的需求是将原始方法的参数处理后在参与原始方法的调用，能做这件事的就只有环绕通知。</li>\n</ul>\n<h4 id=\"环境准备-5\"><a class=\"anchor\" href=\"#环境准备-5\">#</a> 环境准备</h4>\n<ul>\n<li>\n<p>创建一个 Maven 项目</p>\n</li>\n<li>\n<p>pom.xml 添加 Spring 依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-context<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.aspectj<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>aspectjweaver<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.9.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>添加 ResourcesService，ResourcesServiceImpl,ResourcesDao 和 ResourcesDaoImpl 类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ResourcesDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">boolean</span> <span class=\"token function\">readResources</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ResourcesDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ResourcesDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">readResources</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 模拟校验</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> password<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ResourcesService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">openURL</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url <span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ResourcesServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ResourcesService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ResourcesDao</span> resourcesDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">openURL</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> resourcesDao<span class=\"token punctuation\">.</span><span class=\"token function\">readResources</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>创建 Spring 的配置类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>编写 App 运行类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ApplicationContext</span> ctx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">ResourcesService</span> resourcesService <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResourcesService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> resourcesService<span class=\"token punctuation\">.</span><span class=\"token function\">openURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://pan.baidu.com/haha\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"具体实现\"><a class=\"anchor\" href=\"#具体实现\">#</a> 具体实现</h4>\n<blockquote>\n<p>步骤 1: 开启 SpringAOP 的注解功能</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@EnableAspectJAutoProxy</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 2: 编写通知类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DataAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(boolean com.itheima.service.*Service.*(*,*))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">servicePt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 3: 添加环绕通知</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DataAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(boolean com.itheima.service.*Service.*(*,*))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">servicePt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DataAdvice.servicePt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// @Around (\"servicePt ()\") 这两种写法都对</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">trimStr</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> pjp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Object</span> ret <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 4: 完成核心业务，处理参数中的空格</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@Aspect</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DataAdvice</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Pointcut</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"execution(boolean com.itheima.service.*Service.*(*,*))\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">servicePt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Around</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DataAdvice.servicePt()\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// @Around (\"servicePt ()\") 这两种写法都对</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">trimStr</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ProceedingJoinPoint</span> pjp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 获取原始方法的参数</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">getArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> args<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">// 判断参数是不是字符串</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                args<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 将修改后的参数传入到原始方法的执行中</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">Object</span> ret <span class=\"token operator\">=</span> pjp<span class=\"token punctuation\">.</span><span class=\"token function\">proceed</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 5: 运行程序</p>\n</blockquote>\n<p>不管密码 <code>root</code>  前后是否加空格，最终控制台打印的都是 true</p>\n<blockquote>\n<p>步骤 6: 优化测试</p>\n</blockquote>\n<p>为了能更好的看出 AOP 已经生效，我们可以修改 ResourcesImpl 类，在方法中将密码的长度进行打印</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Repository</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ResourcesDaoImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ResourcesDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">readResources</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 模拟校验</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> password<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>再次运行成功，就可以根据最终打印的长度来看看，字符串的空格有没有被去除掉。</p>\n<h2 id=\"aop总结\"><a class=\"anchor\" href=\"#aop总结\">#</a> AOP 总结</h2>\n<p>简化共性功能的开发</p>\n<h3 id=\"aop的核心概念\"><a class=\"anchor\" href=\"#aop的核心概念\">#</a> AOP 的核心概念</h3>\n<ul>\n<li>概念：AOP (Aspect Oriented Programming) 面向切面编程，一种编程范式</li>\n<li>作用：在不惊动原始设计的基础上为方法进行功能<mark>增强</mark></li>\n<li>核心概念\n<ul>\n<li>代理（Proxy）：SpringAOP 的核心本质是采用代理模式实现的</li>\n<li>连接点（JoinPoint）：在 SpringAOP 中，理解为任意方法的执行</li>\n<li>切入点（Pointcut）：匹配连接点的式子，也是具有共性功能的方法描述</li>\n<li>通知（Advice）：若干个方法的共性功能，在切入点处执行，最终体现为一个方法</li>\n<li>切面（Aspect）：描述通知与切入点的对应关系</li>\n<li>目标对象（Target）：被代理的原始对象成为目标对象</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"52-切入点表达式\"><a class=\"anchor\" href=\"#52-切入点表达式\">#</a> 5.2 切入点表达式</h3>\n<ul>\n<li>切入点表达式标准格式：动作关键字 (访问修饰符 返回值 包名。类 / 接口名。方法名（参数）异常名)<br />\nexecution(* com.itheima.service.<em>Service.</em>(..))</li>\n<li>切入点表达式描述通配符：\n<ul>\n<li>作用：用于快速描述，范围描述</li>\n<li><code>*</code> ：匹配任意符号（常用）</li>\n<li><code>..</code>  ：匹配多个连续的任意符号（常用）</li>\n<li><code>+</code> ：匹配子类类型</li>\n</ul>\n</li>\n<li>切入点表达式书写技巧\n<ol>\n<li>按<mark>标准规范</mark>开发</li>\n<li>查询操作的返回值建议使用 * 匹配</li>\n<li>减少使用.. 的形式描述包</li>\n<li><mark>对接口进行描述</mark>，使用<em>表示模块名，例如 UserService 的匹配描述为</em> Service</li>\n<li>方法名书写保留动词，例如 get，使用<em>表示名词，例如 getById 匹配描述为 getBy</em></li>\n<li>参数根据实际情况灵活调整</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"53-五种通知类型\"><a class=\"anchor\" href=\"#53-五种通知类型\">#</a> 5.3 五种通知类型</h3>\n<ul>\n<li>前置通知</li>\n<li>后置通知</li>\n<li>环绕通知（重点）\n<ul>\n<li>环绕通知依赖形参 ProceedingJoinPoint 才能实现对原始方法的调用</li>\n<li>环绕通知可以隔离原始方法的调用执行</li>\n<li>环绕通知返回值设置为 Object 类型</li>\n<li>环绕通知中可以对原始方法调用过程中出现的异常进行处理</li>\n</ul>\n</li>\n<li>返回后通知</li>\n<li>抛出异常后通知</li>\n</ul>\n<h3 id=\"54-通知中获取参数\"><a class=\"anchor\" href=\"#54-通知中获取参数\">#</a> 5.4 通知中获取参数</h3>\n<ul>\n<li>获取切入点方法的参数，所有的通知类型都可以获取参数\n<ul>\n<li>JoinPoint：适用于前置、后置、返回后、抛出异常后通知</li>\n<li>ProceedingJoinPoint：适用于环绕通知</li>\n</ul>\n</li>\n<li>获取切入点方法返回值，前置和抛出异常后通知是没有返回值，后置通知可有可无，所以不做研究\n<ul>\n<li>返回后通知</li>\n<li>环绕通知</li>\n</ul>\n</li>\n<li>获取切入点方法运行异常信息，前置和返回后通知是不会有，后置通知可有可无，所以不做研究\n<ul>\n<li>抛出异常后通知</li>\n<li>环绕通知</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"spring-事务\"><a class=\"anchor\" href=\"#spring-事务\">#</a> Spring 事务</h1>\n<ul>\n<li>事务作用：在数据层保障一系列的数据库操作同成功同失败</li>\n<li>Spring 事务作用：在数据层或 <strong><mark>业务层</mark></strong> 保障一系列的数据库操作同成功同失败<br />\n Spring 为了管理事务，提供了一个平台事务管理器 <code>PlatformTransactionManager</code> <br />\n<img data-src=\"image-20240315142250869.png\" alt=\"\" /><br />\ncommit 是用来提交事务，rollback 是用来回滚事务。PlatformTransactionManager 只是一个接口，Spring 还为其提供了一个具体的实现:  <code>DataSourceTransactionManager</code> <br />\n 从名称上可以看出，我们只需要给它一个 DataSource 对象，它就可以帮你去在业务层管理事务。其内部采用的是 JDBC 的事务。所以说如果你持久层采用的是 JDBC 相关的技术，就可以采用这个事务管理器来管理你的事务。而 Mybatis 内部采用的就是 JDBC 的事务，所以后期我们 Spring 整合 Mybatis 就采用的这个 DataSourceTransactionManager 事务管理器。</li>\n</ul>\n<h2 id=\"案例\"><a class=\"anchor\" href=\"#案例\">#</a> 案例</h2>\n<p>需求：实现任意两个账户间转账操作<br />\n需求微缩: A 账户减钱，B 账户加钱<br />\n为了实现上述的业务需求，我们可以按照下面步骤来实现下:</p>\n<ol>\n<li>数据层提供基础操作，指定账户减钱（outMoney），指定账户加钱（inMoney）</li>\n<li>业务层提供转账操作（transfer），调用减钱与加钱的操作</li>\n<li>提供 2 个账号和操作金额执行转账操作</li>\n<li>基于 Spring 整合 MyBatis 环境搭建上述操作</li>\n</ol>\n<h3 id=\"环境搭建\"><a class=\"anchor\" href=\"#环境搭建\">#</a> 环境搭建</h3>\n<blockquote>\n<p>步骤 1: 准备数据库表</p>\n</blockquote>\n<p>之前我们在整合 Mybatis 的时候已经创建了这个表，可以直接使用</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> spring_db <span class=\"token keyword\">character</span> <span class=\"token keyword\">set</span> utf8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">use</span> spring_db<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tbl_account<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    id <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">35</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    money <span class=\"token keyword\">double</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tbl_account <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Tom'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tbl_account <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Jerry'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 2: 创建项目导入 jar 包</p>\n</blockquote>\n<p>项目的 pom.xml 添加相关依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-context<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.alibaba<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>druid<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.1.16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>mysql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mysql-connector-java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.1.47<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-jdbc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-spring<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.3.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.2.10.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>步骤 3: 根据表创建模型类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Account</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">//setter...getter...toString... 方法略    </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 4: 创建 Dao 接口</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Update</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update tbl_account set money = money + #&#123;money&#125; where name = #&#123;name&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">inMoney</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"money\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Update</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update tbl_account set money = money - #&#123;money&#125; where name = #&#123;name&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">outMoney</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"money\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 5: 创建 Service 接口和实现类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token doc-comment comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * 转账操作</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">out</span> 传出方</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">in</span> 转入方</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">money</span> 金额</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in <span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountDao</span> accountDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in <span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">outMoney</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">inMoney</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 6: 添加 jdbc.properties 文件</p>\n</blockquote>\n<figure class=\"highlight properties\"><figcaption data-lang=\".properties\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">jdbc.driver</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">com.mysql.jdbc.Driver</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">jdbc.url</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">jdbc:mysql://localhost:3306/spring_db?useSSL=false</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key attr-name\">jdbc.username</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">jdbc.password</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">root</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 7: 创建 JdbcConfig 配置类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JdbcConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.driver&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> driver<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.url&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.username&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.password&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">DruidDataSource</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 8: 创建 MybatisConfig 配置类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MybatisConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SqlSessionFactoryBean</span> <span class=\"token function\">sqlSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">SqlSessionFactoryBean</span> ssfb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        ssfb<span class=\"token punctuation\">.</span><span class=\"token function\">setTypeAliasesPackage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima.domain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        ssfb<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> ssfb<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MapperScannerConfigurer</span> <span class=\"token function\">mapperScannerConfigurer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">MapperScannerConfigurer</span> msc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MapperScannerConfigurer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        msc<span class=\"token punctuation\">.</span><span class=\"token function\">setBasePackage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima.dao\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> msc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 9: 创建 SpringConfig 配置类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:jdbc.properties\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">JdbcConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">MybatisConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 10: 编写测试类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringJUnit4ClassRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ContextConfiguration</span><span class=\"token punctuation\">(</span>classes <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountServiceTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountService</span> accountService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testTransfer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        accountService<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Jerry\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">100D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上述环境，运行单元测试类，会执行转账操作， <code>Tom</code>  的账户会减少 100， <code>Jerry</code>  的账户会加 100。<br />\n这是正常情况下的运行结果，但是如果在转账的过程中出现了异常，如:</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountDao</span> accountDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in <span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">outMoney</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">inMoney</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>对于一个整体性但分为多步骤的业务，可能会：</p>\n<ol>\n<li>程序正常执行时，账户金额 A 减 B 加，没有问题</li>\n<li>程序出现异常后，转账失败，但是异常之前操作成功，异常之后操作失败，整体业务失败</li>\n</ol>\n<h3 id=\"具体实现-2\"><a class=\"anchor\" href=\"#具体实现-2\">#</a> 具体实现</h3>\n<blockquote>\n<p>步骤 1: 在需要被事务管理的方法上添加注解</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token doc-comment comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * 转账操作</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">out</span> 传出方</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">in</span> 转入方</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">money</span> 金额</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 配置当前接口方法具有事务</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in <span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountDao</span> accountDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Transactional</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in <span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">outMoney</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">inMoney</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><mark>注意:</mark></p>\n<p>@Transactional 可以写在接口类上、接口方法上、实现类上和实现类方法上</p>\n<ul>\n<li>写在接口类上，该接口的所有实现类的所有方法都会有事务</li>\n<li>写在接口方法上，该接口的所有实现类的该方法都会有事务</li>\n<li>写在实现类上，该类中的所有方法都会有事务</li>\n<li>写在实现类方法上，该方法上有事务<br />\n建议在接口上，避免耦合</li>\n</ul>\n<blockquote>\n<p>步骤 2: 在 JdbcConfig 类中配置事务管理器</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JdbcConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.driver&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> driver<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.url&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.username&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;jdbc.password&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">dataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">DruidDataSource</span> ds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setDriverClassName</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>userName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        ds<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> ds<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 配置事务管理器，mybatis 使用的是 jdbc 事务</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PlatformTransactionManager</span> <span class=\"token function\">transactionManager</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">DataSourceTransactionManager</span> transactionManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSourceTransactionManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        transactionManager<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> transactionManager<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>[注意].label .warning} ：事务管理器要根据使用技术进行选择，Mybatis 框架使用的是 JDBC 事务，可以直接使用 <code>DataSourceTransactionManager</code>  不同框架更改这个。同时形参中用 bean 的方式调用，而非 <code>setDataSource(dataSource())</code></p>\n<blockquote>\n<p>步骤 3：开启事务注解</p>\n</blockquote>\n<p>在 SpringConfig 的配置类中开启</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.itheima\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:jdbc.properties\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">JdbcConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">MybatisConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 开启注解式事务驱动</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@EnableTransactionManagement</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 4: 运行测试类</p>\n</blockquote>\n<p>会发现在转换的业务出现错误后，事务就可以控制回顾，保证数据的正确性。开了后中间有异常就会都不执行。会同成功同失败</p>\n<ol>\n<li>config 上开注解</li>\n<li>接口 / 实现类 / 方法上开注解</li>\n<li>增加事务管理器</li>\n</ol>\n<h2 id=\"事务角色\"><a class=\"anchor\" href=\"#事务角色\">#</a> 事务角色</h2>\n<p>SqlSessionFactoryBean 本身单独语句会开一个事务，加入不开 spring 事务，则 int、out 是独立事务。开启后：<br />\n<img data-src=\"image-20240315145002885.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p>transfer 上添加了 @Transactional 注解，在该方法上就会有一个事务 T</p>\n</li>\n<li>\n<p>AccountDao 的 outMoney 方法的事务 T1 加入到 transfer 的事务 T 中</p>\n</li>\n<li>\n<p>AccountDao 的 inMoney 方法的事务 T2 加入到 transfer 的事务 T 中</p>\n</li>\n<li>\n<p>这样就保证他们在同一个事务中，当业务层中出现异常，整个事务就会回滚，保证数据的准确性。</p>\n</li>\n<li>\n<p>事务管理员：发起事务方，在 Spring 中通常指代业务层开启事务的方法</p>\n</li>\n<li>\n<p>事务协调员：加入事务方，在 Spring 中通常指代数据层方法，也可以是业务层方法</p>\n</li>\n</ul>\n<p>注意 {.label .warning} : 目前的事务管理是基于 <code>DataSourceTransactionManager</code>  和 <code>SqlSessionFactoryBean</code>  使用的是同一个数据源。</p>\n<h2 id=\"事务属性\"><a class=\"anchor\" href=\"#事务属性\">#</a> 事务属性</h2>\n<p>三部分内容 <code>事务配置</code> 、 <code>转账业务追加日志</code> 、 <code>事务传播行为</code> 。</p>\n<h3 id=\"事务配置\"><a class=\"anchor\" href=\"#事务配置\">#</a> 事务配置</h3>\n<p><img data-src=\"image-20240315145337500.png\" alt=\"\" /></p>\n<p>上面这些属性都可以在 <code>@Transactional</code>  注解的参数上进行设置。</p>\n<ul>\n<li>\n<p>readOnly：true 只读事务，false 读写事务，增删改要设为 false, 查询设为 true。</p>\n</li>\n<li>\n<p>timeout: 设置超时时间单位秒，在多长时间之内事务没有提交成功就自动回滚，-1 表示不设置超时时间。</p>\n</li>\n<li>\n<p>rollbackFor: 当出现指定异常进行事务回滚</p>\n</li>\n<li>\n<p>noRollbackFor: 当出现指定异常不进行事务回滚</p>\n<ul>\n<li>思考：出现异常事务会自动回滚，这个是我们之前就已经知道的</li>\n<li>noRollbackFor 是设定对于指定的异常不回滚，这个好理解</li>\n<li>rollbackFor 是指定回滚异常，对于异常事务不应该都回滚么，为什么还要指定？\n<ul>\n<li>\n<p>这块需要更正一个知识点，并不是所有的异常都会回滚事务，比如下面的代码就不会回滚</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token doc-comment comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * 转账操作</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">out</span> 传出方</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">in</span> 转入方</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">money</span> 金额</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 配置当前接口方法具有事务</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in <span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountDao</span> accountDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Transactional</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in <span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">outMoney</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">//int i = 1/0; // 这个异常事务会回滚</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 这个异常事务就不会回滚</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">inMoney</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>出现这个问题的原因是，Spring 的事务只会对 <code>Error异常</code> 和 <code>RuntimeException异常</code> 及其子类进行事务回顾，其他的异常类型是不会回滚的，对应 IOException 不符合上述条件所以不回滚</p>\n<ul>\n<li>此时就可以使用 rollbackFor 属性来设置出现 IOException 异常不回滚<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountDao</span> accountDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t <span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>rollbackFor <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in <span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">outMoney</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">//int i = 1/0; // 这个异常事务会回滚</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 这个异常事务就不会回滚</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">inMoney</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>rollbackForClassName 等同于 rollbackFor, 只不过属性为异常的类全名字符串</p>\n</li>\n<li>\n<p>noRollbackForClassName 等同于 noRollbackFor，只不过属性为异常的类全名字符串</p>\n</li>\n<li>\n<p>isolation 设置事务的隔离级别</p>\n<ul>\n<li>DEFAULT   : 默认隔离级别，会采用数据库的隔离级别</li>\n<li>READ_UNCOMMITTED : 读未提交</li>\n<li>READ_COMMITTED : 读已提交</li>\n<li>REPEATABLE_READ : 重复读取</li>\n<li>SERIALIZABLE: 串行化</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"进阶案例\"><a class=\"anchor\" href=\"#进阶案例\">#</a> 进阶案例</h2>\n<p>在前面的转案例的基础上添加新的需求，完成转账后记录日志。</p>\n<ul>\n<li>需求：实现任意两个账户间转账操作，并对每次转账操作在数据库进行留痕</li>\n<li>需求微缩：A 账户减钱，B 账户加钱，数据库记录日志</li>\n</ul>\n<p>基于上述的业务需求，我们来分析下该如何实现:</p>\n<ol>\n<li>基于转账操作案例添加日志模块，实现数据库中记录日志</li>\n<li>业务层转账操作（transfer），调用减钱、加钱与记录日志功能</li>\n</ol>\n<p>需要注意一点就是，我们这个案例的预期效果为:<mark> 无论转账操作是否成功，均进行转账操作的日志留痕</mark></p>\n<h3 id=\"环境准备-6\"><a class=\"anchor\" href=\"#环境准备-6\">#</a> 环境准备</h3>\n<p>该环境是基于转账环境来完成的，所以环境的准备可以参考 <code>6.1.3的环境搭建步骤</code> ，在其基础上，我们继续往下写</p>\n<blockquote>\n<p>步骤 1: 创建日志表</p>\n</blockquote>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tbl_log<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   id <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   info <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   createDate <span class=\"token keyword\">datetime</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 2: 添加 LogDao 接口</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">LogDao</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Insert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"insert into tbl_log (info,createDate) values(#&#123;info&#125;,now())\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 3: 添加 LogService 接口与实现类</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">LogService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> in<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">LogService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LogDao</span> logDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Transactional</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in<span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        logDao<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"转账操作由\"</span><span class=\"token operator\">+</span>out<span class=\"token operator\">+</span><span class=\"token string\">\"到\"</span><span class=\"token operator\">+</span>in<span class=\"token operator\">+</span><span class=\"token string\">\",金额：\"</span><span class=\"token operator\">+</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>步骤 4: 在转账的业务中添加记录日志</p>\n</blockquote>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token doc-comment comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * 转账操作</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">out</span> 传出方</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">in</span> 转入方</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">money</span> 金额</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 配置当前接口方法具有事务</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in <span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span><span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AccountService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AccountDao</span> accountDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LogService</span> logService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Transactional</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in <span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">outMoney</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            accountDao<span class=\"token punctuation\">.</span><span class=\"token function\">inMoney</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            logService<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span>in<span class=\"token punctuation\">,</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>当程序正常运行，tbl_account 表中转账成功，tbl_log 表中日志记录成功</li>\n<li>当转账业务之间出现异常 (int i =1/0), 转账失败，tbl_account 成功回滚，但是 tbl_log 表未添加数据</li>\n<li>这个结果和我们想要的不一样，什么原因？该如何解决？</li>\n<li>失败原因：日志的记录与转账操作隶属同一个事务，同成功同失败</li>\n<li>最终效果：无论转账操作是否成功，日志必须保留</li>\n</ul>\n<p>原因分析：</p>\n<ul>\n<li>log 方法、inMoney 方法和 outMoney 方法都属于增删改，分别有事务 T1,T2,T3</li>\n<li>transfer 因为加了 @Transactional 注解，也开启了事务 T</li>\n<li>前面我们讲过 Spring 事务会把 T1,T2,T3 都加入到事务 T 中</li>\n<li>所以当转账失败后，所有的事务都回滚，导致日志没有记录下来</li>\n<li>这和我们的需求不符，这个时候我们就想能不能让 log 方法单独是一个事务呢？</li>\n</ul>\n<p>要想解决这个问题，就需要用到事务传播行为</p>\n<h3 id=\"事务传播行为\"><a class=\"anchor\" href=\"#事务传播行为\">#</a> 事务传播行为</h3>\n<p>所谓的事务传播行为指的是：事务协调员对事务管理员所携带事务的处理态度</p>\n<p>就需要用到<a href=\"#%E4%BA%8B%E5%8A%A1%E5%B1%9E%E6%80%A7\">事务属性</a>没有说的 <code>propagation属性</code> ，修改 logService 改变事务的传播行为</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LogServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">LogService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">LogDao</span> logDao<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token comment\">//propagation 设置事务属性：传播行为设置为当前操作需要新事务</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>propagation <span class=\"token operator\">=</span> <span class=\"token class-name\">Propagation</span><span class=\"token punctuation\">.</span><span class=\"token constant\">REQUIRES_NEW</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> out<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> in<span class=\"token punctuation\">,</span><span class=\"token class-name\">Double</span> money <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        logDao<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"转账操作由\"</span><span class=\"token operator\">+</span>out<span class=\"token operator\">+</span><span class=\"token string\">\"到\"</span><span class=\"token operator\">+</span>in<span class=\"token operator\">+</span><span class=\"token string\">\",金额：\"</span><span class=\"token operator\">+</span>money<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行后，就能实现我们想要的结果，不管转账是否成功，都会记录日志。</p>\n<p>事务传播行为的可选值:<br />\n<img data-src=\"image-20240315150854162.png\" alt=\"\" /><br />\n 对于我们开发实际中使用的话，因为默认值需要事务是常态的。根据开发过程选择其他的就可以了，例如案例中需要新事务就需要手工配置。其实入账和出账操作上也有事务，采用的就是默认值。</p>\n<p>至此，spring 的基本内容就都过了一遍：<a href=\"#IOC/DI%E6%B3%A8%E8%A7%A3%E5%BC%80%E5%8F%91\">IOC/DI</a>、<a href=\"#AOP\">AOP</a>、<a href=\"#%E6%A1%88%E4%BE%8B\">事务处理</a></p>\n",
            "tags": [
                "spring复习",
                "JAVA"
            ]
        },
        {
            "id": "https://zyakmd.github.io/2024/03/09/hexo%E4%BD%BF%E7%94%A8/%E7%95%8C%E9%9D%A2%E7%9B%B8%E5%85%B3/",
            "url": "https://zyakmd.github.io/2024/03/09/hexo%E4%BD%BF%E7%94%A8/%E7%95%8C%E9%9D%A2%E7%9B%B8%E5%85%B3/",
            "title": "界面相关",
            "date_published": "2024-03-09T05:15:17.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5Lw==\">Step.3 界面显示 - Theme Shoka Documentation - 二进制杂谈 - 计算机科学 | Yume Shoka = 優萌初華 = 有夢書架 (lostyu.me)</span></p>\n<h1 id=\"首页置顶文章\"><a class=\"anchor\" href=\"#首页置顶文章\">#</a> 首页置顶文章</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 置顶文章</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">sticky</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><h1 id=\"文章封面图\"><a class=\"anchor\" href=\"#文章封面图\">#</a> 文章封面图</h1>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Images</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> assets/wallpaper<span class=\"token punctuation\">-</span>2572384.jpg</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 或者写成</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">cover</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//placehold.it/350x150.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>这里 cover 的值可以是位于 source 目录里的图片文件，此处是 /source/assets/wallpaper-2572384.jpg 文件，也可以是一个某网址。</p>\n<p>如果文章是一个 gallery post ，即 Front Matter 设置了 photos ，则会封面会显示设置的第一张图片。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Gallery Post </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">photos</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>2572384.jpg </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>2311325.jpg </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">-</span> assets/wallpaper<span class=\"token punctuation\">-</span>878514.jpg </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">-</span> http<span class=\"token punctuation\">:</span>//placehold.it/350x150.jpg </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>此时默认会显示第一个图片，即位于 /source/assets/ 目录里的 wallpaper-2572384.jpg 。<br />\n如果站点配置中设置了 post_asset_folder: true ，那么上述本地图片路径应为 /source/_posts/ 文章同名的文件夹 /assets/wallpaper-2572384.jpg ，当然此时 assets 目录可以省掉。</p>\n<h1 id=\"修改加载动画\"><a class=\"anchor\" href=\"#修改加载动画\">#</a> 修改加载动画</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWFua3ljaGVuLmdpdGh1Yi5pby9wb3N0cy9jNjFiOWE2MC8=\">参考</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly91aXZlcnNlLmlvL2xvYWRlcnM=\">资源网站 uiverse</span><br />\n 主要是修改 loading.styl 中的 css 内容，再在 layout.njk 中更改相应的 html 内容</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly91aXZlcnNlLmlvL05hd3NvbWUvY293YXJkbHktc3F1aWQtNTA=\">mark，回头试试</span></p>\n<h1 id=\"音乐播放\"><a class=\"anchor\" href=\"#音乐播放\">#</a> 音乐播放</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9mMTAwNWFlMDllNWE=\">单个文章内添加歌曲</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb2MtY2FtZXJhLmdpdGh1Yi5pby9oZXhvL3Nob2thJUU0JUI4JUJCJUU5JUEyJTk4JUU5JTg1JThEJUU3JUJEJUFFJUU5JTlGJUIzJUU0JUI5JTkwJUU2JTkyJUFEJUU2JTk0JUJFJUU1JTk5JUE4Lw==\">参考</span><br />\n或者 Front Matter 中</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">audio</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//music.163.com/song<span class=\"token punctuation\">?</span>id=1387098940</pre></td></tr></table></figure><h1 id=\"修改切换标签时更换标题\"><a class=\"anchor\" href=\"#修改切换标签时更换标题\">#</a> 修改切换标签时更换标题</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qaWFua3ljaGVuLmdpdGh1Yi5pby9wb3N0cy9jNjFiOWE2MC8=\">详细的</span><br />\n或者<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYXp1a2kubW9lL2hleG8vVGhlbWUuU2hva2EvMDFfU2hva2Ev\">简单</span> 修改 <code>themes/shoka/source/js/_app/global.js</code>  中  <code>visibilityListener</code></p>\n<h1 id=\"更改图床\"><a class=\"anchor\" href=\"#更改图床\">#</a> 更改图床</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly91aTEyMzQ1NmF4LmdpdGh1Yi5pby8yMDIzLzA2LzIzLzAyX1Nob2thJUU1JTlCJUJFJUU1JUJBJThBJUU0JUJGJUFFJUU1JUE0JThELw==\">详细</span><br />\n根本 js 在  <code>\\themes\\shoka\\scripts\\helpers\\engine.js</code>  中的  <code>parseImage</code></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">parseImage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img<span class=\"token punctuation\">,</span> size</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'//'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> img<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword control-flow\">return</span> img</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword control-flow\">return</span> <span class=\"token string\">'https://tva'</span><span class=\"token operator\">+</span>randomServer<span class=\"token operator\">+</span><span class=\"token string\">'.sinaimg.cn/'</span><span class=\"token operator\">+</span>size<span class=\"token operator\">+</span><span class=\"token string\">'/'</span><span class=\"token operator\">+</span>img <span class=\"token comment\">// 替换成自己 Github 图床前链</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>换成本地要自行添加条件满足直接返回<br />\n更换图床则是 else 中的地址</p>\n<pre><code>注意：本地上传到github后虽然是静态资源但需要CDN加速（免费的有：jsdelivr/CloudFlare/腾讯云/百度云），不然要魔法才行\n</code></pre>\n<p>api 的话在 theme 的_config.yaml 中 image_server，如:<br />\n <code>image_server: https://acg.xydwz.cn/api/api.php</code> <br />\n 有些 api 不是 php 结尾也一样<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYW5zdWFueGwuY29tLzIwMjMvMDcvMTEvc2hva2EvJUU0JUJGJUFFJUU2JTk0JUI5JUU4JTg3JUFBJUU1JUFFJTlBJUU0JUI5JTg5JUU4JTgzJThDJUU2JTk5JUFGLw==\">更改背景图</span></p>\n<h1 id=\"添加看板\"><a class=\"anchor\" href=\"#添加看板\">#</a> 添加看板</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zYTYzNDJlMTZlNTc=\">参考</span></p>\n<h1 id=\"扩展显示\"><a class=\"anchor\" href=\"#扩展显示\">#</a> 扩展显示</h1>\n<p>如：隐藏文字，提醒块，折叠快等等<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9zcGVjaWFsLw==\">看这里</span></p>\n<h2 id=\"label标签快\"><a class=\"anchor\" href=\"#label标签快\">#</a> label 标签快</h2>\n<figure class=\"highlight md\"><figcaption data-lang=\"Markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[default]&#123;.label&#125; </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>[primary]&#123;.label .primary&#125; </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>[info]&#123;.label .info&#125; </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>[:heavy_check_mark:success]&#123;.label .success&#125; </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>[warning]&#123;.label .warning&#125; </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>[:broken_heart:danger]&#123;.label .danger&#125;</pre></td></tr></table></figure><p><span class=\"label\">default</span><br />\n<span class=\"label primary\">primary</span><br />\n<span class=\"label info\">info</span><br />\n<span class=\"label success\">✔️success</span><br />\n<span class=\"label warning\">warning</span><br />\n<span class=\"label danger\">💔danger</span></p>\n<h2 id=\"标签卡\"><a class=\"anchor\" href=\"#标签卡\">#</a> 标签卡</h2>\n<pre><code>;;;&lt;id&gt; &lt;名称&gt;\n;;;\n</code></pre>\n<div class=\"tab\" data-id=\"1\" data-title=\"同一标签id\">\n<p>里面放什么</p>\n</div>\n<div class=\"tab\" data-id=\"1\" data-title=\"就会匹配在一起\">\n<p>都可以，如代码块并行</p>\n</div>\n<h2 id=\"折叠块\"><a class=\"anchor\" href=\"#折叠块\">#</a> 折叠块</h2>\n<p>基于 markdown-it-container</p>\n<figure class=\"highlight md\"><figcaption data-lang=\"Markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>+++ 默认默认 这里是一段文字</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>++ 下划线 ++</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>+++primary 紫色</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>:::info</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>参考信息</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token list punctuation\">-</span> 第一行</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token list punctuation\">-</span> 第二行</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>+++info  蓝色</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>;;;id3 卡片 1</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>这里是卡片 1 的内容</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>;;;id3 卡片 2</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>这里是卡片 2 的内容</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>;;;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>+++success 绿色</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"><div class=\"links\"><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div></div></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>+++warning 黄色</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>!! 警告警告警告警告警告！！&#123;.bulr&#125;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>[label]&#123;.label .success&#125;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>+++</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>+++danger 红色</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>[danger]&#123;.label .danger&#125;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>+++</pre></td></tr></table></figure><details><summary>默认默认 这里是一段文字</summary><div>\n<p>++ 下划线 ++</p>\n</div></details>\n<details class=\"primary\"><summary>紫色</summary><div>\n<div class=\"note info\">\n<p>参考信息</p>\n</div>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n</div></details>\n<details class=\"info\"><summary>蓝色</summary><div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片 1\">\n<p>这里是卡片 1 的内容</p>\n</div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片 2\">\n<p>这里是卡片 2 的内容</p>\n</div>\n</div></details>\n<details class=\"success\"><summary>绿色</summary><div>\n<p><div class=\"links\"><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div></div></p>\n</div></details>\n<details class=\"warning\"><summary>黄色</summary><div>\n<p>!! 警告警告警告警告警告！！{.bulr}<br />\n<span class=\"label success\">label</span></p>\n</div></details>\n<details class=\"danger\"><summary>红色</summary><div>\n<p><span class=\"label danger\">danger</span></p>\n</div></details>\n",
            "tags": [
                "hexo使用",
                "Hexo"
            ]
        },
        {
            "id": "https://zyakmd.github.io/2024/03/07/hexo%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%AB%99%E6%A0%B7%E5%BC%8F/",
            "url": "https://zyakmd.github.io/2024/03/07/hexo%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%AB%99%E6%A0%B7%E5%BC%8F/",
            "title": "网站样式",
            "date_published": "2024-03-07T12:49:38.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\">shoka</span> 样式，交互爽，好看又不乱（该关的还是得关，页面动画看多了腻），老早就馋了。</p>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<p><code>git clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</code></p>\n<h1 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h1>\n<ol>\n<li>卸载掉默认的  <code>hexo-renderer-marked</code>  (有默认的路径处理，不行就回退)\n<ul>\n<li><code>npm un hexo-renderer-marked --save</code></li>\n<li><img data-src=\"image-20240307211424587.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>安装  <code>npm i hexo-renderer-multi-markdown-it --save</code>\n<ul>\n<li>遇到 Error: read ECONNRESET，网上是： <code>npm config set registry http://registry.npmjs.org/</code>  更新代理</li>\n<li>后细读发现是 puppeteer 安装问题，原文有提及，不使用 mermaid，加上 --ignore-scripts 忽略即可</li>\n</ul>\n</li>\n<li>按原文<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kZXBlbmRlbnRzLw==\">依赖插件</span>安装插件，并且添加 / 更改相应的 yaml 配置</li>\n<li>theme: shoka # 默认：landscape<br />\n<img data-src=\"image-20240307214022436.png\" alt=\"\" /></li>\n</ol>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9waWdwaWdsZXRzZ28uZ2l0aHViLmlvL2hleG8vc2hva2EvJUU5JTg1JThEJUU3JUJEJUFFc2hva2ElRTQlQjglQkIlRTklQTIlOTgv\">https://pigpigletsgo.github.io/hexo/shoka/ 配置 shoka 主题 /</span></p>\n<p>遇到了渲染错乱，c、g、s 都没问题，但网页显示一坨。<br />\n查到有说法是 js-yaml 版本不对，结果一看我都没这个，添加后好了<br />\n npm install js-yaml@3.14.1<br />\n 还包括 package.json 的替换</p>\n<h1 id=\"基本配置\"><a class=\"anchor\" href=\"#基本配置\">#</a> 基本配置</h1>\n<p>包含哪些插件和设置见：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcv\">基本配置</span><br />\n唯一要注意的文中推荐 theme 下自定义_config.[theme].yml 配置文件<br />\n官网也说：Hexo 在合并主题配置时，Hexo 配置文件中的 theme_config 的优先级最高，其次是_config.[theme].yml 文件，最后是位于主题目录下的_config.yml. 然而_config.[theme].</p>\n<p>然而 theme 下_config.[theme].yml 并没有覆盖_config.yml。最终还是都写在了_config.yml 中</p>\n<h1 id=\"界面配置\"><a class=\"anchor\" href=\"#界面配置\">#</a> 界面配置</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcv\">界面设置</span></p>\n<h1 id=\"搜索功能\"><a class=\"anchor\" href=\"#搜索功能\">#</a> 搜索功能</h1>\n<p>按默认的</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Algolia Search 搜索功能</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># For more information: https://www.algolia.com</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">search</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  hits<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    per_page<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span></pre></td></tr></table></figure><p>还需要注册 algolia（mark：我用 GitHub 注册的）并配置相关设置（algolia 提供给个人用户上限 1 万条索引记录和每月 1 万次的搜索次数）<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1MTczNDA0L2FydGljbGUvZGV0YWlscy8xMjI4NjEzMjE=\">配置参考</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xOTM0MjE5\">参考</span></p>\n<p>更新： <code>hexo algolia</code> <br />\n 如下图就是成功了<br />\n<img data-src=\"image-20240308194948129.png\" alt=\"\" /></p>\n<p><img data-src=\"image-20240308195058606.png\" alt=\"\" /></p>\n<h1 id=\"站内跳转\"><a class=\"anchor\" href=\"#站内跳转\">#</a> 站内跳转</h1>\n<p>官方有标签插件实现站内文章链接，如下：<br />\n <code>&#123;% post_link 'hexo blog' %&#125;</code> <br />\n 样例： <code>&#123;% post_link hexo使用/在obisidian上使用 '在obisidian上使用' %&#125;</code>  要用相对路径<br />\n这儿优先使用文章 Front-matter 中的 <code>permalink</code>  字段，如果没有  <code>permalink</code>  ，则使用  <code>文件名字</code> ！</p>\n<p>官方文档还有一个  <code>post_path</code>  ，用于获取文章路径，结合 markdown 内置的链接方式，即可实现锚点超链接，如下：（这个一直没成，站内就用 post_link 了，外链用 <code>[]()</code> ）<br />\n <code>[hexo 安装](&#123;% post_path 'hexo blog' %&#125;#安装)</code></p>\n<p>也可以使用 html a 标签实现，如下：<br />\n <code>&lt;a href=&quot;&#123;% post_path 'hexo blog' %&#125;#安装&quot;&gt;hexo 安装&lt;/a&gt;</code></p>\n<p>页内标题跳转<br />\n <code>[](#标题名)</code> <br />\n 样例：<a href=\"#%E7%8E%AF%E5%A2%83\">环境</a>  ，实现 md <code>[环境](#环境)</code></p>\n<h1 id=\"评论\"><a class=\"anchor\" href=\"#评论\">#</a> 评论</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly92YWxpbmUuanMub3JnL3F1aWNrc3RhcnQuaHRtbA==\">Valine</span></p>\n<h1 id=\"图库\"><a class=\"anchor\" href=\"#图库\">#</a> 图库</h1>\n<p>说是：/themes/shoka/_images.yml  会被 /source/_data/images.yml 代替 (至少要有六个覆盖默认的列表) 。发现也并没，也可能是我的链接未生效，再看 ing</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmppeGlhb2IuY24vP3Bvc3Q9OTM=\">随机图床集合</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly90Lm13bS5tb2Uv\">随机二次元图床</span></p>\n<h1 id=\"补充\"><a class=\"anchor\" href=\"#补充\">#</a> 补充</h1>\n<p>记录找到的使用 shoka 的各类问题 &amp; 解决方法 &amp; 功能扩展</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmV2ZXJzZXNhY2xlLmNvbS9zdXBwbGVtZW50LWZvci1zaG9rYS10aGVtZS8=\">1</span></p>\n",
            "tags": [
                "hexo使用",
                "Hexo"
            ]
        },
        {
            "id": "https://zyakmd.github.io/2024/03/07/hexo%E4%BD%BF%E7%94%A8/%E5%9C%A8obisidian%E4%B8%8A%E4%BD%BF%E7%94%A8/",
            "url": "https://zyakmd.github.io/2024/03/07/hexo%E4%BD%BF%E7%94%A8/%E5%9C%A8obisidian%E4%B8%8A%E4%BD%BF%E7%94%A8/",
            "title": "在obisidian上使用",
            "date_published": "2024-03-07T08:44:47.000Z",
            "content_html": "<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NTQzMzM4MDU=\">Obsidian+Git 完美维护 Hexo 博客 - 知乎</span></p>\n<h1 id=\"模板\"><a class=\"anchor\" href=\"#模板\">#</a> 模板</h1>\n<p>用 hexo 命令创建会自带文档属性，用 obisidian 就是空白文档，但可以写个模板，直接插入，也不费多少事，免得还要去根目录开 bash。</p>\n<p>创建一个模板文件夹如 Template，创建模板文件：<br />\n编辑源码模式下，输入以下。title 就是文章名，date 在 obisidian 设置中自定义的日期</p>\n<figure class=\"highlight md\"><figcaption data-lang=\"Markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token front-matter yaml language-yaml\">title: 在obisidian上使用</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>date: 1709801087000</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>categories: </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>tags:</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">---</span></span></pre></td></tr></table></figure><p><img data-src=\"a.png\" alt=\"\" /></p>\n<h1 id=\"目录维护\"><a class=\"anchor\" href=\"#目录维护\">#</a> 目录维护</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MTIwMTg5NjE0NjYwMjU1Nzgx\">Hexo + Obsidian + Git 完美的博客部署与编辑方案 - 掘金</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmVzb24ub3JnL3B1Yi9lMmY2ZTIzOS8=\">【Hexo 插件系列】日志的自动分类插件 hexo-auto-category | ESON</span></p>\n<p>使用 <code>hexo-auto-category</code>  根据文件目录自动生成 categories 信息。<br />\n对于博客  <code>source/_post/web/framework/hexo.md</code> ，该插件会自动生成以下 <code>categories</code></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> web  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">-</span> framework</pre></td></tr></table></figure><p>安装： <code>npm install hexo-auto-category --save</code> <br />\n 在  _config.yml 中添加</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Generate categories from directory-tree</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Dependencies: https://github.com/xu-song/hexo-auto-category</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># depth: the depth of directory-tree you want to generate, should > 0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">auto_category</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> depth<span class=\"token punctuation\">:</span></pre></td></tr></table></figure><p>如果只想生成第一级目录分类，可以设置 <code>depth</code>  属性为 1，以此内推。</p>\n<h1 id=\"图片\"><a class=\"anchor\" href=\"#图片\">#</a> 图片</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyMzU3MjE3L2FydGljbGUvZGV0YWlscy8xMjc1NjIxNjM=\"># 如何让 Obsidian 的图片存储形式设置为 ./${filename}.assets</span><br />\n 头大的是这个，在上一篇文章中已经用了插件，相比自己手动更改 html 中的路径方便，但平时截图命名是用时间，待数字，其次 obsidian 默认存放位置固定，还需要手动移动文件和写引用。</p>\n<h2 id=\"位置\"><a class=\"anchor\" href=\"#位置\">#</a> 位置</h2>\n<ol>\n<li>关闭  <code>使用 Wiki 链接</code></li>\n<li>使用插件 Custom Attachment Location（里面还有自动为粘贴的图像重命名的功能）</li>\n<li filename=\"\">在↑设置中的 Location xx：./$</li>\n<li>设置 “文件与链接” 中附件选 “当前文件所在文件夹的子文件夹”，然后留空（由上面的插件自动填入了）</li>\n<li>设置 “文件与链接” 中内部链接类型选 “尽可能短的方式”</li>\n</ol>\n<p>Q：好像不支持中文，那就跟目录维护的冲突了，无法起中文名文件夹。不用 CATEGORIES，自行管理 categories？<br />\nA：但好像可以</p>\n<h2 id=\"路径\"><a class=\"anchor\" href=\"#路径\">#</a> 路径</h2>\n<p>改用<br />\n <code>npm install hexo-renderer-marked --save</code> <br />\n 可行，且极好用<br />\n见：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLXJlbmRlcmVyLW1hcmtlZA==\">hexo-renderer-marked</span>，有丰富的扩展选项<br />\n_config 设置这两个。</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">marked</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">prependRoot</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">postAsset</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><p><img data-src=\"image-20240307202119236.png\" alt=\"\" /></p>\n<h1 id=\"文内链接\"><a class=\"anchor\" href=\"#文内链接\">#</a> 文内链接</h1>\n<p>见 <a href=\"/2024/03/07/hexo%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%AB%99%E6%A0%B7%E5%BC%8F/\" title=\"网站样式\">网站样式</a> 的站内跳转</p>\n",
            "tags": [
                "hexo使用",
                "Hexo"
            ]
        },
        {
            "id": "https://zyakmd.github.io/2024/03/06/hexo%E4%BD%BF%E7%94%A8/hexo+github/",
            "url": "https://zyakmd.github.io/2024/03/06/hexo%E4%BD%BF%E7%94%A8/hexo+github/",
            "title": "hexo + github 博客搭建",
            "date_published": "2024-03-06T11:57:31.000Z",
            "content_html": "<blockquote>\n<p>Hexo 是一个快速、简洁且高效的 <strong>博客框架</strong>。它使用 Markdown（或其他渲染引擎）解析文章，在数秒内，即可使用靓丽的主题生成静态网页<br />\n参考：<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d1c2hpYm8xMjMvYXJ0aWNsZS9kZXRhaWxzLzEyNDYxOTEyMw==\">【2023 最新版】Hexo+github 搭建个人博客并绑定个人域名_hexo 部署 github 绑定自定义域名 - CSDN 博客</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzExOTg2NzM=\"> Hexo 系列 (一) 搭建博客网站 - 阿里云开发者社区</span></p>\n</blockquote>\n<h1 id=\"npm-设置\"><a class=\"anchor\" href=\"#npm-设置\">#</a> npm 设置</h1>\n<p>NPM 是随同 NodeJS 一起安装的包管理工具，能解决 NodeJS 代码部署上的很多问题，常见的使用场景有以下几种：</p>\n<ul>\n<li>允许用户从 NPM 服务器下载别人编写的第三方包到本地使用。</li>\n<li>允许用户从 NPM 服务器下载并安装别人编写的命令行程序到本地使用。</li>\n<li>允许用户将自己编写的包或命令行程序上传到 NPM 服务器供别人使用。</li>\n</ul>\n<p><code>npm config set prefix &quot;C:\\Program Files\\nodejs\\node_global&quot;</code> <br />\n <code>npm config set cache &quot;C:\\Program Files\\nodejs\\node_cache&quot;</code> <br />\n 设置在这↑会有权限问题，麻烦。更改到外部↓<br />\n <code>npm config set prefix &quot;D:\\nodejs\\prefix&quot;</code> <br />\n <code>npm config set cache &quot;D:\\nodejs\\cache&quot;</code></p>\n<h1 id=\"hexo\"><a class=\"anchor\" href=\"#hexo\">#</a> Hexo</h1>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<p><code>npm install -g hexo</code></p>\n<p><img data-src=\"test.png\" alt=\"t\" /></p>\n<p>在 node 开发中使用 npm init 会生成一个 pakeage.json 文件，这个文件主要是用来记录这个项目的详细信息的，它会将我们在项目开发中所要用到的包，以及项目的详细信息等记录在这个项目中。<br />\n <code>hexo init</code>  命令可以将该文件夹初始化为 Hexo 根目录<br />\n <code>npm install</code>  命令可以自动安装依赖列表中列出的所有模块</p>\n<h2 id=\"测试\"><a class=\"anchor\" href=\"#测试\">#</a> 测试</h2>\n<p>输入命令  <code>hexo s</code>  启动本地站点<br />\n在浏览器地址栏中输入 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==\">http://localhost:4000/</span>， 就可以看到站点在本地运行的结果了</p>\n<h2 id=\"部署github\"><a class=\"anchor\" href=\"#部署github\">#</a> 部署 github</h2>\n<p>GitHub 提供了一项名为 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vemgvcGFnZXMvZ2V0dGluZy1zdGFydGVkLXdpdGgtZ2l0aHViLXBhZ2VzL2Fib3V0LWdpdGh1Yi1wYWdlcw==\">GitHub Pages</span> 的服务，它允许用户自定义项目首页替代默认的源码列表<br />\n因此，GitHub Pages 可以被认为是由用户编写的、托管在 GitHub 上的静态网页<br />\n而我们的目的，正是要把用 Hexo 在本地搭建的网站部署到 Github 上，使得站点可以被公共访问<br />\n有以下使用限制：</p>\n<ul>\n<li>GitHub Pages 源存储库的建议限制为 1 GB。 有关详细信息，请参阅 “<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vemgvcmVwb3NpdG9yaWVzL3dvcmtpbmctd2l0aC1maWxlcy9tYW5hZ2luZy1sYXJnZS1maWxlcy9hYm91dC1sYXJnZS1maWxlcy1vbi1naXRodWIjZmlsZS1hbmQtcmVwb3NpdG9yeS1zaXplLWxpbWl0YXRpb25z\">关于 GitHub 上的大文件</span>”</li>\n<li>发布的 GitHub Pages 站点不得超过 1 GB。</li>\n<li>如果花费的时间超过 10 分钟，GitHub Pages 部署将超时。</li>\n<li>GitHub Pages 站点的软带宽限制为每月 100 GB。</li>\n<li>GitHub Pages 站点的软限制为每小时 10 次生成。 如果使用自定义 GitHub Actions 工作流生成和发布站点，则此限制不适用</li>\n<li>为了为所有 GitHub Pages 站点提供一致的服务质量，可能会实施速率限制。 这些速率限制无意干扰 GitHub Pages 的合法使用。 如果你的请求触发了速率限制，你将收到相应响应，其中包含 HTTP 状态代码  <code>429</code>  以及信息性 HTML 正文。<br />\n1G 哪怕放不少静态图片资源都放不完，够用了，先白嫖着。</li>\n</ul>\n<h3 id=\"本地配置-个人信息\"><a class=\"anchor\" href=\"#本地配置-个人信息\">#</a> 本地配置 个人信息</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config user.name <span class=\"token string\">\"your-username\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config user.email <span class=\"token string\">\"your-email-address\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 都有时优先用本地，但全局必须有</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"your-username\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"your-email-address\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 查看配置</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 获取默认配置，如果当前地址中仓库信息不存在，则查看全局，然后再读取系统配置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--list</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 本地仓库配置 高优先级</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--local</span> <span class=\"token parameter variable\">--list</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 全局用户配置 中优先级</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--list</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 系统配置 低优先级</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--system</span> <span class=\"token parameter variable\">--list</span></pre></td></tr></table></figure><h3 id=\"安装插件\"><a class=\"anchor\" href=\"#安装插件\">#</a> 安装插件</h3>\n<p><code>npm install hexo-deployer-git --save</code></p>\n<h3 id=\"修改配置\"><a class=\"anchor\" href=\"#修改配置\">#</a> 修改配置</h3>\n<p><strong>根目录</strong> 下的  <code>_config.yml</code>  文件<br />\n属性与值之间需要留有一个空格</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/&lt;git_name<span class=\"token punctuation\">></span>/&lt;repositories_name<span class=\"token punctuation\">></span>.github.io.git</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\"># 设置默认的 main，不然会推到别的仓库去，只有在默认的才能在 xx.io 看到</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main</pre></td></tr></table></figure><h3 id=\"配置ssh\"><a class=\"anchor\" href=\"#配置ssh\">#</a> 配置 ssh</h3>\n<p>进入站点根文件夹，打开 git bash，输入  <code>ssh-keygen -t rsa -C &quot;your_email&quot;</code>  命令并一路回车获得密钥<br />\n完成后，根据提示信息中的文件地址  <code>/c/Users/user/.ssh/id_rsa.pub</code>  找到 id_rsa.pub 文件，复制文件里面的内容。<br />\n然后 g 在 ithub 设置中添加该 key，测试：</p>\n<p><img data-src=\"key.png\" alt=\"\" /></p>\n<h3 id=\"更换主题\"><a class=\"anchor\" href=\"#更换主题\">#</a> 更换主题</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzExOTg3NTY/c3BtPWEyYzZoLjI0ODc0NjMyLmV4cGVydC1wcm9maWxlLjMyLjM2Y2E0MDlhS2E0NGM4\">Hexo 系列 (四) NexT 主题配置 - 阿里云开发者社区</span></p>\n<h3 id=\"编译和发布网页\"><a class=\"anchor\" href=\"#编译和发布网页\">#</a> 编译和发布网页</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzExOTg3OTY/c3BtPWEyYzZoLjI0ODc0NjMyLmV4cGVydC1wcm9maWxlLjMxLjM2Y2E0MDlhS2E0NGM4\">Hexo 系列 (五) 撰写文章 - 阿里云开发者社区</span></p>\n<p>git bash 中输入命令  <code>hexo g</code>  生成静态文件，输入命令  <code>hexo d</code>  部署到 Github<br />\n 此时，打开 <span class=\"exturl\" data-url=\"aHR0cHM6Ly91c2VybmFtZS5naXRodWIuaW8=\">https://username.github.io</span> 就可以看见已经部署好的网站了，大功告成</p>\n<p>期间遇到了以下问题：</p>\n<p><img data-src=\"bushu.png\" alt=\"\" /></p>\n<p>产生原因：一般是因为服务器的 SSL 证书没有经过第三方机构的签署，所以才报错</p>\n<p><strong>解决方法 1：</strong><br />\n <code>git config --global http.sslVerify &quot;false&quot;</code>  好用，但有时候需要再次设置，不应该全局设置持久化了吗？</p>\n<p><strong>解决方法 2：</strong> 取消 git 的代理</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//取消http代理 </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> http.proxy </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//取消https代理 </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> <span class=\"token parameter variable\">--unset</span> https.proxy</pre></td></tr></table></figure><h2 id=\"常用命令\"><a class=\"anchor\" href=\"#常用命令\">#</a> 常用命令</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo clean <span class=\"token comment\">#用来清理缓存文件 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo generate <span class=\"token comment\">#生成文件 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hexo server <span class=\"token comment\">#运行本地服务器 </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>hexo deploy <span class=\"token comment\">#上传到服务器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>hexo new <span class=\"token operator\">&lt;</span>paper_name<span class=\"token operator\">></span> <span class=\"token comment\">#新建文章</span></pre></td></tr></table></figure><h2 id=\"图片问题\"><a class=\"anchor\" href=\"#图片问题\">#</a> 图片问题</h2>\n<p>最终方案见<br />\n <a href=\"/2024/03/07/hexo%E4%BD%BF%E7%94%A8/%E5%9C%A8obisidian%E4%B8%8A%E4%BD%BF%E7%94%A8/\" title=\"在obisidian上使用\">在obisidian上使用</a></p>\n<p>一开始用的，但问题多多↓<br />\n参考：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lpeXVuZ2VudC9oZXhvLWFzc2V0LWltZy9pc3N1ZXMvMw==\">路径中有空格时，因为 markdown 需要 encode 空格的原因，会匹配失败・Issue #3・yiyungent/hexo-asset-img・GitHub</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lpeXVuZ2VudC9oZXhvLWFzc2V0LWltZw==\">GitHub - yiyungent/hexo-asset-img: 🍰 Hexo local image plugin. | Hexo 本地图片插件：转换 图片相对路径 为 asset_img</span></p>\n<p>安装 hexo-asset-img:   <code>npm install hexo-asset-img --save （过时了）</code> <br />\n用最新的： <code>npm install git://github.com/yiyungent/hexo-asset-img.git#main</code> <br />\n 在 md 文件目录下创建同名文件夹（添加该模块后 hexo g 也会自动生成）放图片。<br />\nmd 中调用：</p>\n<figure class=\"highlight md\"><figcaption data-lang=\"Markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">name</span>](<span class=\"token url\">md_name/pic_name.png</span>)</span></pre></td></tr></table></figure><p><strong>注意：</strong> 图片名字和 title 不能有数字，否则会导致图像宽度变成 1，见上面 github 中的第一个 issue。</p>\n<p>纯 html 格式，能调整大小、位置，但编译成静态资源路径有问题</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>center<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span><span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>650px</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">align</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>center<span class=\"token punctuation\">'</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span><span class=\"token value css language-css\"><span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span><span class=\"token unit\">px</span><span class=\"token punctuation\">;</span><span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span>kaiti<span class=\"token punctuation\">;</span><span class=\"token property\">color</span><span class=\"token punctuation\">:</span><span class=\"token color\">red</span></span><span class=\"token punctuation\">'</span></span></span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure>",
            "tags": [
                "hexo使用",
                "Hexo"
            ]
        }
    ]
}